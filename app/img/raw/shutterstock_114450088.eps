%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 14.0.0
%%For: (gizele) ()
%%Title: (pattern_blue.eps)
%%CreationDate: 9/24/2012 3:35 PM
%%Canvassize: 16383
%%BoundingBox: 55 261 556 762
%%HiResBoundingBox: 55.2422 261.752 555.2422 761.7515
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%CMYKProcessColor: 1 1 1 1 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 306.5 395.5 306.5 395.5
%AI3_TileBox: 8.33984 -24.96 603.6602 816.96
%AI3_DocumentPreview: Header
%AI5_ArtSize: 612 792
%AI5_RulerUnits: 2
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 2
%AI8_OpenToView: -1149.3262 1800.3208 0.3333 1036 855 18 0 0 9 122 0 0
%AI5_OpenViewLayers: 77
%%PageOrigin:0 0
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.6
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps true put
userdict /_forceToCMYK true put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRider
currentpacking true setpacking
setpacking
%AI3_EndRider
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Tracing Object) (Tracing) (TracingSuite.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (flare.aip)
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (Symbolism.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (PathFinder Suite.aip)
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
12 Bn
%AI5_BeginGradient: (Copper Radial)
(Copper Radial) 1 4 Bd
[
0
<
0A0B0B0C0D0D0E0F0F1011111212131414151616171818191A1A1B1C1C1D1E1E1F20202122222324
24252627272829292A2B2B2C2D2D2E2F2F303131323333343536
>
<
242525262728292A2B2C2D2E2F303132333435363738393A3B3C3D3D3E3F40414243444546474849
4A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60616263
>
<
0001010202030404050606070808090A0A0B0C0C0D0E0E0F1010111212131414151616171818191A
1A1B1C1C1D1E1E1F2020212222232424252627272829292A2B2B
>
1 %_Br
<
00010102020303040405060607070808090A0A0B0B0C0C0D0E0E0F0F101111121213131415151616
17181819191A1B1B1C1C1D1E1E1F1F202121222223242425252627272828292A2A2B2B2C2D2D2E2E
2F30303131323333343435363637383839393A3B3B3C3C3D3E3E3F3F404141424343444445464647
474849494A4A4B4C4C4D4E4E4F4F50515152525354545556565757585959
>
<
3636373839393A3B3C3D3D3E3F4041424243444546464748494A4B4B4C4D4E4F5051515253545556
565758595A5B5C5C5D5E5F6061626263646566676868696A6B6C6D6E6E6F70717273747475767778
797A7A7B7C7D7E7F8081818283848586878788898A8B8C8D8E8E8F90919293949595969798999A9B
9C9C9D9E9FA0A1A2A3A3A4A5A6A7A8A9AAAAABACADAEAFB0B1B2B2B3B4B5
>
<
636465666768696A6B6C6C6D6E6F707172737475767778797A7B7C7C7D7E7F808182838485868788
898A8B8C8D8E8F90919293949596979898999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAF
B0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7
D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5
>
<
2B2B2C2C2C2C2C2C2C2C2C2D2D2D2D2D2D2D2D2D2E2E2E2E2E2E2E2E2F2F2F2F2F2F2F2F2F303030
30303030303131313131313131323232323232323232333333333333333334343434343434343535
3535353535353536363636363636363737373737373737383838383838383839393939393939393A
3A3A3A3A3A3A3A3A3B3B3B3B3B3B3B3B3C3C3C3C3C3C3C3C3D3D3D3D3D3D
>
1 %_Br
<
595A5A5A5A5B5B5B5B5C5C5C5C5D5D5D5D5E5E5E5E5F5F5F5F606060606161616162626262636363
636464646465656565666666666767676768686868696969696A6A6A6A6B6B6B6B6C6C6C6C6D6D6D
6D6E
>
<
B5B6B6B7B8B8B9BABABBBCBCBDBEBEBFC0C0C1C2C2C3C4C4C5C6C6C7C8C8C9CACACBCCCCCDCECECF
CFD0D1D1D2D3D3D4D5D5D6D7D7D8D9D9DADBDBDCDDDDDEDFDFE0E1E1E2E3E3E4E5E5E6E7E7E8E9E9
EAEB
>
<
F5F5F4F4F4F4F3F3F3F3F2F2F2F2F1F1F1F1F0F0F0F0EFEFEFEFEEEEEEEDEDEDEDECECECECEBEBEB
EBEAEAEAEAE9E9E9E9E8E8E8E8E7E7E7E7E6E6E6E6E5E5E5E5E4E4E4E4E3E3E3E3E2E2E2E2E1E1E1
E1E0
>
<
3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364
656768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D
8E8F
>
1 %_Br
[
0 0.04 0.14 0 1 51.0204 0.395812 %_BS
%_0 0.04 0.14 0 1 51.0204 0.395812 Bs
0 0.21 0.39 0.17 1 51.0204 30.8989 %_BS
%_0 0.21 0.39 0.17 1 51.0204 30.8989 Bs
0.35 0.71 0.96 0.24 1 50 78.0899 %_BS
%_0.35 0.71 0.96 0.24 1 50 78.0899 Bs
0.43 0.92 0.88 0.56 1 50 100 %_BS
%_0.43 0.92 0.88 0.56 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Desert Sunset)
(Desert Sunset) 0 6 Bd
[
<
38393A3A3B3C3D3E3E3F404141424344444546474748494A4A4B4C4C4D4E4F4F5051515253535455
555657575859595A5B5B5C5D5D5E5F5F60616162626364646565666767686869696A6B6B6C6C6D6D
6E6E6F6F7070717172727373747475757676777778787879797A7A7B7B7B7C7C7C7D7D7E7E7E7E7F
7F7F80808080818181818282828282
>
<
5758595A5B5C5D5E5F60616263636465666768696A6B6C6D6E6F70717272737475767778797A7A7B
7C7D7E7F808081828384858586878889898A8B8C8D8D8E8F90909192939394959696979899999A9B
9B9C9D9D9E9F9FA0A1A1A2A2A3A4A4A5A5A6A7A7A8A8A9A9AAAAABABACACADADAEAEAFAFB0B0B1B1
B1B2B2B2B3B3B3B4B4B4B4B5B5B5B5
>
<
2E2E2F2F2F3030303131313232323333333434343535353636363737373838383939393A3A3A3A3B
3B3B3C3C3C3D3D3D3D3E3E3E3F3F3F3F404040414141414242424243434344444444454545454646
464646474747474848484849494949494A4A4A4A4A4B4B4B4B4B4C4C4C4C4C4C4D4D4D4D4D4D4D4E
4E4E4E4E4E4E4E4F4F4F4F4F4F4F4F
>
0
1 %_Br
<
1F1F202122222324242526272728292A2A2B2C2C2D2E2F2F303132323334343536373738
>
<
4040414242434444454646474848494A4A4B4C4C4D4E4E4F4F5051515253535455555657
>
<
5251504F4E4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E
>
0
1 %_Br
<
050606070808090A0A0B0B0C0D0D0E0F0F101111121213141415151617171818191A1A1B1B1C1C1D
1E1E1F
>
<
2B2C2C2D2D2E2E2F2F30303131323233333434353536363737383839393A3A3B3B3C3C3D3D3E3E3F
3F3F40
>
<
7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5B5A595857565554
535252
>
0
1 %_Br
<
00000000000000000001010101010101010101010101010101010202020202020202020202020202
02020303030303030303030303030303030304040404040404040404040404040405050505050505
050505
>
<
7A7A79787776757474737271706F6E6D6C6B6A69686766666564636261605F5E5D5C5B5A59585756
5554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E
2D2C2B
>
<
9E9E9D9D9D9C9C9B9B9B9A9A99999998989797969696959594949393939292919190908F8F8F8E8E
8D8D8C8C8C8B8B8A8A898988888887878686858584848383838282818180807F7F7E7E7E7D7D7C7C
7B7B7A
>
<
03030202020202020202020202020202020202020202020202020202020202020202020201010101
01010101010101010101010101010101010101010101010101010100000000000000000000000000
000000
>
1 %_Br
<
05050505050505050404040404040404040404030303030303030303030303020202020202020202
020202010101010101010101010101000000000000
>
<
91919190908F8F8F8E8E8E8D8D8C8C8C8B8B8A8A8A89898988888787878686858585848484838382
828281818180807F7F7F7E7E7D7D7D7C7C7C7B7B7A
>
<
DBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4
B3B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E
>
<
2928282726262524242322222121201F1F1E1D1D1C1B1B1A19191818171616151414131212111110
0F0F0E0D0D0C0B0B0A0A0908080706060504040303
>
1 %_Br
[
0.51 0.71 0.31 0 1 50 100 %_BS
%_0.51 0.71 0.31 0 1 50 100 Bs
0.22 0.34 0.18 0 1 38.4615 71.0424 %_BS
%_0.22 0.34 0.18 0 1 38.4615 71.0424 Bs
0.12 0.25 0.32 0 1 50 53.6679 %_BS
%_0.12 0.25 0.32 0 1 50 53.6679 Bs
0.02 0.17 0.48 0 1 48 38.764 %_BS
%_0.02 0.17 0.48 0 1 48 38.764 Bs
0.000031 0.48 0.62 0.01 1 51.6129 13.1273 %_BS
%_0.000031 0.48 0.62 0.01 1 51.6129 13.1273 Bs
0.02 0.57 0.86 0.16 1 50 0 %_BS
%_0.02 0.57 0.86 0.16 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Fade to Black)
(Fade to Black) 0 2 Bd
[
0
0 %_Br
[
0 0 0 1 1 50 100 %_BS
%_0 0 0 1 1 50 100 Bs
0 0 0 1 1 50 0 %_BS
%_0 0 0 1 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Linear Gradient)
(Linear Gradient) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 0 1 1 50 100 %_BS
%_0 0 0 1 1 50 100 Bs
0 0 0 0 1 50 0 %_BS
%_0 0 0 0 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Radial Gradient)
(Radial Gradient) 1 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 0 0 1 50 0 %_BS
%_0 0 0 0 1 50 0 Bs
0 0 0 1 1 50 100 %_BS
%_0 0 0 1 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Soft Black Vignette)
(Soft Black Vignette) 1 3 Bd
[
0.2
0.2
0.2
1
1 %_Br
0.2
0.2
0.2
1
1 %_Br
[
0.2 0.2 0.2 1 1 68.3944 73.8792 %_BS
%_0.2 0.2 0.2 1 1 68.3944 73.8792 Bs
0.2 0.2 0.2 1 1 31.8603 88.7329 %_BS
%_0.2 0.2 0.2 1 1 31.8603 88.7329 Bs
0.2 0.2 0.2 1 1 50 100 %_BS
%_0.2 0.2 0.2 1 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 17)
(Unnamed gradient 17) 0 6 Bd
[
<
FEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7
D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AF
AEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887
868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F
5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837
363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F
0E0D0C0B0A09080706050403020100
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFE
FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE
FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFD
FDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFD
FDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFC
FCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFB
FBFBFBFBFBFBFBFBFBFBFBFBFBFBFB
>
<
2E2E2E2E2E2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D
2D2D2D2D2D2D2D2D2D2D2D2D2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C
2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B
2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2A2A2A2A2A2A2A2A2A2A2A2A2A
2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A292929292929
29292929292929292929292929292929292929292929292929292929292929292929292929292929
292928282828282828282828282828
>
<
2B2B2B2B2A2A2A2A2A2A292929292929282828282827272727272726262626262625252525252524
24242424242323232323232222222222222121212121212020202020201F1F1F1F1F1F1E1E1E1E1E
1D1D1D1D1D1D1C1C1C1C1C1C1B1B1B1B1B1B1A1A1A1A1A1A19191919191918181818181817171717
17171616161616161515151515151414141414131313131313121212121212111111111111101010
1010100F0F0F0F0F0F0E0E0E0E0E0E0D0D0D0D0D0D0C0C0C0C0C0C0B0B0B0B0B0B0A0A0A0A0A0909
09090909080808080808070707070707060606060606050505050505040404040404030303030303
020202020202010101010101000000
>
1 %_Br
<
C3C3C4C4C4C5C5C5C5C6C6C6C7C7C7C8C8C8C8C9C9C9CACACACBCBCBCCCCCCCCCDCDCDCECECECFCF
CFD0D0D0D0D1D1D1D2D2D2D3D3D3D4D4D4D4D5D5D5D6D6D6D7D7D7D7D8D8D8D9D9D9DADADADBDBDB
DBDCDCDCDDDDDDDEDEDEDFDFDFDFE0E0E0E1E1E1E2E2E2E3E3E3E3E4E4E4E5E5E5E6E6E6E6E7E7E7
E8E8E8E9E9E9EAEAEAEAEBEBEBECECECEDEDEDEEEEEEEEEFEFEFF0F0F0F1F1F1F2F2F2F2F3F3F3F4
F4F4F5F5F5F5F6F6F6F7F7F7F8F8F8F9F9F9F9FAFAFAFBFBFBFCFCFCFDFDFDFDFEFEFE
>
<
3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364
65666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C
8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4
B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDC
DDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
3B3B3B3B3B3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3939393939393939393939393939393838383838
38383838383838383837373737373737373737373737373736363636363636363636363636363635
35353535353535353535353535343434343434343434343434343434333333333333333333333333
33333332323232323232323232323232323131313131313131313131313131313030303030303030
3030303030302F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2E2E2E2E2E2E2E2E2E2E2E2E2E2E
>
<
00010101010102020202030303030304040404050505050506060606060707070708080808080909
09090A0A0A0A0A0B0B0B0B0C0C0C0C0C0D0D0D0D0E0E0E0E0E0F0F0F0F1010101010111111111212
12121213131313131414141415151515151616161617171717171818181819191919191A1A1A1A1B
1B1B1B1B1C1C1C1C1D1D1D1D1D1E1E1E1E1F1F1F1F1F202020202021212121222222222223232323
2424242424252525252626262626272727272828282828292929292A2A2A2A2A2B2B2B
>
1 %_Br
<
DADADAD9D9D9D9D9D9D9D9D8D8D8D8D8D8D8D8D8D7D7D7D7D7D7D7D7D6D6D6D6D6D6D6D6D6D5D5D5
D5D5D5D5D5D5D4D4D4D4D4D4D4D4D3D3D3D3D3D3D3D3D3D2D2D2D2D2D2D2D2D1D1D1D1D1D1D1D1D1
D0D0D0D0D0D0D0D0D0CFCFCFCFCFCFCFCFCECECECECECECECECECDCDCDCDCDCDCDCDCDCCCCCCCCCC
CCCCCCCBCBCBCBCBCBCBCBCBCACACACACACACACAC9C9C9C9C9C9C9C9C9C8C8C8C8C8C8C8C8C8C7C7
C7C7C7C7C7C7C6C6C6C6C6C6C6C6C6C5C5C5C5C5C5C5C5C5C4C4C4C4C4C4C4C4C3C3C3C3C3
>
<
3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E
3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D
3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D
3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D
3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B
>
<
1A1A1A1A1A1A19191919191919191818181818181817171717171717171616161616161615151515
15151515141414141414141313131313131313121212121212121211111111111111101010101010
10100F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0A
0A0A0A0A0A0A0A090909090909090908080808080808070707070707070706060606060606050505
05050505050404040404040403030303030303030202020202020202010101010101010000
>
1 %_Br
<
1415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B
3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60616263
6465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7F808182838485868788898A8B8C
8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4
B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DA
>
<
000001010102020203030303040404050505060606070707080808080909090A0A0A0B0B0B0C0C0C
0D0D0D0D0E0E0E0F0F0F101010111111121212131313131414141515151616161717171818181819
19191A1A1A1B1B1B1C1C1C1D1D1D1D1E1E1E1F1F1F20202021212122222223232323242424252525
262626272727282828282929292A2A2A2B2B2B2C2C2C2D2D2D2D2E2E2E2F2F2F3030303131313232
3232333333343434353535363636373737383838383939393A3A3A3B3B3B3C3C3C3D3D3D3D3E
>
<
EDEDEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1
F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4
F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8
F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFCFC
FCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFF
>
<
00000000010101010101010102020202020202030303030303030304040404040404050505050505
05050606060606060607070707070707070808080808080809090909090909090A0A0A0A0A0A0A0B
0B0B0B0B0B0B0B0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F101010
10101010111111111111111112121212121212131313131313131314141414141414151515151515
15151616161616161616171717171717171818181818181818191919191919191A1A1A1A1A1A
>
1 %_Br
<
00000000000000010101010101010101010101020202020202020202020202020303030303030303
03030303040404040404040404040404040505050505050505050505050606060606060606060606
06060707070707070707070707070708080808080808080808080809090909090909090909090909
0A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D
0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F1010101010
10101010101010101111111111111111111111111212121212121212121212121213131313131313
131313131314141414141414141414
>
<
FEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7
D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AF
AEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887
868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F
5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837
363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F
0E0D0C0B0A09080706050403020100
>
<
FFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFC
FCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFA
F9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7
F7F7F7F6F6F6F6F6F6F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4
F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1
F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEFEFEFEFEFEFEFEEEE
EEEEEEEEEEEEEEEEEEEEEEEEEDEDED
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000
>
1 %_Br
[
0.000031 0.985199 0.157778 0.000031 1 50 100 %_BS
%_0.000031 0.985199 0.157778 0.000031 1 50 100 Bs
0.997467 1 0.178775 0.168856 1 50 80 %_BS
%_0.997467 1 0.178775 0.168856 1 50 80 Bs
0.764675 0.238682 0.230686 0.001251 1 50 60 %_BS
%_0.764675 0.238682 0.230686 0.001251 1 50 60 Bs
0.85388 0.242313 1 0.102846 1 50 40 %_BS
%_0.85388 0.242313 1 0.102846 1 50 40 Bs
0.079316 0.000031 0.930816 0.000031 1 50 20 %_BS
%_0.079316 0.000031 0.930816 0.000031 1 50 20 Bs
0.000031 0.99472 1 0.001282 1 50 0 %_BS
%_0.000031 0.99472 1 0.001282 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 18)
(Unnamed gradient 18) 1 6 Bd
[
<
00000000000000010101010101010101010101020202020202020202020202020303030303030303
03030303040404040404040404040404040505050505050505050505050606060606060606060606
06060707070707070707070707070708080808080808080808080809090909090909090909090909
0A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D
0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F1010101010
10101010101010101111111111111111111111111212121212121212121212121213131313131313
131313131314141414141414141414
>
<
FEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7
D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AF
AEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887
868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F
5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837
363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F
0E0D0C0B0A09080706050403020100
>
<
FFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFC
FCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFA
F9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7
F7F7F7F6F6F6F6F6F6F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4
F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1
F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEFEFEFEFEFEFEFEEEE
EEEEEEEEEEEEEEEEEEEEEEEEEDEDED
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000
>
1 %_Br
<
1415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B
3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60616263
6465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7F808182838485868788898A8B8C
8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4
B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DA
>
<
000001010102020203030303040404050505060606070707080808080909090A0A0A0B0B0B0C0C0C
0D0D0D0D0E0E0E0F0F0F101010111111121212131313131414141515151616161717171818181819
19191A1A1A1B1B1B1C1C1C1D1D1D1D1E1E1E1F1F1F20202021212122222223232323242424252525
262626272727282828282929292A2A2A2B2B2B2C2C2C2D2D2D2D2E2E2E2F2F2F3030303131313232
3232333333343434353535363636373737383838383939393A3A3A3B3B3B3C3C3C3D3D3D3D3E
>
<
EDEDEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1
F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4
F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8
F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFCFC
FCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFF
>
<
00000000010101010101010102020202020202030303030303030304040404040404050505050505
05050606060606060607070707070707070808080808080809090909090909090A0A0A0A0A0A0A0B
0B0B0B0B0B0B0B0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F101010
10101010111111111111111112121212121212131313131313131314141414141414151515151515
15151616161616161616171717171717171818181818181818191919191919191A1A1A1A1A1A
>
1 %_Br
<
DADADAD9D9D9D9D9D9D9D9D8D8D8D8D8D8D8D8D8D7D7D7D7D7D7D7D7D6D6D6D6D6D6D6D6D6D5D5D5
D5D5D5D5D5D5D4D4D4D4D4D4D4D4D3D3D3D3D3D3D3D3D3D2D2D2D2D2D2D2D2D1D1D1D1D1D1D1D1D1
D0D0D0D0D0D0D0D0D0CFCFCFCFCFCFCFCFCECECECECECECECECECDCDCDCDCDCDCDCDCDCCCCCCCCCC
CCCCCCCBCBCBCBCBCBCBCBCBCACACACACACACACAC9C9C9C9C9C9C9C9C9C8C8C8C8C8C8C8C8C8C7C7
C7C7C7C7C7C7C6C6C6C6C6C6C6C6C6C5C5C5C5C5C5C5C5C5C4C4C4C4C4C4C4C4C3C3C3C3C3
>
<
3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E
3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D
3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D
3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D
3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B
>
<
1A1A1A1A1A1A19191919191919191818181818181817171717171717171616161616161615151515
15151515141414141414141313131313131313121212121212121211111111111111101010101010
10100F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0A
0A0A0A0A0A0A0A090909090909090908080808080808070707070707070706060606060606050505
05050505050404040404040403030303030303030202020202020202010101010101010000
>
1 %_Br
<
C3C3C4C4C4C5C5C5C5C6C6C6C7C7C7C8C8C8C8C9C9C9CACACACBCBCBCCCCCCCCCDCDCDCECECECFCF
CFD0D0D0D0D1D1D1D2D2D2D3D3D3D4D4D4D4D5D5D5D6D6D6D7D7D7D7D8D8D8D9D9D9DADADADBDBDB
DBDCDCDCDDDDDDDEDEDEDFDFDFDFE0E0E0E1E1E1E2E2E2E3E3E3E3E4E4E4E5E5E5E6E6E6E6E7E7E7
E8E8E8E9E9E9EAEAEAEAEBEBEBECECECEDEDEDEEEEEEEEEFEFEFF0F0F0F1F1F1F2F2F2F2F3F3F3F4
F4F4F5F5F5F5F6F6F6F7F7F7F8F8F8F9F9F9F9FAFAFAFBFBFBFCFCFCFDFDFDFDFEFEFE
>
<
3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364
65666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C
8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4
B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDC
DDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
3B3B3B3B3B3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3939393939393939393939393939393838383838
38383838383838383837373737373737373737373737373736363636363636363636363636363635
35353535353535353535353535343434343434343434343434343434333333333333333333333333
33333332323232323232323232323232323131313131313131313131313131313030303030303030
3030303030302F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2E2E2E2E2E2E2E2E2E2E2E2E2E2E
>
<
00010101010102020202030303030304040404050505050506060606060707070708080808080909
09090A0A0A0A0A0B0B0B0B0C0C0C0C0C0D0D0D0D0E0E0E0E0E0F0F0F0F1010101010111111111212
12121213131313131414141415151515151616161617171717171818181819191919191A1A1A1A1B
1B1B1B1B1C1C1C1C1D1D1D1D1D1E1E1E1E1F1F1F1F1F202020202021212121222222222223232323
2424242424252525252626262626272727272828282828292929292A2A2A2A2A2B2B2B
>
1 %_Br
<
FEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7
D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AF
AEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887
868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F
5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837
363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F
0E0D0C0B0A09080706050403020100
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFE
FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE
FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFD
FDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFD
FDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFC
FCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFB
FBFBFBFBFBFBFBFBFBFBFBFBFBFBFB
>
<
2E2E2E2E2E2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D
2D2D2D2D2D2D2D2D2D2D2D2D2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C
2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B
2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2A2A2A2A2A2A2A2A2A2A2A2A2A
2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A292929292929
29292929292929292929292929292929292929292929292929292929292929292929292929292929
292928282828282828282828282828
>
<
2B2B2B2B2A2A2A2A2A2A292929292929282828282827272727272726262626262625252525252524
24242424242323232323232222222222222121212121212020202020201F1F1F1F1F1F1E1E1E1E1E
1D1D1D1D1D1D1C1C1C1C1C1C1B1B1B1B1B1B1A1A1A1A1A1A19191919191918181818181817171717
17171616161616161515151515151414141414131313131313121212121212111111111111101010
1010100F0F0F0F0F0F0E0E0E0E0E0E0D0D0D0D0D0D0C0C0C0C0C0C0B0B0B0B0B0B0A0A0A0A0A0909
09090909080808080808070707070707060606060606050505050505040404040404030303030303
020202020202010101010101000000
>
1 %_Br
[
0.000031 0.99472 1 0.001282 1 50 0 %_BS
%_0.000031 0.99472 1 0.001282 1 50 0 Bs
0.079316 0.000031 0.930816 0.000031 1 50 20 %_BS
%_0.079316 0.000031 0.930816 0.000031 1 50 20 Bs
0.85388 0.242313 1 0.102846 1 50 40 %_BS
%_0.85388 0.242313 1 0.102846 1 50 40 Bs
0.764675 0.238682 0.230686 0.001251 1 50 60 %_BS
%_0.764675 0.238682 0.230686 0.001251 1 50 60 Bs
0.997467 1 0.178775 0.168856 1 50 80 %_BS
%_0.997467 1 0.178775 0.168856 1 50 80 Bs
0.000031 0.985199 0.157778 0.000031 1 50 100 %_BS
%_0.000031 0.985199 0.157778 0.000031 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 20)
(Unnamed gradient 20) 0 2 Bd
[
<
0001020303040506070708090A0B0C0C0D0E0F1011111213141516161718191A1B1B1C1D1E1F2020
212223242525262728292A2A2B2C2D2E2F2F3031323334343536373839393A3B3C3D3E3E3F404142
4343444546474848494A4B4C4D4D4E4F5051525253545556575758595A5B5B5C5D5E5F6060616263
646565666768696A6A6B6C6D6E6F6F7071727374747576777879797A7B7C7D7E7E7F808182838384
8586878888898A8B8C8D8D8E8F9091929293949596979798999A9B9C9C9D9E9FA0A1A1A2A3A4A5A6
A6A7A8A9AAABABACADAEAFB0B0B1B2B3B4B4B5B6B7B8B9B9BABBBCBDBEBEBF
>
<
000102020304050506070808090A0B0B0C0D0E0E0F101111121314141516171718191A1A1B1C1D1D
1E1F20202122232324252626272829292A2B2C2C2D2E2F2F303132323334353636373839393A3B3C
3C3D3E3F3F404142424344454546474848494A4B4B4C4D4E4E4F505151525354545556575758595A
5A5B5C5D5D5E5F606061626363646566666768696A6A6B6C6D6D6E6F707071727373747576767778
79797A7B7C7C7D7E7F7F808182828384858586878888898A8B8B8C8D8E8E8F909191929394949596
979798999A9A9B9C9D9D9E9FA0A1A1A2A3A4A4A5A6A7A7A8A9AAAAABACADAD
>
<
000101020304040506070708090A0A0B0C0D0D0E0F10101112131314151616171819191A1B1C1C1D
1E1E1F202121222324242526272728292A2A2B2C2D2D2E2F30303132333334353636373838393A3B
3B3C3D3E3E3F404141424344444546474748494A4A4B4C4D4D4E4F50505152525354555556575858
595A5B5B5C5D5E5E5F606161626364646566676768696A6A6B6C6C6D6E6F6F707172727374757576
777878797A7B7B7C7D7E7E7F80818182838484858686878889898A8B8C8C8D8E8F8F909192929394
959596979898999A9B9B9C9D9E9E9FA0A1A1A2A3A3A4A5A6A6A7A8A9A9AAAB
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6
>
1 %_Br
[
0.75021 0.679683 0.670222 0.90164 1 50 100 %_BS
%_0.75021 0.679683 0.670222 0.90164 1 50 100 Bs
0.000031 0.000031 0.000031 0.000031 1 50 0 %_BS
%_0.000031 0.000031 0.000031 0.000031 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 21)
(Unnamed gradient 21) 0 5 Bd
[
<
04050505050505050505050505060606060606060606060606070707070707070707070707070808
080808080808080808080809090909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0A0A0B
0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D
0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F
0F0F0F10101010101010101010101010101010101010101010111111111111111111111111111111
11111111111111111111111212121212121212121212121212121212121212121212121212121212
1212121212121212121213131313131313131313131313131313
>
<
E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCDCCCBCAC9C8C7C6C5C4C3C2C1C0BF
BFBEBDBCBBBAB9B8B7B6B6B5B4B3B2B1B0AFAFAEADACABAAA9A8A8A7A6A5A4A3A3A2A1A09F9E9E9D
9C9B9A9A9998979696959493929291908F8F8E8D8C8B8B8A89888887868585848383828180807F7E
7E7D7C7B7B7A7979787777767575747373727171706F6F6E6D6D6C6B6B6A6A696868676766656564
64636262616160605F5E5E5D5D5C5C5B5B5A5A59595857575656555554545353535252515150504F
4F4E4E4E4D4D4C4C4B4B4B4A4A494949484848474746464645454544444443434343424242414141
41404040403F3F3F3F3F3E3E3E3E3E3E3D3D3D3D3D3D3D3D3D3D
>
<
FFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFD
FDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFC
FCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFA
FAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9
F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8
F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7
F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000
>
1 %_Br
<
14141414141414141414141313131313131313131313131313131212121212121212121212121212
11111111111111111111111111111110101010101010101010101010100F0F0F0F0F0F0F0F0F0F0F
0F0F0F0F0E0E0E0E0E0E0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C
0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A0A0A0A0A0A09090909
09090909090909090909090808080808080808080808080808070707070707070707070707070707
060606060606060606060606060605050505050505050505050505050504
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5
>
<
EDEDEEEEEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0
F0F1F1F1F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F3
F4F4F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F6F7
F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9F9F9FAFA
FAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFBFBFCFCFCFCFCFCFCFCFCFCFCFCFCFDFDFD
FDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFFFF
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
>
1 %_Br
<
1F1F1F1F1F1F1F1F1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1D1D1D1D
1D1D1D1D1D1D1D1D1D1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1B1B
1B1B1B1B1B1B1B1B1B1B1B1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A191919191919191919
19191919191919191919191918181818181818181818181818181818181818181717171717171717
17171717171717171717171717161616161616161616161616161616161616161615151515151515
1515151515151515151515151515141414141414
>
<
848382828181807F7F7E7E7D7C7C7B7B7A79797878777676757574737372727170706F6F6E6D6D6C
6C6B6A6A69696867676666656464636362616160605F5E5E5D5D5C5B5B5A5A595858575756555554
545352525151504F4F4E4E4D4C4C4B4B4A49494848474646454544434342424140403F3E3E3D3D3C
3B3B3A3A393838373736353534343332323131302F2F2E2E2D2C2C2B2B2A29292828272626252524
232322222120201F1F1E1D1D1C1C1B1A1A19191817171616151414131312111110100F0E0E0D0D0C
0B0B0A0A09080807070605050404030202010100
>
<
131415161718191A1B1B1C1D1E1F202122232425262728292A2B2C2D2E2F30313233343536373839
3A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061
62636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F80818283848586878889
8A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1
B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9
DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECED
>
0.000031
1 %_Br
<
C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99
98979694939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A79787776757473727170
6F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A4948
47464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A29282726252423222120
1F
>
<
2E2F303031313232333334343535363637383839393A3A3B3B3C3C3D3D3E3E3F3F40414142424343
44444545464647474849494A4A4B4B4C4C4D4D4E4E4F4F5051515252535354545555565657575859
595A5A5B5B5C5C5D5D5E5E5F5F6060616262636364646565666667676868696A6A6B6B6C6C6D6D6E
6E6F6F707071727273737474757576767777787879797A7B7B7C7C7D7D7E7E7F7F80808181828383
84
>
<
424141414040403F3F3F3F3E3E3E3D3D3D3D3C3C3C3B3B3B3A3A3A3A393939383838383737373636
363535353534343433333333323232313131303030302F2F2F2E2E2E2E2D2D2D2C2C2C2B2B2B2B2A
2A2A292929292828282727272626262625252524242424232323222222212121212020201F1F1F1F
1E1E1E1D1D1D1C1C1C1C1B1B1B1A1A1A1A1919191818181817171716161615151515141414131313
13
>
0.000031
1 %_Br
[
0.073152 0.237522 0.969482 0.000031 1 50 100 %_BS
%_0.073152 0.237522 0.969482 0.000031 1 50 100 Bs
0.017517 0.897581 1 0.001343 1 35.5263 79.7753 %_BS
%_0.017517 0.897581 1 0.001343 1 35.5263 79.7753 Bs
0.079316 0.000031 0.930816 0.000031 1 50 55.618 %_BS
%_0.079316 0.000031 0.930816 0.000031 1 50 55.618 Bs
0.121096 0.516075 0.072572 0.000031 1 50 44.9438 %_BS
%_0.121096 0.516075 0.072572 0.000031 1 50 44.9438 Bs
0.751858 0.182254 0.256992 0.000031 1 50 19.1011 %_BS
%_0.751858 0.182254 0.256992 0.000031 1 50 19.1011 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 396)
(Unnamed gradient 396) 1 2 Bd
[
0.000031
0.000031
0.000031
0.000031
1 %_Br
[
0.000031 0.000031 0.000031 0.000031 1 87 44.4444 %_BS
%_0.000031 0.000031 0.000031 0.000031 1 87 44.4444 Bs
0.000031 0.000031 0.000031 0.000031 1 50 100 %_BS
%_0.000031 0.000031 0.000031 0.000031 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 72)
(Unnamed gradient 72) 0 2 Bd
[
<
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCDCDCDCDCDCDCDCDCDCDCDCDCDCDCD
CDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCD
CDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCECECECECECECECECECE
CECE
>
<
09090A0B0C0C0D0E0E0F10111112131414151617171819191A1B1C1C1D1E1F1F2021222223242425
26272728292A2A2B2C2D2D2E2F2F303132323334353536373838393A3A3B3C3D3D3E3F4040414242
4344454546474848494A4B4B4C4D4D4E4F50505152535354555656575858595A5B5B5C5D5E5E5F60
616162636364656666676869696A6B6C6C6D6E6E6F70717172737474757677777879797A7B7C7C7D
7E7F
>
<
FFFFFFFFFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFBFBFBFBFBFBFBFAFAFAFAFAFAFA
FAF9F9F9F9F9F9F9F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F5F5F5F5F5F5F5F4F4F4
F4F4F4F4F4F3F3F3F3F3F3F3F2F2F2F2F2F2F2F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0EFEFEFEFEFEF
EFEEEEEEEEEEEEEEEDEDEDEDEDEDEDEDECECECECECECECEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAE9E9
E9E9
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F4041424344454647494A4B4C4D4E4F50
5152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778
797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0
A1A2
>
1 %_Br
[
0.806394 0.496437 0.913573 0.634302 1 50 98.3146 %_BS
%_0.806394 0.496437 0.913573 0.634302 1 50 98.3146 Bs
0.798978 0.033753 1 0.00119 1 50 0 %_BS
%_0.798978 0.033753 1 0.00119 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Fish Pattern)
(Fish Pattern) 77.5215 31.4824 155.3037 96.7959 [
%AI3_Tile
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.6924 38.085 m
26.7441 24.5742 7.7324 50.1514 v
7.7324 0.7559 l
26.7441 26.334 48.6924 12.8223 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.6924 38.085 m
26.7441 24.5742 7.7324 50.1514 v
7.7324 0.7559 l
26.7441 26.334 48.6924 12.8223 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.4736 38.085 m
104.5264 24.5742 85.5137 50.1514 v
85.5137 0.7559 l
104.5264 26.334 126.4736 12.8223 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.4736 38.085 m
104.5264 24.5742 85.5137 50.1514 v
85.5137 0.7559 l
104.5264 26.334 126.4736 12.8223 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.4521 70.7412 m
144.4004 57.2314 163.4121 82.8076 v
163.4121 33.4131 l
144.4004 58.9902 122.4521 45.4785 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.4521 70.7412 m
144.4004 57.2314 163.4121 82.8076 v
163.4121 33.4131 l
144.4004 58.9902 122.4521 45.4785 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 78.6689 m
122.4805 70.8115 l
144.4277 57.3008 163.4404 82.8779 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 78.6689 m
122.4805 70.8115 l
144.4277 57.3008 163.4404 82.8779 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.4736 103.3984 m
104.5264 89.8877 85.5137 115.4648 v
85.5137 66.0693 l
104.5264 91.6475 126.4736 78.1357 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.4736 103.3984 m
104.5264 89.8877 85.5137 115.4648 v
85.5137 66.0693 l
104.5264 91.6475 126.4736 78.1357 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 102.8643 m
122.4805 110.7227 l
144.4277 124.2334 163.4404 98.6563 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 102.8643 m
122.4805 110.7227 l
144.4277 124.2334 163.4404 98.6563 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
164.7207 98.3916 m
158.3359 102.5957 153.498 106.7451 141.2617 106.7451 c
121.0918 106.7451 123.8242 93.9854 103.6523 93.9854 C
99.5859 94.7793 99.5859 90.6816 v
99.5859 86.9863 103.6016 87.5869 Y
123.7754 87.5869 121.0439 74.8252 141.2168 74.8252 c
151.6201 74.8252 160.1045 79.6699 163.8457 82.3398 c
164.7344 82.9736 165.3613 83.4873 165.6768 83.7822 c
165.7119 83.8154 165.7529 83.8525 165.79 83.8867 c
167.4775 85.4463 170.8945 88.2871 170.8945 90.7666 c
170.8945 93.6357 164.7207 98.3916 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
164.7207 98.3916 m
158.3359 102.5957 153.498 106.7451 141.2617 106.7451 c
121.0918 106.7451 123.8242 93.9854 103.6523 93.9854 C
99.5859 94.7793 99.5859 90.6816 v
99.5859 86.9863 103.6016 87.5869 Y
123.7754 87.5869 121.0439 74.8252 141.2168 74.8252 c
151.6201 74.8252 160.1045 79.6699 163.8457 82.3398 c
164.7344 82.9736 165.3613 83.4873 165.6768 83.7822 c
165.7119 83.8154 165.7529 83.8525 165.79 83.8867 c
167.4775 85.4463 170.8945 88.2871 170.8945 90.7666 c
170.8945 93.6357 164.7207 98.3916 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.89 0.01 0 k
 1 0.89 0.01 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
157.2695 96.7959 m
157.2695 95.71 156.3896 94.8291 155.3027 94.8291 c
154.2168 94.8291 153.3369 95.71 153.3369 96.7959 c
153.3369 97.8828 154.2168 98.7637 155.3027 98.7637 c
156.3896 98.7637 157.2695 97.8828 157.2695 96.7959 c
f
142.3477 90.6719 m
142.3477 96.1738 146.54 100.6943 151.9033 101.2197 C
151.5596 101.2529 151.2109 101.2715 150.8584 101.2715 c
145.0039 101.2715 140.2588 96.5264 140.2588 90.6719 c
140.2588 84.8184 145.0039 80.0723 150.8584 80.0723 c
151.2109 80.0723 151.5596 80.0918 151.9033 80.125 C
146.54 80.6494 142.3477 85.1709 142.3477 90.6719 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 78.6689 m
44.6982 70.8115 l
66.6465 57.3008 85.6582 82.8779 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 78.6689 m
44.6982 70.8115 l
66.6465 57.3008 85.6582 82.8779 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.6699 70.7412 m
66.6182 57.2314 85.6299 82.8076 v
85.6299 33.4131 l
66.6182 58.9902 44.6699 45.4785 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.6699 70.7412 m
66.6182 57.2314 85.6299 82.8076 v
85.6299 33.4131 l
66.6182 58.9902 44.6699 45.4785 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.6924 103.3984 m
26.7441 89.8877 7.7324 115.4648 v
7.7324 66.0693 l
26.7441 91.6475 48.6924 78.1357 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.6924 103.3984 m
26.7441 89.8877 7.7324 115.4648 v
7.7324 66.0693 l
26.7441 91.6475 48.6924 78.1357 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 102.8643 m
44.6982 110.7227 l
66.6465 124.2334 85.6582 98.6563 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 102.8643 m
44.6982 110.7227 l
66.6465 124.2334 85.6582 98.6563 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
86.9395 98.3916 m
80.5547 102.5957 75.7168 106.7451 63.4805 106.7451 c
43.3105 106.7451 46.042 93.9854 25.8701 93.9854 C
21.8037 94.7793 21.8037 90.6816 v
21.8037 86.9863 25.8193 87.5869 Y
45.9932 87.5869 43.2617 74.8252 63.4355 74.8252 c
73.8389 74.8252 82.3223 79.6699 86.0645 82.3398 c
86.9521 82.9736 87.5791 83.4873 87.8945 83.7822 c
87.9307 83.8154 87.9707 83.8525 88.0088 83.8867 c
89.6963 85.4463 93.1123 88.2871 93.1123 90.7666 c
93.1123 93.6357 86.9395 98.3916 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
86.9395 98.3916 m
80.5547 102.5957 75.7168 106.7451 63.4805 106.7451 c
43.3105 106.7451 46.042 93.9854 25.8701 93.9854 C
21.8037 94.7793 21.8037 90.6816 v
21.8037 86.9863 25.8193 87.5869 Y
45.9932 87.5869 43.2617 74.8252 63.4355 74.8252 c
73.8389 74.8252 82.3223 79.6699 86.0645 82.3398 c
86.9521 82.9736 87.5791 83.4873 87.8945 83.7822 c
87.9307 83.8154 87.9707 83.8525 88.0088 83.8867 c
89.6963 85.4463 93.1123 88.2871 93.1123 90.7666 c
93.1123 93.6357 86.9395 98.3916 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.89 0.01 0 k
 1 0.89 0.01 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
79.4883 96.7959 m
79.4883 95.71 78.6084 94.8291 77.5215 94.8291 c
76.4355 94.8291 75.5557 95.71 75.5557 96.7959 c
75.5557 97.8828 76.4355 98.7637 77.5215 98.7637 c
78.6084 98.7637 79.4883 97.8828 79.4883 96.7959 c
f
64.5654 90.6719 m
64.5654 96.1738 68.7578 100.6943 74.1211 101.2197 C
73.7773 101.2529 73.4297 101.2715 73.0762 101.2715 c
67.2227 101.2715 62.4766 96.5264 62.4766 90.6719 c
62.4766 84.8184 67.2227 80.0723 73.0762 80.0723 c
73.4297 80.0723 73.7773 80.0918 74.1211 80.125 C
68.7578 80.6494 64.5654 85.1709 64.5654 90.6719 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.3682 46.0117 m
48.6641 38.1553 l
26.7158 24.6436 7.7041 50.2217 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.3682 46.0117 m
48.6641 38.1553 l
26.7158 24.6436 7.7041 50.2217 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.3682 70.207 m
48.6641 78.0654 l
26.7158 91.5762 7.7041 65.999 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.3682 70.207 m
48.6641 78.0654 l
26.7158 91.5762 7.7041 65.999 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
67.4922 61.3281 m
47.3203 61.3281 50.0518 74.0879 29.8818 74.0879 c
17.6455 74.0879 12.8076 69.9395 6.4229 65.7354 C
0.25 60.9795 0.25 58.1104 v
0.25 55.6309 3.666 52.79 5.3535 51.2305 c
5.3916 51.1963 5.4326 51.1592 5.4678 51.126 c
5.7832 50.8311 6.4102 50.3174 7.2979 49.6836 c
11.04 47.0137 19.5234 42.1689 29.9268 42.1689 c
50.1006 42.1689 47.3691 54.9307 67.543 54.9307 C
71.5586 54.3301 71.5586 58.0254 v
71.5586 62.123 67.4922 61.3281 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
67.4922 61.3281 m
47.3203 61.3281 50.0518 74.0879 29.8818 74.0879 c
17.6455 74.0879 12.8076 69.9395 6.4229 65.7354 C
0.25 60.9795 0.25 58.1104 v
0.25 55.6309 3.666 52.79 5.3535 51.2305 c
5.3916 51.1963 5.4326 51.1592 5.4678 51.126 c
5.7832 50.8311 6.4102 50.3174 7.2979 49.6836 c
11.04 47.0137 19.5234 42.1689 29.9268 42.1689 c
50.1006 42.1689 47.3691 54.9307 67.543 54.9307 C
71.5586 54.3301 71.5586 58.0254 v
71.5586 62.123 67.4922 61.3281 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.89 0.01 0 k
 1 0.89 0.01 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
13.874 64.1396 m
13.874 63.0527 14.7539 62.1729 15.8408 62.1729 c
16.9268 62.1729 17.8066 63.0527 17.8066 64.1396 c
17.8066 65.2266 16.9268 66.1064 15.8408 66.1064 c
14.7539 66.1064 13.874 65.2266 13.874 64.1396 c
f
28.7969 58.0156 m
28.7969 63.5176 24.6045 68.0381 19.2412 68.5635 C
19.585 68.5967 19.9326 68.6152 20.2861 68.6152 c
26.1396 68.6152 30.8857 63.8691 30.8857 58.0156 c
30.8857 52.1611 26.1396 47.416 20.2861 47.416 c
19.9326 47.416 19.585 47.4355 19.2412 47.4688 C
24.6045 47.9932 28.7969 52.5146 28.7969 58.0156 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.1504 46.0117 m
126.4463 38.1553 l
104.498 24.6436 85.4863 50.2217 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.1504 46.0117 m
126.4463 38.1553 l
104.498 24.6436 85.4863 50.2217 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.1504 70.207 m
126.4463 78.0654 l
104.498 91.5762 85.4863 65.999 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.1504 70.207 m
126.4463 78.0654 l
104.498 91.5762 85.4863 65.999 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
145.2734 61.3281 m
125.1025 61.3281 127.834 74.0879 107.6641 74.0879 c
95.4277 74.0879 90.5898 69.9395 84.2051 65.7354 C
78.0322 60.9795 78.0322 58.1104 v
78.0322 55.6309 81.4482 52.79 83.1357 51.2305 c
83.1729 51.1963 83.2139 51.1592 83.25 51.126 c
83.5654 50.8311 84.1914 50.3174 85.0801 49.6836 c
88.8223 47.0137 97.3057 42.1689 107.709 42.1689 c
127.8828 42.1689 125.1514 54.9307 145.3242 54.9307 C
149.3408 54.3301 149.3408 58.0254 v
149.3408 62.123 145.2734 61.3281 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
145.2734 61.3281 m
125.1025 61.3281 127.834 74.0879 107.6641 74.0879 c
95.4277 74.0879 90.5898 69.9395 84.2051 65.7354 C
78.0322 60.9795 78.0322 58.1104 v
78.0322 55.6309 81.4482 52.79 83.1357 51.2305 c
83.1729 51.1963 83.2139 51.1592 83.25 51.126 c
83.5654 50.8311 84.1914 50.3174 85.0801 49.6836 c
88.8223 47.0137 97.3057 42.1689 107.709 42.1689 c
127.8828 42.1689 125.1514 54.9307 145.3242 54.9307 C
149.3408 54.3301 149.3408 58.0254 v
149.3408 62.123 145.2734 61.3281 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.89 0.01 0 k
 1 0.89 0.01 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
91.6563 64.1396 m
91.6563 63.0527 92.5361 62.1729 93.623 62.1729 c
94.709 62.1729 95.5889 63.0527 95.5889 64.1396 c
95.5889 65.2266 94.709 66.1064 93.623 66.1064 c
92.5361 66.1064 91.6563 65.2266 91.6563 64.1396 c
f
106.5781 58.0156 m
106.5781 63.5176 102.3867 68.0381 97.0234 68.5635 C
97.3662 68.5967 97.7148 68.6152 98.0684 68.6152 c
103.9219 68.6152 108.668 63.8691 108.668 58.0156 c
108.668 52.1611 103.9219 47.416 98.0684 47.416 c
97.7148 47.416 97.3662 47.4355 97.0234 47.4688 C
102.3867 47.9932 106.5781 52.5146 106.5781 58.0156 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 13.3555 m
122.4805 5.498 l
144.4277 -8.0127 163.4404 17.5645 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 13.3555 m
122.4805 5.498 l
144.4277 -8.0127 163.4404 17.5645 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 37.5508 m
122.4805 45.4092 l
144.4277 58.9199 163.4404 33.3428 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 37.5508 m
122.4805 45.4092 l
144.4277 58.9199 163.4404 33.3428 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
164.7207 33.0781 m
158.3359 37.2822 153.498 41.4316 141.2617 41.4316 c
121.0918 41.4316 123.8242 28.6719 103.6523 28.6719 C
99.5859 29.4658 99.5859 25.3691 v
99.5859 21.6729 103.6016 22.2734 Y
123.7754 22.2734 121.0439 9.5117 141.2168 9.5117 c
151.6201 9.5117 160.1045 14.3564 163.8457 17.0273 c
164.7344 17.6602 165.3613 18.1738 165.6768 18.4688 c
165.7119 18.502 165.7529 18.54 165.79 18.5732 c
167.4775 20.1338 170.8945 22.9736 170.8945 25.4531 c
170.8945 28.3232 164.7207 33.0781 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
164.7207 33.0781 m
158.3359 37.2822 153.498 41.4316 141.2617 41.4316 c
121.0918 41.4316 123.8242 28.6719 103.6523 28.6719 C
99.5859 29.4658 99.5859 25.3691 v
99.5859 21.6729 103.6016 22.2734 Y
123.7754 22.2734 121.0439 9.5117 141.2168 9.5117 c
151.6201 9.5117 160.1045 14.3564 163.8457 17.0273 c
164.7344 17.6602 165.3613 18.1738 165.6768 18.4688 c
165.7119 18.502 165.7529 18.54 165.79 18.5732 c
167.4775 20.1338 170.8945 22.9736 170.8945 25.4531 c
170.8945 28.3232 164.7207 33.0781 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.89 0.01 0 k
 1 0.89 0.01 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
157.2695 31.4824 m
157.2695 30.3965 156.3896 29.5156 155.3027 29.5156 c
154.2168 29.5156 153.3369 30.3965 153.3369 31.4824 c
153.3369 32.5693 154.2168 33.4502 155.3027 33.4502 c
156.3896 33.4502 157.2695 32.5693 157.2695 31.4824 c
f
142.3477 25.3594 m
142.3477 30.8604 146.54 35.3809 151.9033 35.9063 C
151.5596 35.9395 151.2109 35.959 150.8584 35.959 c
145.0039 35.959 140.2588 31.2129 140.2588 25.3594 c
140.2588 19.5049 145.0039 14.7598 150.8584 14.7598 c
151.2109 14.7598 151.5596 14.7783 151.9033 14.8115 C
146.54 15.3359 142.3477 19.8574 142.3477 25.3594 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 13.3555 m
44.6982 5.498 l
66.6465 -8.0127 85.6582 17.5645 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 13.3555 m
44.6982 5.498 l
66.6465 -8.0127 85.6582 17.5645 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 37.5508 m
44.6982 45.4092 l
66.6465 58.9199 85.6582 33.3428 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 37.5508 m
44.6982 45.4092 l
66.6465 58.9199 85.6582 33.3428 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
86.9395 33.0781 m
80.5547 37.2822 75.7168 41.4316 63.4805 41.4316 c
43.3105 41.4316 46.042 28.6719 25.8701 28.6719 C
21.8037 29.4658 21.8037 25.3691 v
21.8037 21.6729 25.8193 22.2734 Y
45.9932 22.2734 43.2617 9.5117 63.4355 9.5117 c
73.8389 9.5117 82.3223 14.3564 86.0645 17.0273 c
86.9521 17.6602 87.5791 18.1738 87.8945 18.4688 c
87.9307 18.502 87.9707 18.54 88.0088 18.5732 c
89.6963 20.1338 93.1123 22.9736 93.1123 25.4531 c
93.1123 28.3232 86.9395 33.0781 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
86.9395 33.0781 m
80.5547 37.2822 75.7168 41.4316 63.4805 41.4316 c
43.3105 41.4316 46.042 28.6719 25.8701 28.6719 C
21.8037 29.4658 21.8037 25.3691 v
21.8037 21.6729 25.8193 22.2734 Y
45.9932 22.2734 43.2617 9.5117 63.4355 9.5117 c
73.8389 9.5117 82.3223 14.3564 86.0645 17.0273 c
86.9521 17.6602 87.5791 18.1738 87.8945 18.4688 c
87.9307 18.502 87.9707 18.54 88.0088 18.5732 c
89.6963 20.1338 93.1123 22.9736 93.1123 25.4531 c
93.1123 28.3232 86.9395 33.0781 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.89 0.01 0 k
 1 0.89 0.01 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
79.4883 31.4824 m
79.4883 30.3965 78.6084 29.5156 77.5215 29.5156 c
76.4355 29.5156 75.5557 30.3965 75.5557 31.4824 c
75.5557 32.5693 76.4355 33.4502 77.5215 33.4502 c
78.6084 33.4502 79.4883 32.5693 79.4883 31.4824 c
f
64.5654 25.3594 m
64.5654 30.8604 68.7578 35.3809 74.1211 35.9063 C
73.7773 35.9395 73.4297 35.959 73.0762 35.959 c
67.2227 35.959 62.4766 31.2129 62.4766 25.3594 c
62.4766 19.5049 67.2227 14.7598 73.0762 14.7598 c
73.4297 14.7598 73.7773 14.7783 74.1211 14.8115 C
68.7578 15.3359 64.5654 19.8574 64.5654 25.3594 c
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (New Pattern)
(New Pattern) 14.4067 0 1014.4063 1000.0005 [
%AI3_Tile
(0 O 0 R 0.6 0.340673 0.309819 0.153262 k
 0.6 0.340673 0.309819 0.153262 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
195.9238 514.4082 m
207.9941 528.1875 229.2979 538.5693 255.0537 539.3188 c
229.2979 538.5693 207.9941 528.1875 195.9238 514.4082 c
f
214.5508 552.9668 m
189.2329 552.894 169.0181 545.1113 155.9766 531.9727 c
169.0181 545.1113 189.2329 552.894 214.5508 552.9668 c
f
145.6929 517.7217 m
146.2798 518.8887 146.9063 520.0322 147.5728 521.1514 c
146.9063 520.0322 146.2798 518.8887 145.6929 517.7217 c
f
147.5728 521.1514 m
148.2388 522.271 148.9443 523.3657 149.688 524.4355 c
148.9443 523.3657 148.2388 522.271 147.5728 521.1514 c
f
194.0957 512.2051 m
192.9287 510.7192 191.8672 509.1987 190.916 507.6519 c
191.8672 509.1987 192.9287 510.7192 194.0957 512.2051 c
f
153.2925 529.0762 m
154.1499 530.0684 155.0449 531.0342 155.9766 531.9727 c
155.0449 531.0342 154.1499 530.0684 153.2925 529.0762 c
f
289.5977 534.6768 m
289.5967 534.6772 L
279.0396 537.7969 268.813 539.2524 259.1567 539.3564 c
268.8135 539.2524 279.04 537.7964 289.5977 534.6768 C
f
149.688 524.4355 m
150.4316 525.5049 151.2139 526.5498 152.0342 527.5684 c
151.2139 526.5498 150.4316 525.5049 149.688 524.4355 c
f
195.0596 574.1831 m
162.2539 599.1157 221.6523 688.4414 155.1855 680.1235 c
123.125 676.1113 127.207 628.5264 140.3164 607.5225 c
152.6035 589.0957 173.1523 575.5117 195.0596 574.1831 C
f
237.8438 287.9717 m
210.3037 294.9102 181.6152 308.5322 172.8145 328.2051 c
162.2109 351.9028 164 378.6768 188 387.6768 c
206 394.6768 223.877 388.5986 233.1465 409.8604 c
241.8672 429.8604 235 455.3301 209 463.6768 c
188.8242 470.1538 164 460.6768 148 449.6768 c
122 432.6768 110 398.6768 114 369.6768 c
124.1152 307.1489 183.9609 290.2813 237.8438 287.9717 C
f
118.9014 627.4258 m
110.584 652.333 88.5811 660.4834 94.5811 705.8516 c
100.6475 751.7197 145.333 775.2197 192.792 775.4395 C
105.0801 792.5615 3.03906 702.8799 52.4707 612.8682 c
71.2539 578.665 130.5645 592.501 118.9014 627.4258 c
f
104.1006 319.3984 m
92.1514 342.271 97.9346 366.5425 95.7471 391.5522 c
93.041 422.481 81.8535 451.853 54.083 449.0791 c
0 443.6768 14.2549 366.0542 36.7539 334.5557 c
62.7578 296.2344 103.377 285.6914 145.333 285.6162 C
124.625 291.9492 112.0117 304.2554 104.1006 319.3984 c
f
181.5762 263.0889 m
102.0811 263.0889 114.0801 165.5928 148.5781 195.5918 C
175.5771 216.5908 133.5791 254.0889 181.5762 263.0889 C
f
73.209 575.0645 m
15.7813 571.3711 36.2363 657.686 14.4067 680.2617 C
14.4067 573.4941 L
36.1343 566.1479 59.0283 566.1553 73.209 575.0645 C
f
875.334 498.6768 m
851.334 510.6768 820.126 520.3887 814.666 492.6768 c
806.9111 453.3101 901 492.9565 930.7891 398.1841 C
927.3896 449.6768 899.7461 486.4702 875.334 498.6768 c
f
891 526.5908 m
894.3984 492.5547 916 463.6768 947 449.6768 C
907 478.6768 984 521.4126 969 564.6768 c
950.0908 619.2153 885 586.6729 891 526.5908 c
f
855.2334 520.3887 m
838.2852 533.2554 813.7529 573.7231 823.5498 599.5654 c
836.8604 634.6768 868.8633 633.7881 877 621.1006 c
901 583.6768 952 613.6768 940.2002 661.9746 c
933.999 687.3545 901.6973 714.8804 848.084 703.0049 c
792.4258 690.6768 739 580.8027 855.2334 520.3887 C
f
863.751 605.6768 m
820.751 604.6768 844.1113 521.0889 878 509.6768 C
859 528.6768 865.2441 545.6582 875 567.6768 c
886 592.5015 882.751 605.6768 863.751 605.6768 c
f
745 666.6768 m
705 666.9907 706 615.6768 720 591.6768 C
733.1309 567.167 764.6504 548.021 792.4258 538.2632 C
775 557.6768 773.8662 579.7041 771 601.6768 c
768 628.6768 777.6953 666.4199 745 666.6768 c
f
754 238.6768 m
776 247.6768 797.3477 244.4053 820.126 215.0303 C
819.9375 263.8564 731.5645 300.5527 686.9746 260.6768 c
649 226.7158 678 171.6768 717 194.6768 c
735.2725 205.4531 729.0791 228.4814 754 238.6768 c
f
751.8164 335.3232 m
762 367.6768 751.8164 386.5747 729 385.3809 c
673.291 382.4658 716 283.668 771 283.6768 C
745.7207 289.8975 743.4102 308.6147 751.8164 335.3232 c
f
750.665 222.0107 m
735.332 210.6777 748.665 188.6768 760.665 184.0107 C
770.2617 178.1611 783.4824 173.1982 785.1602 158.3232 C
799.4199 195.8242 777.0156 241.6211 750.665 222.0107 c
f
1010.5049 683.3379 m
970.0068 707.3364 940.3174 657.9805 964.0605 613.1201 c
974.1094 594.1343 993.7295 580.4849 1014.4063 573.4941 C
1014.4063 680.2627 L
1013.2324 681.4766 1011.9424 682.5166 1010.5049 683.3379 c
f
711.208 480.6768 m
722.0977 458.4541 751.3086 479.8979 771.4219 498.0103 c
787.7266 512.6929 807.8545 518.6724 834 520.3887 C
789.5977 541.6211 691.6475 520.5928 711.208 480.6768 c
f
762 475.3433 m
758.666 470.0103 758 456.0103 766 454.0103 C
773.334 451.3433 779.334 461.3433 782 466.6768 C
786.1914 474.2212 798 500 814.2139 505.7061 C
789.5977 502.6768 766.6836 490.6768 762 475.3433 C
f
341.9111 214.4609 m
363.3237 224.4316 383.2075 237.1885 396.6226 262.3174 c
412.8203 292.6592 407.6084 355.8716 366.9307 358.4141 c
323.5972 361.1226 321.5972 324.2788 338.2637 301.5225 c
350.2637 285.8096 358 269.3604 356 249.8545 c
354.9146 239.709 351.1768 223.8193 341.9111 214.4609 C
f
314.6665 492.6768 m
306.9111 453.3101 401 492.9565 430.7891 398.1841 C
427.3896 449.6768 399.7466 486.4702 375.3335 498.6768 c
351.3335 510.6768 320.126 520.3887 314.6665 492.6768 c
f
391 526.5908 m
394.3989 492.5547 416 463.6768 447 449.6768 C
407 478.6768 484 521.4126 469 564.6768 c
450.0908 619.2153 385 586.6729 391 526.5908 c
f
355.2334 520.3887 m
338.2856 533.2554 313.7529 573.7231 323.5498 599.5654 c
336.8604 634.6768 368.8633 633.7881 377 621.1006 c
401 583.6768 452 613.6768 440.2002 661.9746 c
433.999 687.3545 401.6968 714.8804 348.0835 703.0049 c
292.4258 690.6768 239 580.8027 355.2334 520.3887 C
f
363.751 605.6768 m
320.751 604.6768 344.1118 521.0889 378 509.6768 C
359 528.6768 365.2437 545.6582 375 567.6768 c
386 592.5015 382.751 605.6768 363.751 605.6768 c
f
245 666.6768 m
205 666.9907 206 615.6768 220 591.6768 C
233.1304 567.167 264.6504 548.021 292.4258 538.2632 C
275 557.6768 273.8662 579.7041 271 601.6768 c
268 628.6768 277.6948 666.4199 245 666.6768 c
f
495.1855 209.1592 m
500.7549 224.999 478.0283 235.1191 465.1191 236.7236 c
426.1895 241.5605 404.9756 226.7207 387.8452 216.1465 C
420.0938 226.1455 433.2139 216.7314 447.1885 206.5479 C
458.373 193.9619 488.2178 189.3369 495.1855 209.1592 c
f
289.5981 534.6768 m
261.7021 547.4268 236.252 553.0293 214.5508 552.9668 c
236.2515 553.0293 261.7017 547.4268 289.5967 534.6772 C
289.5981 534.6768 L
f
153.2925 529.0762 m
152.8638 528.5801 152.4443 528.0771 152.0342 527.5684 c
151.2139 526.5498 150.4316 525.5049 149.688 524.4355 c
148.9443 523.3657 148.2388 522.271 147.5728 521.1514 c
146.9063 520.0322 146.2798 518.8887 145.6929 517.7217 c
144.8125 515.9712 144.022 514.168 143.3242 512.3149 c
130.6582 478.6777 169.2129 460.7217 188.4004 502.938 c
189.1245 504.5313 189.9648 506.105 190.916 507.6519 c
191.8672 509.1987 192.9287 510.7192 194.0957 512.2051 c
194.6792 512.9482 195.2886 513.6831 195.9238 514.4082 c
207.9941 528.1875 229.2979 538.5693 255.0537 539.3188 c
256.4092 539.3584 257.7773 539.3711 259.1567 539.3564 c
268.813 539.2524 279.0396 537.7969 289.5967 534.6772 C
261.7017 547.4268 236.2515 553.0293 214.5508 552.9668 c
189.2329 552.894 169.0181 545.1113 155.9766 531.9727 c
155.0449 531.0342 154.1499 530.0684 153.2925 529.0762 c
f
688.4004 502.938 m
699.9863 528.4287 741.334 548.9385 789.5977 534.6768 C
715.209 568.6768 658.2109 551.8491 643.3242 512.3149 c
630.6582 478.6777 669.2129 460.7217 688.4004 502.938 c
f
655.1855 680.1235 m
623.125 676.1113 627.207 628.5264 640.3164 607.5225 c
652.6035 589.0957 673.1523 575.5117 695.0596 574.1831 C
662.2539 599.1157 721.6523 688.4414 655.1855 680.1235 c
f
254 238.6768 m
276 247.6768 297.3472 244.4053 320.126 215.0303 C
319.937 263.8564 231.5645 300.5527 186.9751 260.6768 c
149 226.7158 178 171.6768 217 194.6768 c
235.2725 205.4531 229.0791 228.4814 254 238.6768 c
f
672.8145 328.2051 m
662.2109 351.9028 664 378.6768 688 387.6768 c
706 394.6768 723.877 388.5986 733.1465 409.8604 c
741.8672 429.8604 735 455.3301 709 463.6768 c
688.8242 470.1538 664 460.6768 648 449.6768 c
622 432.6768 610 398.6768 614 369.6768 c
624.1152 307.1489 683.9609 290.2813 737.8438 287.9717 C
710.3037 294.9102 681.6152 308.5322 672.8145 328.2051 c
f
251.8169 335.3232 m
262 367.6768 251.8169 386.5747 229 385.3809 c
173.291 382.4658 216 283.668 271 283.6768 C
245.7202 289.8975 243.4106 308.6147 251.8169 335.3232 c
f
326.5962 233.4258 m
331.1621 256.5469 327.9922 286.7959 320.126 304.3813 c
315.9668 313.6787 296 351.5488 276 335.2842 C
263 325.5254 281 301.9414 289 293.8096 C
296.8687 285.084 320.0176 259.417 326.5962 233.4258 C
f
826.5957 233.4258 m
831.1621 256.5469 827.9922 286.7959 820.126 304.3813 c
815.9668 313.6787 796 351.5488 776 335.2842 C
763 325.5254 781 301.9414 789 293.8096 C
796.8691 285.084 820.0176 259.417 826.5957 233.4258 C
f
326.5962 733.4258 m
331.1621 756.5469 327.9922 786.7959 320.126 804.3813 c
315.9668 813.6787 296 851.5488 276 835.2842 C
263 825.5254 281 801.9414 289 793.8096 C
296.8687 785.084 320.0176 759.417 326.5962 733.4258 C
f
826.5957 733.4258 m
831.1621 756.5469 827.9922 786.7959 820.126 804.3813 c
815.9668 813.6787 796 851.5488 776 835.2842 C
763 825.5254 781 801.9414 789 793.8096 C
796.8691 785.084 820.0176 759.417 826.5957 733.4258 C
f
250.665 222.0107 m
235.332 210.6777 248.665 188.6768 260.665 184.0107 C
270.2612 178.1611 283.4819 173.1982 285.1597 158.3232 C
299.4199 195.8242 277.0161 241.6211 250.665 222.0107 c
f
552.4707 612.8682 m
571.2539 578.665 630.5645 592.501 618.9014 627.4258 c
610.584 652.333 588.5811 660.4834 594.5811 705.8516 c
600.6475 751.7197 645.333 775.2197 692.792 775.4395 C
605.0801 792.5615 503.0391 702.8799 552.4707 612.8682 c
f
595.7471 391.5522 m
593.041 422.481 581.8535 451.853 554.083 449.0791 c
500 443.6768 514.2549 366.0542 536.7539 334.5557 c
562.7578 296.2344 603.377 285.6914 645.333 285.6162 C
624.625 291.9492 612.0117 304.2554 604.1006 319.3984 c
592.1514 342.271 597.9346 366.5425 595.7471 391.5522 c
f
523.5801 215.2461 m
565.7871 212.8984 555.0928 290.4805 619.6875 276.8926 c
503.0469 303.2207 484.3457 217.4277 523.5801 215.2461 c
f
546 298.5166 m
550 298.5166 L
519.252 303.6768 516.585 366.583 494.0859 356.0835 c
470.0869 344.0845 493.5947 293.4414 546 298.5166 C
f
437.6035 247.0439 m
456.5645 232.0029 502.2324 289.8926 536.877 285.5703 C
457.0322 315.5176 417.6006 262.9111 437.6035 247.0439 c
f
681.5762 263.0889 m
602.0811 263.0889 614.0801 165.5928 648.5781 195.5918 C
675.5771 216.5908 633.5791 254.0889 681.5762 263.0889 C
f
464.0605 613.1201 m
484.6689 574.1831 545.5332 557.6768 573.209 575.0645 C
512.6924 571.1724 538.6699 667.2437 510.5049 683.3379 c
470.0068 707.3364 440.3174 657.9805 464.0605 613.1201 c
f
211.208 480.6768 m
222.0981 458.4541 251.3091 479.8979 271.4219 498.0103 c
287.7261 512.6929 307.8545 518.6724 334 520.3887 C
289.5981 541.6211 191.6475 520.5928 211.208 480.6768 c
f
262 475.3433 m
258.6665 470.0103 258 456.0103 266 454.0103 C
273.3335 451.3433 279.3335 461.3433 282 466.6768 C
286.1914 474.2212 298 500 314.2139 505.7061 C
289.5981 502.6768 266.6836 490.6768 262 475.3433 C
f
237.8438 787.9717 m
210.3037 794.9102 181.6152 808.5322 172.8145 828.2051 c
162.2109 851.9028 164 878.6768 188 887.6768 c
206 894.6768 223.877 888.5986 233.1465 909.8604 c
241.8672 929.8604 235 955.3301 209 963.6768 c
188.8242 970.1538 164 960.6768 148 949.6768 c
122 932.6768 110 898.6768 114 869.6768 c
124.1152 807.1489 183.9609 790.2813 237.8438 787.9717 C
f
104.1006 819.3984 m
92.1514 842.271 97.9346 866.5425 95.7471 891.5522 c
93.041 922.481 81.8535 951.853 54.083 949.0791 c
0 943.6768 14.2549 866.0542 36.7539 834.5557 c
62.7578 796.2344 103.377 785.6914 145.333 785.6162 C
124.625 791.9492 112.0117 804.2554 104.1006 819.3984 c
f
119.6875 776.8926 m
121.104 776.5728 122.5215 776.2515 123.9668 775.8984 c
122.5 776.2788 121.083 776.5986 119.6875 776.8926 c
f
148.5781 695.5918 m
175.5771 716.5908 133.5791 754.0889 181.5762 763.0889 C
102.0811 763.0889 114.0801 665.5928 148.5781 695.5918 C
f
930.7891 898.1841 m
927.3896 949.6768 899.7461 986.4702 875.334 998.6768 c
874.4434 999.1221 873.5391 999.563 872.6299 1000.0005 C
817.1152 1000.0005 L
816.0586 997.917 815.2227 995.5005 814.666 992.6768 c
806.9111 953.3101 901 992.9565 930.7891 898.1841 C
f
947 949.6768 m
927.6191 963.7275 935.7051 981.0029 947.4844 1000.0005 C
897.7119 1000.0005 L
906.9385 977.8623 924.4863 959.8438 947 949.6768 C
f
947.1885 706.5479 m
958.373 693.9619 988.2178 689.3369 995.1855 709.1592 c
1000.7549 724.999 978.0283 735.1191 965.1191 736.7236 c
926.1895 741.5605 904.9756 726.7207 887.8457 716.1465 C
920.0938 726.1455 933.2139 716.7314 947.1885 706.5479 C
f
686.9746 760.6768 m
649 726.7158 678 671.6768 717 694.6768 c
735.2725 705.4531 729.0791 728.4814 754 738.6768 c
776 747.6768 797.3477 744.4053 820.126 715.0303 C
819.9375 763.8564 731.5645 800.5527 686.9746 760.6768 c
f
729 885.3809 m
673.291 882.4658 716 783.668 771 783.6768 C
745.7207 789.8975 743.4102 808.6147 751.8164 835.3232 c
762 867.6768 751.8164 886.5747 729 885.3809 c
f
750.665 722.0107 m
735.332 710.6777 748.665 688.6768 760.665 684.0107 C
770.2617 678.1611 783.4824 673.1982 785.1602 658.3232 C
799.4199 695.8242 777.0156 741.6211 750.665 722.0107 c
f
1014.4063 717.7495 m
1014.4063 758.2646 L
1001.3555 742.8379 1002.3643 724.3916 1014.4063 717.7495 C
f
711.208 980.6768 m
722.0977 958.4541 751.3086 979.8979 771.4219 998.0103 c
772.1865 998.6992 772.9688 999.3496 773.75 1000.0005 C
710.9512 1000.0005 L
707.9805 994.2393 707.7383 987.7568 711.208 980.6768 c
f
762 975.3433 m
758.666 970.0103 758 956.0103 766 954.0103 C
773.334 951.3433 779.334 961.3433 782 966.6768 C
785.334 972.6772 793.4893 990.2041 804.8447 1000.0005 C
791.0684 1000.0005 L
776.501 994.4165 765.1426 985.6328 762 975.3433 C
f
430.7891 898.1841 m
427.3896 949.6768 399.7466 986.4702 375.3335 998.6768 c
374.4424 999.1221 373.5386 999.563 372.6294 1000.0005 C
317.1152 1000.0005 L
316.0591 997.917 315.2227 995.5005 314.6665 992.6768 c
306.9111 953.3101 401 992.9565 430.7891 898.1841 C
f
447 949.6768 m
427.6191 963.7275 435.7051 981.0029 447.4844 1000.0005 C
397.7119 1000.0005 L
406.9395 977.8623 424.4863 959.8438 447 949.6768 C
f
447.1885 706.5479 m
458.373 693.9619 488.2178 689.3369 495.1855 709.1592 c
500.7549 724.999 478.0283 735.1191 465.1191 736.7236 c
426.1895 741.5605 404.9756 726.7207 387.8452 716.1465 C
420.0938 726.1455 433.2139 716.7314 447.1885 706.5479 C
f
186.9771 1000.0005 m
140.832 1000.0005 L
140.4507 975.7012 170.0127 966.7637 186.9771 1000.0005 C
f
686.9766 1000.0005 m
640.832 1000.0005 L
640.4502 975.7012 670.0127 966.7637 686.9766 1000.0005 C
f
186.9751 760.6768 m
149 726.7158 178 671.6768 217 694.6768 c
235.2725 705.4531 229.0791 728.4814 254 738.6768 c
276 747.6768 297.3472 744.4053 320.126 715.0303 C
319.937 763.8564 231.5645 800.5527 186.9751 760.6768 c
f
737.8438 787.9717 m
710.3037 794.9102 681.6152 808.5322 672.8145 828.2051 c
662.2109 851.9028 664 878.6768 688 887.6768 c
706 894.6768 723.877 888.5986 733.1465 909.8604 c
741.8672 929.8604 735 955.3301 709 963.6768 c
688.8242 970.1538 664 960.6768 648 949.6768 c
622 932.6768 610 898.6768 614 869.6768 c
624.1152 807.1489 683.9609 790.2813 737.8438 787.9717 C
f
229 885.3809 m
173.291 882.4658 216 783.668 271 783.6768 C
245.7202 789.8975 243.4106 808.6147 251.8169 835.3232 c
262 867.6768 251.8169 886.5747 229 885.3809 c
f
250.665 722.0107 m
235.332 710.6777 248.665 688.6768 260.665 684.0107 C
270.2612 678.1611 283.4819 673.1982 285.1597 658.3232 C
299.4199 695.8242 277.0161 741.6211 250.665 722.0107 c
f
645.333 785.6162 m
624.625 791.9492 612.0117 804.2554 604.1006 819.3984 c
592.1514 842.271 597.9346 866.5425 595.7471 891.5522 c
593.041 922.481 581.8535 951.853 554.083 949.0791 c
500 943.6768 514.2549 866.0542 536.7539 834.5557 c
562.7578 796.2344 603.377 785.6914 645.333 785.6162 C
f
523.5801 715.2461 m
565.7871 712.8984 555.0928 790.4805 619.6875 776.8926 c
503.0469 803.2207 484.3457 717.4277 523.5801 715.2461 c
f
619.6875 776.8926 m
621.1035 776.5728 622.5215 776.2515 623.9668 775.8984 c
622.5 776.2788 621.083 776.5986 619.6875 776.8926 c
f
546 798.5166 m
550 798.5166 L
519.252 803.6768 516.585 866.583 494.0859 856.0835 c
470.0869 844.0845 493.5947 793.4414 546 798.5166 C
f
648.5781 695.5918 m
675.5771 716.5908 633.5791 754.0889 681.5762 763.0889 C
602.0811 763.0889 614.0801 665.5928 648.5781 695.5918 C
f
211.208 980.6768 m
222.0981 958.4541 251.3091 979.8979 271.4219 998.0103 c
272.1865 998.6992 272.9683 999.3496 273.75 1000.0005 C
210.9507 1000.0005 L
207.9805 994.2393 207.7383 987.7568 211.208 980.6768 c
f
262 975.3433 m
258.6665 970.0103 258 956.0103 266 954.0103 C
273.3335 951.3433 279.3335 961.3433 282 966.6768 C
285.3335 972.6772 293.4897 990.2041 304.8442 1000.0005 C
291.0693 1000.0005 L
276.5015 994.4165 265.1431 985.6328 262 975.3433 C
f
155.9766 31.9727 m
169.0181 45.1113 189.2329 52.8936 214.5508 52.9668 c
189.2329 52.8936 169.0181 45.1113 155.9766 31.9727 c
f
149.688 24.4355 m
150.4316 25.5049 151.2139 26.5498 152.0342 27.5684 c
151.2139 26.5498 150.4316 25.5049 149.688 24.4355 c
f
147.5728 21.1514 m
148.2388 22.2705 148.9443 23.3662 149.688 24.4355 c
148.9443 23.3662 148.2388 22.2705 147.5728 21.1514 c
f
289.5977 34.6768 m
289.5967 34.6768 L
279.0396 37.7969 268.813 39.2529 259.1567 39.3564 c
268.8135 39.2529 279.04 37.7969 289.5977 34.6768 C
f
153.2925 29.0762 m
154.1499 30.0684 155.0449 31.0342 155.9766 31.9727 c
155.0449 31.0342 154.1499 30.0684 153.2925 29.0762 c
f
194.0957 12.2061 m
192.9287 10.7197 191.8672 9.19922 190.916 7.65234 c
191.8672 9.19922 192.9287 10.7197 194.0957 12.2061 c
f
145.6929 17.7227 m
146.2798 18.8896 146.9063 20.0322 147.5728 21.1514 c
146.9063 20.0322 146.2798 18.8896 145.6929 17.7227 c
f
195.9238 14.4082 m
207.9941 28.1875 229.2979 38.5693 255.0537 39.3193 c
229.2979 38.5693 207.9941 28.1875 195.9238 14.4082 c
f
155.1855 180.124 m
123.125 176.1113 127.207 128.5264 140.3164 107.5225 c
152.6035 89.0957 173.1523 75.5117 195.0596 74.1826 C
162.2539 99.1162 221.6523 188.4414 155.1855 180.124 c
f
118.9014 127.4258 m
110.584 152.333 88.5811 160.4834 94.5811 205.8516 c
100.6475 251.7197 145.333 275.2197 192.792 275.4395 C
105.0801 292.5615 3.03906 202.8799 52.4707 112.8682 c
71.2539 78.665 130.5645 92.501 118.9014 127.4258 c
f
73.209 75.0645 m
15.7813 71.3711 36.2363 157.6855 14.4067 180.2617 C
14.4067 73.4941 L
36.1343 66.1475 59.0283 66.1553 73.209 75.0645 C
f
103.001 0 m
124.2168 0 L
117.8555 8.49219 109.5576 6.6582 103.001 0 C
f
817.1143 0 m
872.6309 0 L
851.5449 10.1436 826.0381 17.6074 817.1143 0 C
f
969 64.6768 m
950.0908 119.2158 885 86.6729 891 26.5908 c
891.9307 17.2725 894.2334 8.3457 897.7119 0 C
947.4844 0 L
960.0176 20.2129 976.7324 42.375 969 64.6768 c
f
848.084 203.0049 m
792.4258 190.6768 739 80.8027 855.2334 20.3887 C
838.2852 33.2549 813.7529 73.7236 823.5498 99.5654 c
836.8604 134.6768 868.8633 133.7881 877 121.1006 c
901 83.6768 952 113.6768 940.2002 161.9746 c
933.999 187.3545 901.6973 214.8799 848.084 203.0049 c
f
863.751 105.6768 m
820.751 104.6768 844.1113 21.0889 878 9.67676 C
859 28.6768 865.2441 45.6582 875 67.6768 c
886 92.501 882.751 105.6768 863.751 105.6768 c
f
745 166.6768 m
705 166.9912 706 115.6768 720 91.6768 C
733.1309 67.167 764.6504 48.0205 792.4258 38.2627 C
775 57.6768 773.8662 79.7041 771 101.6768 c
768 128.6768 777.6953 166.4199 745 166.6768 c
f
1010.5049 183.3379 m
970.0068 207.3369 940.3174 157.9805 964.0605 113.1201 c
974.1094 94.1338 993.7295 80.4844 1014.4063 73.4941 C
1014.4063 180.2627 L
1013.2324 181.4766 1011.9424 182.5166 1010.5049 183.3379 c
f
710.9502 0 m
773.749 0 L
789.6357 13.2246 809.0801 18.7529 834 20.3887 C
797.4736 37.8545 724.7246 26.7188 710.9502 0 C
f
791.0674 0 m
804.8438 0 L
807.7656 2.52051 810.8955 4.53809 814.2139 5.70605 C
806.1162 4.70996 798.208 2.7373 791.0674 0 C
f
317.1147 0 m
372.6304 0 L
351.5449 10.1436 326.0386 17.6074 317.1147 0 C
f
469 64.6768 m
450.0908 119.2158 385 86.6729 391 26.5908 c
391.9307 17.2725 394.2339 8.3457 397.7119 0 C
447.4844 0 L
460.0176 20.2129 476.7324 42.375 469 64.6768 c
f
348.0835 203.0049 m
292.4258 190.6768 239 80.8027 355.2334 20.3887 C
338.2856 33.2549 313.7529 73.7236 323.5498 99.5654 c
336.8604 134.6768 368.8633 133.7881 377 121.1006 c
401 83.6768 452 113.6768 440.2002 161.9746 c
433.999 187.3545 401.6968 214.8799 348.0835 203.0049 c
f
363.751 105.6768 m
320.751 104.6768 344.1118 21.0889 378 9.67676 C
359 28.6768 365.2437 45.6582 375 67.6768 c
386 92.501 382.751 105.6768 363.751 105.6768 c
f
245 166.6768 m
205 166.9912 206 115.6768 220 91.6768 C
233.1304 67.167 264.6504 48.0205 292.4258 38.2627 C
275 57.6768 273.8662 79.7041 271 101.6768 c
268 128.6768 277.6948 166.4199 245 166.6768 c
f
289.5981 34.6768 m
261.7021 47.4268 236.252 53.0293 214.5508 52.9668 c
236.2515 53.0293 261.7017 47.4268 289.5967 34.6768 C
289.5981 34.6768 L
f
190.916 7.65234 m
191.8672 9.19922 192.9287 10.7197 194.0957 12.2061 c
194.6792 12.9492 195.2886 13.6836 195.9238 14.4082 c
207.9941 28.1875 229.2979 38.5693 255.0537 39.3193 c
256.4092 39.3584 257.7773 39.3711 259.1567 39.3564 c
268.813 39.2529 279.0396 37.7969 289.5967 34.6768 C
261.7017 47.4268 236.2515 53.0293 214.5508 52.9668 c
189.2329 52.8936 169.0181 45.1113 155.9766 31.9727 c
155.0449 31.0342 154.1499 30.0684 153.2925 29.0762 c
152.8638 28.5801 152.4443 28.0771 152.0342 27.5684 c
151.2139 26.5498 150.4316 25.5049 149.688 24.4355 c
148.9443 23.3662 148.2388 22.2705 147.5728 21.1514 c
146.9063 20.0322 146.2798 18.8896 145.6929 17.7227 c
144.8125 15.9717 144.022 14.1689 143.3242 12.3154 c
141.6641 7.90625 140.8911 3.77051 140.832 0 C
186.9766 0 L
187.4609 0.948242 187.938 1.9209 188.4004 2.93848 c
189.1245 4.53125 189.9648 6.10547 190.916 7.65234 c
f
789.5977 34.6768 m
715.209 68.6768 658.2109 51.8486 643.3242 12.3154 c
641.6641 7.90625 640.8906 3.77051 640.832 0 C
686.9766 0 L
687.4609 0.948242 687.9375 1.9209 688.4004 2.93848 c
699.9863 28.4287 741.334 48.9385 789.5977 34.6768 C
f
655.1855 180.124 m
623.125 176.1113 627.207 128.5264 640.3164 107.5225 c
652.6035 89.0957 673.1523 75.5117 695.0596 74.1826 C
662.2539 99.1162 721.6523 188.4414 655.1855 180.124 c
f
552.4707 112.8682 m
571.2539 78.665 630.5645 92.501 618.9014 127.4258 c
610.584 152.333 588.5811 160.4834 594.5811 205.8516 c
600.6475 251.7197 645.333 275.2197 692.792 275.4395 C
605.0801 292.5615 503.0391 202.8799 552.4707 112.8682 c
f
510.5049 183.3379 m
470.0068 207.3369 440.3174 157.9805 464.0605 113.1201 c
484.6689 74.1826 545.5332 57.6768 573.209 75.0645 C
512.6924 71.1729 538.6699 167.2432 510.5049 183.3379 c
f
603.001 0 m
624.2168 0 L
617.8555 8.49219 609.5576 6.6582 603.001 0 C
f
210.9507 0 m
273.749 0 L
289.6353 13.2246 309.0801 18.7529 334 20.3887 C
297.4736 37.8545 224.7251 26.7188 210.9507 0 C
f
291.0679 0 m
304.8438 0 L
307.7656 2.52051 310.8955 4.53809 314.2139 5.70605 C
306.1167 4.70996 298.2085 2.7373 291.0679 0 C
f
405.167 248.5576 m
437.2559 298.9033 426.8076 348.9653 409.251 363.6064 c
393.3335 376.8809 366.5127 382.1592 336.6221 363.6064 c
297.9556 339.6069 270.5234 358.3984 266.6836 385.4341 c
263.7046 406.4136 269.4751 421.835 283.9302 434.7979 c
309 457.2793 338.9614 458.5132 366.8706 449.6768 c
426.7939 429.1548 469.5518 323.0854 405.167 248.5576 C
f
562.3359 537.0166 m
542.3359 500.0166 555.7451 458.3462 598 454.7842 c
611.9502 453.6084 641.2197 472.79 628.3984 509.6768 c
611.4355 558.478 658.0703 566.5923 696.9541 562.5146 C
645.333 592.5015 586.2949 580.3271 562.3359 537.0166 c
f
496.0479 497.083 m
469.5518 486.6245 447.4844 465.79 443.7363 421.6768 c
439.6367 373.4263 447.4844 342.2656 451.541 320.2129 C
453.9824 358.5552 450.9092 386.1714 470.9668 414.0054 c
495.4678 448.0054 531.3604 432.8877 539.5332 471.1958 c
545.2539 498.0103 506.3223 501.1382 496.0479 497.083 c
f
487 391.3726 m
476 398.3726 465.8506 375.1343 463.8506 367.1343 C
462.1992 358.8765 455.6045 334.5557 460.7393 308.6768 C
463.8506 334.5557 471.248 351.6206 477 357.3726 c
482 362.3726 501 383.3726 487 391.3726 C
f
484.6689 534.6768 m
476.6689 513.6768 496.0479 505.7061 520 514.6768 c
538.9189 521.7627 553.7305 540.0625 561.125 557.0576 C
536.3564 543.9541 491.3203 552.9673 484.6689 534.6768 c
f
866.9307 358.4141 m
823.5977 361.1226 821.5977 324.2788 838.2637 301.5225 c
850.2637 285.8096 858 269.3604 856 249.8545 c
854.9141 239.709 851.1768 223.8193 841.9111 214.4609 C
863.3242 224.4316 883.207 237.1885 896.623 262.3174 c
912.8203 292.6592 907.6084 355.8716 866.9307 358.4141 c
f
947.1885 206.5479 m
958.373 193.9619 988.2178 189.3369 995.1855 209.1592 c
1000.7549 224.999 978.0283 235.1191 965.1191 236.7236 c
926.1895 241.5605 904.9756 226.7207 887.8457 216.1465 C
920.0938 226.1455 933.2139 216.7314 947.1885 206.5479 C
f
1014.4063 217.7461 m
1014.4063 258.2607 L
1001.3506 242.8359 1002.3633 224.3867 1014.4063 217.7461 C
f
994.0859 356.0835 m
975.6592 346.8706 985.2422 314.8784 1014.4063 302.8145 C
1014.4063 342.2666 L
1008.7578 352.9312 1002.9678 360.228 994.0859 356.0835 c
f
937.6035 247.0439 m
952.6611 235.0996 984.5596 269.1436 1014.4063 281.5049 C
1014.4063 292.1357 L
949.8232 305.4639 919.5781 261.3428 937.6035 247.0439 c
f
836.6221 363.6064 m
866.5127 382.1592 893.334 376.8809 909.251 363.6064 c
926.8076 348.9653 937.2559 298.9033 905.167 248.5576 C
969.5518 323.0854 926.7939 429.1548 866.8711 449.6768 c
838.9609 458.5132 809 457.2793 783.9297 434.7979 c
769.4746 421.835 763.7051 406.4136 766.6836 385.4341 c
770.5234 358.3984 797.9551 339.6069 836.6221 363.6064 c
f
996.0479 497.083 m
969.5518 486.6245 947.4844 465.79 943.7363 421.6768 c
939.6367 373.4263 947.4844 342.2656 951.541 320.2129 C
953.9824 358.5552 950.9092 386.1714 970.9668 414.0054 c
984.1787 432.3398 1000.7021 436.3926 1014.4063 442.2407 C
1014.4063 497.9653 L
1006.8662 499.0479 999.6729 498.5137 996.0479 497.083 c
f
977 357.3726 m
982 362.3726 1001 383.3726 987 391.3726 C
976 398.3726 965.8506 375.1343 963.8506 367.1343 C
962.1992 358.8765 955.6045 334.5557 960.7393 308.6768 C
963.8506 334.5557 971.248 351.6206 977 357.3726 c
f
984.6689 534.6768 m
977.3027 515.3413 993.1523 507.0635 1014.4063 512.873 C
1014.4063 547.6182 L
999.9648 545.9551 987.8691 543.478 984.6689 534.6768 c
f
119.6875 276.8926 m
62.9604 289.6973 29.4048 275.9805 14.4067 258.2607 C
14.4067 217.7461 L
16.9751 216.3301 20.0376 215.4434 23.5801 215.2461 c
65.7871 212.8984 55.0928 290.4805 119.6875 276.8926 c
f
46 298.5166 m
50 298.5166 L
31.3901 301.6396 23.0664 325.9131 14.4067 342.2656 C
14.4067 302.8145 L
23.2256 299.167 33.8325 297.3379 46 298.5166 C
f
36.877 285.5703 m
28.9834 288.5313 21.4917 290.6729 14.4067 292.1357 C
14.4067 281.5049 L
22.1445 284.71 29.7446 286.46 36.877 285.5703 C
f
62.3359 537.0166 m
42.3359 500.0166 55.7451 458.3462 98 454.7842 c
111.9502 453.6084 141.2197 472.79 128.3984 509.6768 c
111.4355 558.478 158.0703 566.5923 196.9541 562.5146 C
145.333 592.5015 86.2949 580.3271 62.3359 537.0166 c
f
39.5332 471.1958 m
43.2354 488.5488 28.2368 495.9795 14.4067 497.9653 C
14.4067 442.2412 L
26.1157 447.2378 35.7676 453.5454 39.5332 471.1958 c
f
61.125 557.0576 m
48.2749 550.2593 29.9771 549.4116 14.4067 547.6182 C
14.4067 512.873 L
16.2363 513.373 18.1016 513.9658 20 514.6768 c
38.9189 521.7627 53.7305 540.0625 61.125 557.0576 C
f
841.9111 714.4609 m
863.3242 724.4316 883.207 737.1885 896.623 762.3174 c
912.8203 792.6592 907.6084 855.8716 866.9307 858.4141 c
823.5977 861.1226 821.5977 824.2788 838.2637 801.5225 c
850.2637 785.8096 858 769.3604 856 749.8545 c
854.9141 739.709 851.1768 723.8193 841.9111 714.4609 C
f
947.1885 706.5479 m
958.373 693.9619 988.2178 689.3369 995.1855 709.1592 c
1000.7549 724.999 978.0283 735.1191 965.1191 736.7236 c
926.1895 741.5605 904.9756 726.7207 887.8457 716.1465 C
920.0938 726.1455 933.2139 716.7314 947.1885 706.5479 C
f
1014.4063 717.7466 m
1014.4063 758.2603 L
1001.3506 742.8359 1002.3633 724.3867 1014.4063 717.7466 C
f
994.0859 856.0835 m
975.6592 846.8706 985.2422 814.8784 1014.4063 802.8145 C
1014.4063 842.2666 L
1008.7578 852.9312 1002.9678 860.228 994.0859 856.0835 c
f
937.6035 747.0439 m
952.6611 735.0996 984.5596 769.1436 1014.4063 781.5049 C
1014.4063 792.1357 L
949.8232 805.4639 919.5781 761.3423 937.6035 747.0439 c
f
836.6221 863.6064 m
866.5127 882.1592 893.334 876.8809 909.251 863.6064 c
926.8076 848.9653 937.2559 798.9033 905.167 748.5576 C
969.5518 823.0854 926.7939 929.1548 866.8711 949.6768 c
838.9609 958.5132 809 957.2793 783.9297 934.7979 c
769.4746 921.835 763.7051 906.4136 766.6836 885.4341 c
770.5234 858.3984 797.9551 839.6069 836.6221 863.6064 c
f
996.0479 997.083 m
969.5518 986.6245 947.4844 965.79 943.7363 921.6768 c
939.6367 873.4263 947.4844 842.2656 951.541 820.2129 C
953.9824 858.5552 950.9092 886.1714 970.9668 914.0054 c
984.1787 932.3398 1000.7021 936.3926 1014.4063 942.2412 C
1014.4063 997.9658 L
1006.8662 999.0479 999.6729 998.5137 996.0479 997.083 c
f
977 857.3726 m
982 862.3726 1001 883.3726 987 891.3726 C
976 898.3726 965.8506 875.1343 963.8506 867.1343 C
962.1992 858.8765 955.6045 834.5557 960.7393 808.6768 C
963.8506 834.5557 971.248 851.6206 977 857.3726 c
f
119.6875 776.8926 m
62.9604 789.6973 29.4048 775.9805 14.4067 758.2607 C
14.4067 717.7461 L
16.9751 716.3301 20.0376 715.4429 23.5801 715.2461 c
65.7871 712.8984 55.0928 790.4805 119.6875 776.8926 c
f
46 798.5166 m
50 798.5166 L
31.3901 801.6396 23.0664 825.9131 14.4067 842.2656 C
14.4067 802.8145 L
23.2256 799.1665 33.8325 797.3384 46 798.5166 C
f
36.877 785.5703 m
28.9834 788.5308 21.4917 790.6733 14.4067 792.1357 C
14.4067 781.5049 L
22.1445 784.7095 29.7446 786.46 36.877 785.5703 C
f
98 954.7842 m
110.6738 953.7158 135.9888 969.4521 130.9014 1000.0005 C
53.3262 1000.0005 L
54.5225 976.4492 69.8501 957.1572 98 954.7842 c
f
39.5332 971.1958 m
43.2354 988.5488 28.2368 995.9795 14.4067 997.9653 C
14.4067 942.2412 L
26.1157 947.2383 35.7676 953.5459 39.5332 971.1958 c
f
341.9111 714.4609 m
363.3242 724.4316 383.207 737.1885 396.623 762.3174 c
412.8203 792.6592 407.6084 855.8716 366.9307 858.4141 c
323.5977 861.1226 321.5977 824.2788 338.2637 801.5225 c
350.2637 785.8096 358 769.3604 356 749.8545 c
354.9141 739.709 351.1768 723.8193 341.9111 714.4609 C
f
447.1885 706.5479 m
458.373 693.9619 488.2178 689.3369 495.1855 709.1592 c
500.7549 724.999 478.0283 735.1191 465.1191 736.7236 c
426.1895 741.5605 404.9756 726.7207 387.8457 716.1465 C
420.0938 726.1455 433.2139 716.7314 447.1885 706.5479 C
f
523.5801 715.2461 m
565.7871 712.8984 555.0928 790.4805 619.6875 776.8926 c
503.0469 803.2207 484.3457 717.4277 523.5801 715.2461 c
f
494.0859 856.0835 m
470.0869 844.0845 493.5947 793.4414 546 798.5166 C
550 798.5166 L
519.252 803.6768 516.585 866.583 494.0859 856.0835 c
f
437.6035 747.0439 m
456.5645 732.0029 502.2324 789.8926 536.877 785.5703 C
457.0322 815.5176 417.6006 762.9111 437.6035 747.0439 c
f
336.6221 863.6064 m
366.5127 882.1592 393.334 876.8809 409.251 863.6064 c
426.8076 848.9653 437.2559 798.9033 405.167 748.5576 C
469.5518 823.0854 426.7939 929.1548 366.8711 949.6768 c
338.9609 958.5132 309 957.2793 283.9297 934.7979 c
269.4746 921.835 263.7051 906.4136 266.6836 885.4341 c
270.5234 858.3984 297.9551 839.6069 336.6221 863.6064 c
f
598 954.7842 m
610.6738 953.7158 635.9883 969.4521 630.9014 1000.0005 C
553.3262 1000.0005 L
554.5225 976.4492 569.8496 957.1572 598 954.7842 c
f
470.9668 914.0054 m
495.4678 948.0054 531.3604 932.8877 539.5332 971.1958 c
545.2539 998.0103 506.3223 1001.1382 496.0479 997.083 c
469.5518 986.6245 447.4844 965.79 443.7363 921.6768 c
439.6367 873.4263 447.4844 842.2656 451.541 820.2129 C
453.9824 858.5552 450.9092 886.1714 470.9668 914.0054 c
f
487 891.3726 m
476 898.3726 465.8506 875.1343 463.8506 867.1343 C
462.1992 858.8765 455.6045 834.5557 460.7393 808.6768 C
463.8506 834.5557 471.248 851.6206 477 857.3726 c
482 862.3726 501 883.3726 487 891.3726 C
f
984.6689 34.6768 m
977.3027 15.3418 993.1523 7.06348 1014.4063 12.873 C
1014.4063 47.6182 L
999.9648 45.9551 987.8691 43.4785 984.6689 34.6768 c
f
196.9541 62.5146 m
145.333 92.501 86.2949 80.3271 62.3359 37.0166 c
55.6597 24.666 52.7266 11.8008 53.3262 0 C
130.9014 0 L
130.3887 3.07617 129.5713 6.30176 128.3984 9.67676 c
111.4355 58.4775 158.0703 66.5928 196.9541 62.5146 C
f
61.125 57.0576 m
48.2749 50.2598 29.9771 49.4121 14.4067 47.6182 C
14.4067 12.873 L
16.2363 13.373 18.1016 13.9658 20 14.6768 c
38.9189 21.7627 53.7305 40.0625 61.125 57.0576 C
f
628.3984 9.67676 m
611.4355 58.4775 658.0703 66.5928 696.9541 62.5146 C
645.333 92.501 586.2949 80.3271 562.3359 37.0166 c
555.6602 24.666 552.7266 11.8008 553.3262 0 C
630.9014 0 L
630.3887 3.07617 629.5713 6.30176 628.3984 9.67676 c
f
484.6689 34.6768 m
476.6689 13.6768 496.0479 5.70605 520 14.6768 c
538.9189 21.7627 553.7305 40.0625 561.125 57.0576 C
536.3564 43.9541 491.3203 52.9678 484.6689 34.6768 c
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (New Pattern1)
(New Pattern1) 1.44578 0 1008.9341 1000.0005 [
%AI3_Tile
(0 O 0 R 0.6 0.340673 0.309819 0.153262 k
 0.6 0.340673 0.309819 0.153262 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
190.4517 514.4082 m
202.522 528.1875 223.8257 538.5693 249.5815 539.3188 c
223.8257 538.5693 202.522 528.1875 190.4517 514.4082 c
f
209.0786 552.9668 m
183.7607 552.894 163.5459 545.1113 150.5044 531.9727 c
163.5459 545.1113 183.7607 552.894 209.0786 552.9668 c
f
140.2207 517.7217 m
140.8076 518.8887 141.4341 520.0322 142.1006 521.1514 c
141.4341 520.0322 140.8076 518.8887 140.2207 517.7217 c
f
142.1006 521.1514 m
142.7666 522.271 143.4722 523.3657 144.2158 524.4355 c
143.4722 523.3657 142.7666 522.271 142.1006 521.1514 c
f
188.6235 512.2051 m
187.4565 510.7192 186.395 509.1987 185.4438 507.6519 c
186.395 509.1987 187.4565 510.7192 188.6235 512.2051 c
f
147.8203 529.0762 m
148.6777 530.0684 149.5728 531.0342 150.5044 531.9727 c
149.5728 531.0342 148.6777 530.0684 147.8203 529.0762 c
f
284.1255 534.6768 m
284.1245 534.6772 L
273.5674 537.7969 263.3408 539.2524 253.6846 539.3564 c
263.3413 539.2524 273.5679 537.7964 284.1255 534.6768 C
f
144.2158 524.4355 m
144.9595 525.5049 145.7417 526.5498 146.562 527.5684 c
145.7417 526.5498 144.9595 525.5049 144.2158 524.4355 c
f
189.5874 574.1831 m
156.7817 599.1157 216.1802 688.4414 149.7134 680.1235 c
117.6528 676.1113 121.7349 628.5264 134.8442 607.5225 c
147.1313 589.0957 167.6802 575.5117 189.5874 574.1831 C
f
67.7368 575.0645 m
10.3091 571.3711 30.7642 657.686 8.93457 680.2617 C
8.93457 573.4941 L
30.6621 566.1479 53.5562 566.1553 67.7368 575.0645 C
f
869.8618 498.6768 m
845.8618 510.6768 814.6538 520.3887 809.1938 492.6768 c
801.439 453.3101 895.5278 492.9565 925.3169 398.1841 C
921.9175 449.6768 894.2739 486.4702 869.8618 498.6768 c
f
885.5278 526.5908 m
888.9263 492.5547 910.5278 463.6768 941.5278 449.6768 C
901.5278 478.6768 978.5278 521.4126 963.5278 564.6768 c
944.6187 619.2153 879.5278 586.6729 885.5278 526.5908 c
f
849.7612 520.3887 m
832.813 533.2554 808.2808 573.7231 818.0776 599.5654 c
831.3882 634.6768 863.3911 633.7881 871.5278 621.1006 c
895.5278 583.6768 946.5278 613.6768 934.728 661.9746 c
928.5269 687.3545 896.2251 714.8804 842.6118 703.0049 c
786.9536 690.6768 733.5278 580.8027 849.7612 520.3887 C
f
858.2788 605.6768 m
815.2788 604.6768 838.6392 521.0889 872.5278 509.6768 C
853.5278 528.6768 859.772 545.6582 869.5278 567.6768 c
880.5278 592.5015 877.2788 605.6768 858.2788 605.6768 c
f
739.5278 666.6768 m
699.5278 666.9907 700.5278 615.6768 714.5278 591.6768 C
727.6587 567.167 759.1782 548.021 786.9536 538.2632 C
769.5278 557.6768 768.394 579.7041 765.5278 601.6768 c
762.5278 628.6768 772.2231 666.4199 739.5278 666.6768 c
f
1005.0327 683.3379 m
964.5347 707.3364 934.8452 657.9805 958.5884 613.1201 c
968.6372 594.1343 988.2573 580.4849 1008.9341 573.4941 C
1008.9341 680.2627 L
1007.7603 681.4766 1006.4702 682.5166 1005.0327 683.3379 c
f
705.7358 480.6768 m
716.6255 458.4541 745.8364 479.8979 765.9497 498.0103 c
782.2544 512.6929 802.3823 518.6724 828.5278 520.3887 C
784.1255 541.6211 686.1753 520.5928 705.7358 480.6768 c
f
756.5278 475.3433 m
753.1938 470.0103 752.5278 456.0103 760.5278 454.0103 C
767.8618 451.3433 773.8618 461.3433 776.5278 466.6768 C
780.7192 474.2212 792.5278 500 808.7417 505.7061 C
784.1255 502.6768 761.2114 490.6768 756.5278 475.3433 C
f
336.439 214.4609 m
357.8516 224.4316 377.7354 237.1885 391.1504 262.3174 c
407.3481 292.6592 402.1362 355.8716 361.4585 358.4141 c
318.125 361.1226 316.125 324.2788 332.7915 301.5225 c
344.7915 285.8096 352.5278 269.3604 350.5278 249.8545 c
349.4424 239.709 345.7046 223.8193 336.439 214.4609 C
f
309.1943 492.6768 m
301.439 453.3101 395.5278 492.9565 425.3169 398.1841 C
421.9175 449.6768 394.2744 486.4702 369.8613 498.6768 c
345.8613 510.6768 314.6538 520.3887 309.1943 492.6768 c
f
385.5278 526.5908 m
388.9268 492.5547 410.5278 463.6768 441.5278 449.6768 C
401.5278 478.6768 478.5278 521.4126 463.5278 564.6768 c
444.6187 619.2153 379.5278 586.6729 385.5278 526.5908 c
f
349.7612 520.3887 m
332.8135 533.2554 308.2808 573.7231 318.0776 599.5654 c
331.3882 634.6768 363.3911 633.7881 371.5278 621.1006 c
395.5278 583.6768 446.5278 613.6768 434.728 661.9746 c
428.5269 687.3545 396.2246 714.8804 342.6113 703.0049 c
286.9536 690.6768 233.5278 580.8027 349.7612 520.3887 C
f
358.2788 605.6768 m
315.2788 604.6768 338.6396 521.0889 372.5278 509.6768 C
353.5278 528.6768 359.7715 545.6582 369.5278 567.6768 c
380.5278 592.5015 377.2788 605.6768 358.2788 605.6768 c
f
239.5278 666.6768 m
199.5278 666.9907 200.5278 615.6768 214.5278 591.6768 C
227.6582 567.167 259.1782 548.021 286.9536 538.2632 C
269.5278 557.6768 268.394 579.7041 265.5278 601.6768 c
262.5278 628.6768 272.2227 666.4199 239.5278 666.6768 c
f
284.126 534.6768 m
256.23 547.4268 230.7798 553.0293 209.0786 552.9668 c
230.7793 553.0293 256.2295 547.4268 284.1245 534.6772 C
284.126 534.6768 L
f
147.8203 529.0762 m
147.3916 528.5801 146.9722 528.0771 146.562 527.5684 c
145.7417 526.5498 144.9595 525.5049 144.2158 524.4355 c
143.4722 523.3657 142.7666 522.271 142.1006 521.1514 c
141.4341 520.0322 140.8076 518.8887 140.2207 517.7217 c
139.3403 515.9712 138.5498 514.168 137.8521 512.3149 c
125.186 478.6777 163.7407 460.7217 182.9282 502.938 c
183.6523 504.5313 184.4927 506.105 185.4438 507.6519 c
186.395 509.1987 187.4565 510.7192 188.6235 512.2051 c
189.207 512.9482 189.8164 513.6831 190.4517 514.4082 c
202.522 528.1875 223.8257 538.5693 249.5815 539.3188 c
250.937 539.3584 252.3052 539.3711 253.6846 539.3564 c
263.3408 539.2524 273.5674 537.7969 284.1245 534.6772 C
256.2295 547.4268 230.7793 553.0293 209.0786 552.9668 c
183.7607 552.894 163.5459 545.1113 150.5044 531.9727 c
149.5728 531.0342 148.6777 530.0684 147.8203 529.0762 c
f
682.9282 502.938 m
694.5142 528.4287 735.8618 548.9385 784.1255 534.6768 C
709.7368 568.6768 652.7388 551.8491 637.8521 512.3149 c
625.186 478.6777 663.7407 460.7217 682.9282 502.938 c
f
649.7134 680.1235 m
617.6528 676.1113 621.7349 628.5264 634.8442 607.5225 c
647.1313 589.0957 667.6802 575.5117 689.5874 574.1831 C
656.7817 599.1157 716.1802 688.4414 649.7134 680.1235 c
f
458.5884 613.1201 m
479.1968 574.1831 540.061 557.6768 567.7368 575.0645 C
507.2202 571.1724 533.1978 667.2437 505.0327 683.3379 c
464.5347 707.3364 434.8452 657.9805 458.5884 613.1201 c
f
205.7358 480.6768 m
216.626 458.4541 245.8369 479.8979 265.9497 498.0103 c
282.2539 512.6929 302.3823 518.6724 328.5278 520.3887 C
284.126 541.6211 186.1753 520.5928 205.7358 480.6768 c
f
256.5278 475.3433 m
253.1943 470.0103 252.5278 456.0103 260.5278 454.0103 C
267.8613 451.3433 273.8613 461.3433 276.5278 466.6768 C
280.7192 474.2212 292.5278 500 308.7417 505.7061 C
284.126 502.6768 261.2114 490.6768 256.5278 475.3433 C
f
114.2153 776.8926 m
115.6318 776.5728 117.0493 776.2515 118.4946 775.8984 c
117.0278 776.2788 115.6108 776.5986 114.2153 776.8926 c
f
925.3169 898.1841 m
921.9175 949.6768 894.2739 986.4702 869.8618 998.6768 c
868.9712 999.1221 868.0669 999.563 867.1577 1000.0005 C
811.6431 1000.0005 L
810.5864 997.917 809.7505 995.5005 809.1938 992.6768 c
801.439 953.3101 895.5278 992.9565 925.3169 898.1841 C
f
941.5278 949.6768 m
922.147 963.7275 930.2329 981.0029 942.0122 1000.0005 C
892.2397 1000.0005 L
901.4663 977.8623 919.0142 959.8438 941.5278 949.6768 C
f
705.7358 980.6768 m
716.6255 958.4541 745.8364 979.8979 765.9497 998.0103 c
766.7144 998.6992 767.4966 999.3496 768.2778 1000.0005 C
705.479 1000.0005 L
702.5083 994.2393 702.2661 987.7568 705.7358 980.6768 c
f
756.5278 975.3433 m
753.1938 970.0103 752.5278 956.0103 760.5278 954.0103 C
767.8618 951.3433 773.8618 961.3433 776.5278 966.6768 C
779.8618 972.6772 788.0171 990.2041 799.3726 1000.0005 C
785.5962 1000.0005 L
771.0288 994.4165 759.6704 985.6328 756.5278 975.3433 C
f
425.3169 898.1841 m
421.9175 949.6768 394.2744 986.4702 369.8613 998.6768 c
368.9702 999.1221 368.0664 999.563 367.1572 1000.0005 C
311.6431 1000.0005 L
310.5869 997.917 309.7505 995.5005 309.1943 992.6768 c
301.439 953.3101 395.5278 992.9565 425.3169 898.1841 C
f
441.5278 949.6768 m
422.147 963.7275 430.2329 981.0029 442.0122 1000.0005 C
392.2397 1000.0005 L
401.4673 977.8623 419.0142 959.8438 441.5278 949.6768 C
f
181.5049 1000.0005 m
135.3599 1000.0005 L
134.9785 975.7012 164.5405 966.7637 181.5049 1000.0005 C
f
681.5044 1000.0005 m
635.3599 1000.0005 L
634.978 975.7012 664.5405 966.7637 681.5044 1000.0005 C
f
614.2153 776.8926 m
615.6313 776.5728 617.0493 776.2515 618.4946 775.8984 c
617.0278 776.2788 615.6108 776.5986 614.2153 776.8926 c
f
205.7358 980.6768 m
216.626 958.4541 245.8369 979.8979 265.9497 998.0103 c
266.7144 998.6992 267.4961 999.3496 268.2778 1000.0005 C
205.4785 1000.0005 L
202.5083 994.2393 202.2661 987.7568 205.7358 980.6768 c
f
256.5278 975.3433 m
253.1943 970.0103 252.5278 956.0103 260.5278 954.0103 C
267.8613 951.3433 273.8613 961.3433 276.5278 966.6768 C
279.8613 972.6772 288.0176 990.2041 299.3721 1000.0005 C
285.5972 1000.0005 L
271.0293 994.4165 259.6709 985.6328 256.5278 975.3433 C
f
150.5044 31.9727 m
163.5459 45.1113 183.7607 52.8936 209.0786 52.9668 c
183.7607 52.8936 163.5459 45.1113 150.5044 31.9727 c
f
144.2158 24.4355 m
144.9595 25.5049 145.7417 26.5498 146.562 27.5684 c
145.7417 26.5498 144.9595 25.5049 144.2158 24.4355 c
f
142.1006 21.1514 m
142.7666 22.2705 143.4722 23.3662 144.2158 24.4355 c
143.4722 23.3662 142.7666 22.2705 142.1006 21.1514 c
f
284.1255 34.6768 m
284.1245 34.6768 L
273.5674 37.7969 263.3408 39.2529 253.6846 39.3564 c
263.3413 39.2529 273.5679 37.7969 284.1255 34.6768 C
f
147.8203 29.0762 m
148.6777 30.0684 149.5728 31.0342 150.5044 31.9727 c
149.5728 31.0342 148.6777 30.0684 147.8203 29.0762 c
f
188.6235 12.2061 m
187.4565 10.7197 186.395 9.19922 185.4438 7.65234 c
186.395 9.19922 187.4565 10.7197 188.6235 12.2061 c
f
140.2207 17.7227 m
140.8076 18.8896 141.4341 20.0322 142.1006 21.1514 c
141.4341 20.0322 140.8076 18.8896 140.2207 17.7227 c
f
190.4517 14.4082 m
202.522 28.1875 223.8257 38.5693 249.5815 39.3193 c
223.8257 38.5693 202.522 28.1875 190.4517 14.4082 c
f
149.7134 180.124 m
117.6528 176.1113 121.7349 128.5264 134.8442 107.5225 c
147.1313 89.0957 167.6802 75.5117 189.5874 74.1826 C
156.7817 99.1162 216.1802 188.4414 149.7134 180.124 c
f
67.7368 75.0645 m
10.3091 71.3711 30.7642 157.6855 8.93457 180.2617 C
8.93457 73.4941 L
30.6621 66.1475 53.5562 66.1553 67.7368 75.0645 C
f
97.5288 0 m
118.7446 0 L
112.3833 8.49219 104.0854 6.6582 97.5288 0 C
f
811.6421 0 m
867.1587 0 L
846.0728 10.1436 820.5659 17.6074 811.6421 0 C
f
963.5278 64.6768 m
944.6187 119.2158 879.5278 86.6729 885.5278 26.5908 c
886.4585 17.2725 888.7612 8.3457 892.2397 0 C
942.0122 0 L
954.5454 20.2129 971.2603 42.375 963.5278 64.6768 c
f
842.6118 203.0049 m
786.9536 190.6768 733.5278 80.8027 849.7612 20.3887 C
832.813 33.2549 808.2808 73.7236 818.0776 99.5654 c
831.3882 134.6768 863.3911 133.7881 871.5278 121.1006 c
895.5278 83.6768 946.5278 113.6768 934.728 161.9746 c
928.5269 187.3545 896.2251 214.8799 842.6118 203.0049 c
f
858.2788 105.6768 m
815.2788 104.6768 838.6392 21.0889 872.5278 9.67676 C
853.5278 28.6768 859.772 45.6582 869.5278 67.6768 c
880.5278 92.501 877.2788 105.6768 858.2788 105.6768 c
f
739.5278 166.6768 m
699.5278 166.9912 700.5278 115.6768 714.5278 91.6768 C
727.6587 67.167 759.1782 48.0205 786.9536 38.2627 C
769.5278 57.6768 768.394 79.7041 765.5278 101.6768 c
762.5278 128.6768 772.2231 166.4199 739.5278 166.6768 c
f
1005.0327 183.3379 m
964.5347 207.3369 934.8452 157.9805 958.5884 113.1201 c
968.6372 94.1338 988.2573 80.4844 1008.9341 73.4941 C
1008.9341 180.2627 L
1007.7603 181.4766 1006.4702 182.5166 1005.0327 183.3379 c
f
705.478 0 m
768.2769 0 L
784.1636 13.2246 803.6079 18.7529 828.5278 20.3887 C
792.0015 37.8545 719.2524 26.7188 705.478 0 C
f
785.5952 0 m
799.3716 0 L
802.2935 2.52051 805.4233 4.53809 808.7417 5.70605 C
800.644 4.70996 792.7358 2.7373 785.5952 0 C
f
311.6426 0 m
367.1582 0 L
346.0728 10.1436 320.5664 17.6074 311.6426 0 C
f
463.5278 64.6768 m
444.6187 119.2158 379.5278 86.6729 385.5278 26.5908 c
386.4585 17.2725 388.7617 8.3457 392.2397 0 C
442.0122 0 L
454.5454 20.2129 471.2603 42.375 463.5278 64.6768 c
f
342.6113 203.0049 m
286.9536 190.6768 233.5278 80.8027 349.7612 20.3887 C
332.8135 33.2549 308.2808 73.7236 318.0776 99.5654 c
331.3882 134.6768 363.3911 133.7881 371.5278 121.1006 c
395.5278 83.6768 446.5278 113.6768 434.728 161.9746 c
428.5269 187.3545 396.2246 214.8799 342.6113 203.0049 c
f
358.2788 105.6768 m
315.2788 104.6768 338.6396 21.0889 372.5278 9.67676 C
353.5278 28.6768 359.7715 45.6582 369.5278 67.6768 c
380.5278 92.501 377.2788 105.6768 358.2788 105.6768 c
f
239.5278 166.6768 m
199.5278 166.9912 200.5278 115.6768 214.5278 91.6768 C
227.6582 67.167 259.1782 48.0205 286.9536 38.2627 C
269.5278 57.6768 268.394 79.7041 265.5278 101.6768 c
262.5278 128.6768 272.2227 166.4199 239.5278 166.6768 c
f
284.126 34.6768 m
256.23 47.4268 230.7798 53.0293 209.0786 52.9668 c
230.7793 53.0293 256.2295 47.4268 284.1245 34.6768 C
284.126 34.6768 L
f
185.4438 7.65234 m
186.395 9.19922 187.4565 10.7197 188.6235 12.2061 c
189.207 12.9492 189.8164 13.6836 190.4517 14.4082 c
202.522 28.1875 223.8257 38.5693 249.5815 39.3193 c
250.937 39.3584 252.3052 39.3711 253.6846 39.3564 c
263.3408 39.2529 273.5674 37.7969 284.1245 34.6768 C
256.2295 47.4268 230.7793 53.0293 209.0786 52.9668 c
183.7607 52.8936 163.5459 45.1113 150.5044 31.9727 c
149.5728 31.0342 148.6777 30.0684 147.8203 29.0762 c
147.3916 28.5801 146.9722 28.0771 146.562 27.5684 c
145.7417 26.5498 144.9595 25.5049 144.2158 24.4355 c
143.4722 23.3662 142.7666 22.2705 142.1006 21.1514 c
141.4341 20.0322 140.8076 18.8896 140.2207 17.7227 c
139.3403 15.9717 138.5498 14.1689 137.8521 12.3154 c
136.1919 7.90625 135.4189 3.77051 135.3599 0 C
181.5044 0 L
181.9888 0.948242 182.4658 1.9209 182.9282 2.93848 c
183.6523 4.53125 184.4927 6.10547 185.4438 7.65234 c
f
784.1255 34.6768 m
709.7368 68.6768 652.7388 51.8486 637.8521 12.3154 c
636.1919 7.90625 635.4185 3.77051 635.3599 0 C
681.5044 0 L
681.9888 0.948242 682.4653 1.9209 682.9282 2.93848 c
694.5142 28.4287 735.8618 48.9385 784.1255 34.6768 C
f
655.8618 188.0283 m
623.8237 187.793 628.647 125.8486 641.6577 106.1895 c
653.8521 88.9424 674.2456 76.2285 695.9878 74.9844 C
663.4292 98.3213 715.9302 188.4697 655.8618 188.0283 c
f
505.0327 183.3379 m
464.5347 207.3369 434.8452 157.9805 458.5884 113.1201 c
479.1968 74.1826 540.061 57.6768 567.7368 75.0645 C
507.2202 71.1729 533.1978 167.2432 505.0327 183.3379 c
f
597.5288 0 m
618.7446 0 L
612.3833 8.49219 604.0854 6.6582 597.5288 0 C
f
205.4785 0 m
268.2769 0 L
284.1631 13.2246 303.6079 18.7529 328.5278 20.3887 C
292.0015 37.8545 219.2529 26.7188 205.4785 0 C
f
285.5957 0 m
299.3716 0 L
302.2935 2.52051 305.4233 4.53809 308.7417 5.70605 C
300.6445 4.70996 292.7363 2.7373 285.5957 0 C
f
399.6948 248.5576 m
431.7837 298.9033 421.3354 348.9653 403.7788 363.6064 c
387.8613 376.8809 361.0405 382.1592 331.1499 363.6064 c
292.4834 339.6069 265.0513 358.3984 261.2114 385.4341 c
258.2324 406.4136 264.0029 421.835 278.458 434.7979 c
303.5278 457.2793 333.4893 458.5132 361.3984 449.6768 c
421.3218 429.1548 464.0796 323.0854 399.6948 248.5576 C
f
556.8638 537.0166 m
536.8638 500.0166 550.2729 458.3462 592.5278 454.7842 c
606.478 453.6084 635.7476 472.79 622.9263 509.6768 c
605.9634 558.478 652.5981 566.5923 691.4819 562.5146 C
639.8608 592.5015 580.8228 580.3271 556.8638 537.0166 c
f
490.5757 497.083 m
464.0796 486.6245 442.0122 465.79 438.2642 421.6768 c
434.1646 373.4263 442.0122 342.2656 446.0688 320.2129 C
448.5103 358.5552 445.437 386.1714 465.4946 414.0054 c
489.9956 448.0054 525.8882 432.8877 534.061 471.1958 c
539.7817 498.0103 500.8501 501.1382 490.5757 497.083 c
f
481.5278 391.3726 m
470.5278 398.3726 460.3784 375.1343 458.3784 367.1343 C
456.7271 358.8765 450.1323 334.5557 455.2671 308.6768 C
458.3784 334.5557 465.7759 351.6206 471.5278 357.3726 c
476.5278 362.3726 495.5278 383.3726 481.5278 391.3726 C
f
479.1968 534.6768 m
471.1968 513.6768 490.5757 505.7061 514.5278 514.6768 c
533.4468 521.7627 548.2583 540.0625 555.6528 557.0576 C
530.8843 543.9541 485.8481 552.9673 479.1968 534.6768 c
f
861.4585 358.4141 m
818.1255 361.1226 816.1255 324.2788 832.7915 301.5225 c
844.7915 285.8096 852.5278 269.3604 850.5278 249.8545 c
849.4419 239.709 845.7046 223.8193 836.439 214.4609 C
857.8521 224.4316 877.7349 237.1885 891.1509 262.3174 c
907.3481 292.6592 902.1362 355.8716 861.4585 358.4141 c
f
831.1499 363.6064 m
861.0405 382.1592 887.8618 376.8809 903.7788 363.6064 c
921.3354 348.9653 931.7837 298.9033 899.6948 248.5576 C
964.0796 323.0854 921.3218 429.1548 861.3989 449.6768 c
833.4888 458.5132 803.5278 457.2793 778.4575 434.7979 c
764.0024 421.835 758.2329 406.4136 761.2114 385.4341 c
765.0513 358.3984 792.4829 339.6069 831.1499 363.6064 c
f
990.5757 497.083 m
964.0796 486.6245 942.0122 465.79 938.2642 421.6768 c
934.1646 373.4263 942.0122 342.2656 946.0688 320.2129 C
948.5103 358.5552 945.437 386.1714 965.4946 414.0054 c
978.7065 432.3398 995.23 436.3926 1008.9341 442.2407 C
1008.9341 497.9653 L
1001.394 499.0479 994.2007 498.5137 990.5757 497.083 c
f
971.5278 357.3726 m
976.5278 362.3726 995.5278 383.3726 981.5278 391.3726 C
970.5278 398.3726 960.3784 375.1343 958.3784 367.1343 C
956.7271 358.8765 950.1323 334.5557 955.2671 308.6768 C
958.3784 334.5557 965.7759 351.6206 971.5278 357.3726 c
f
979.1968 534.6768 m
971.8306 515.3413 987.6802 507.0635 1008.9341 512.873 C
1008.9341 547.6182 L
994.4927 545.9551 982.397 543.478 979.1968 534.6768 c
f
56.8638 537.0166 m
36.8638 500.0166 50.2729 458.3462 92.5278 454.7842 c
106.478 453.6084 135.7476 472.79 122.9263 509.6768 c
105.9634 558.478 152.5981 566.5923 191.4819 562.5146 C
139.8608 592.5015 80.8228 580.3271 56.8638 537.0166 c
f
34.061 471.1958 m
37.7632 488.5488 22.7646 495.9795 8.93457 497.9653 C
8.93457 442.2412 L
20.6436 447.2378 30.2954 453.5454 34.061 471.1958 c
f
55.6528 557.0576 m
42.8027 550.2593 24.5049 549.4116 8.93457 547.6182 C
8.93457 512.873 L
10.7642 513.373 12.6294 513.9658 14.5278 514.6768 c
33.4468 521.7627 48.2583 540.0625 55.6528 557.0576 C
f
836.439 714.4609 m
857.8521 724.4316 877.7349 737.1885 891.1509 762.3174 c
907.3481 792.6592 902.1362 855.8716 861.4585 858.4141 c
818.1255 861.1226 816.1255 824.2788 832.7915 801.5225 c
844.7915 785.8096 852.5278 769.3604 850.5278 749.8545 c
849.4419 739.709 845.7046 723.8193 836.439 714.4609 C
f
831.1499 863.6064 m
861.0405 882.1592 887.8618 876.8809 903.7788 863.6064 c
921.3354 848.9653 931.7837 798.9033 899.6948 748.5576 C
964.0796 823.0854 921.3218 929.1548 861.3989 949.6768 c
833.4888 958.5132 803.5278 957.2793 778.4575 934.7979 c
764.0024 921.835 758.2329 906.4136 761.2114 885.4341 c
765.0513 858.3984 792.4829 839.6069 831.1499 863.6064 c
f
990.5757 997.083 m
964.0796 986.6245 942.0122 965.79 938.2642 921.6768 c
934.1646 873.4263 942.0122 842.2656 946.0688 820.2129 C
948.5103 858.5552 945.437 886.1714 965.4946 914.0054 c
978.7065 932.3398 995.23 936.3926 1008.9341 942.2412 C
1008.9341 997.9658 L
1001.394 999.0479 994.2007 998.5137 990.5757 997.083 c
f
971.5278 857.3726 m
976.5278 862.3726 995.5278 883.3726 981.5278 891.3726 C
970.5278 898.3726 960.3784 875.1343 958.3784 867.1343 C
956.7271 858.8765 950.1323 834.5557 955.2671 808.6768 C
958.3784 834.5557 965.7759 851.6206 971.5278 857.3726 c
f
92.5278 954.7842 m
105.2017 953.7158 130.5166 969.4521 125.4292 1000.0005 C
47.854 1000.0005 L
49.0503 976.4492 64.3779 957.1572 92.5278 954.7842 c
f
34.061 971.1958 m
37.7632 988.5488 22.7646 995.9795 8.93457 997.9653 C
8.93457 942.2412 L
20.6436 947.2383 30.2954 953.5459 34.061 971.1958 c
f
336.439 714.4609 m
357.8521 724.4316 377.7349 737.1885 391.1509 762.3174 c
407.3481 792.6592 402.1362 855.8716 361.4585 858.4141 c
318.1255 861.1226 316.1255 824.2788 332.7915 801.5225 c
344.7915 785.8096 352.5278 769.3604 350.5278 749.8545 c
349.4419 739.709 345.7046 723.8193 336.439 714.4609 C
f
331.1499 863.6064 m
361.0405 882.1592 387.8618 876.8809 403.7788 863.6064 c
421.3354 848.9653 431.7837 798.9033 399.6948 748.5576 C
464.0796 823.0854 421.3218 929.1548 361.3989 949.6768 c
333.4888 958.5132 303.5278 957.2793 278.4575 934.7979 c
264.0024 921.835 258.2329 906.4136 261.2114 885.4341 c
265.0513 858.3984 292.4829 839.6069 331.1499 863.6064 c
f
592.5278 954.7842 m
605.2017 953.7158 630.5161 969.4521 625.4292 1000.0005 C
547.854 1000.0005 L
549.0503 976.4492 564.3774 957.1572 592.5278 954.7842 c
f
465.4946 914.0054 m
489.9956 948.0054 525.8882 932.8877 534.061 971.1958 c
539.7817 998.0103 500.8501 1001.1382 490.5757 997.083 c
464.0796 986.6245 442.0122 965.79 438.2642 921.6768 c
434.1646 873.4263 442.0122 842.2656 446.0688 820.2129 C
448.5103 858.5552 445.437 886.1714 465.4946 914.0054 c
f
481.5278 891.3726 m
470.5278 898.3726 460.3784 875.1343 458.3784 867.1343 C
456.7271 858.8765 450.1323 834.5557 455.2671 808.6768 C
458.3784 834.5557 465.7759 851.6206 471.5278 857.3726 c
476.5278 862.3726 495.5278 883.3726 481.5278 891.3726 C
f
979.1968 34.6768 m
971.8306 15.3418 987.6802 7.06348 1008.9341 12.873 C
1008.9341 47.6182 L
994.4927 45.9551 982.397 43.4785 979.1968 34.6768 c
f
191.4819 62.5146 m
139.8608 92.501 80.8228 80.3271 56.8638 37.0166 c
50.1875 24.666 47.2544 11.8008 47.854 0 C
125.4292 0 L
124.9165 3.07617 124.0991 6.30176 122.9263 9.67676 c
105.9634 58.4775 152.5981 66.5928 191.4819 62.5146 C
f
55.6528 57.0576 m
42.8027 50.2598 24.5049 49.4121 8.93457 47.6182 C
8.93457 12.873 L
10.7642 13.373 12.6294 13.9658 14.5278 14.6768 c
33.4468 21.7627 48.2583 40.0625 55.6528 57.0576 C
f
622.9263 9.67676 m
605.9634 58.4775 652.5981 66.5928 691.4819 62.5146 C
639.8608 92.501 580.8228 80.3271 556.8638 37.0166 c
550.188 24.666 547.2544 11.8008 547.854 0 C
625.4292 0 L
624.9165 3.07617 624.0991 6.30176 622.9263 9.67676 c
f
479.1968 34.6768 m
471.1968 13.6768 490.5757 5.70605 514.5278 14.6768 c
533.4468 21.7627 548.2583 40.0625 555.6528 57.0576 C
530.8843 43.9541 485.8481 52.9678 479.1968 34.6768 c
f
541.8843 261.0635 m
587.7026 276.0576 621.2944 280.1641 646.686 263.667 c
675.4487 244.9805 662.2212 217.6328 682.5259 199.8027 c
725.8628 161.7412 775.2476 223.7246 735.8003 275.2588 c
689.481 335.7651 581.5845 297.2598 541.8843 261.0635 C
f
534.6392 343.2612 m
520.7339 370.519 485.0913 363.188 468.0757 308.915 c
459.6987 282.1973 445.6968 264.0771 418.6968 245.0723 C
474.7622 248.5859 555.5288 302.3135 534.6392 343.2612 c
f
539.7271 250.5742 m
561.8179 252.7148 578.5757 232.2969 590.0112 220.1768 C
600.4663 204.2041 635.5923 191.1387 645.5142 212.2314 c
663.8335 251.1768 588.0278 278.1768 539.7271 250.5742 C
f
612.2817 362.1499 m
612.0239 389.0591 605.4282 419.814 581.5601 433.9971 c
544.5376 455.9971 494.8862 436.874 502.1626 399.3301 c
507.937 369.5342 526.6724 370.2012 544.5376 363.9971 c
566.6011 356.335 570.9751 336.3721 564.5161 313.3979 c
559.1548 294.3252 533.0474 273.0986 508.9341 263.0889 C
557.6255 272.4268 611.4829 303.9292 612.2817 362.1499 c
f
669.1763 372.4097 m
682.2671 408.6929 663.9839 471.1958 625.0923 449.6768 c
611.3169 442.0547 614.0796 422.1304 624.5991 392.4746 c
632.8716 369.1499 638.5308 335.3872 605.2866 308.6729 C
618.3354 310.6025 654.5854 328.6631 669.1763 372.4097 c
f
710.6519 459.9473 m
695.6147 458.2163 688.437 441.8589 688.9487 422.5083 c
689.5259 400.6572 691.2456 375.2866 679.9155 364.54 C
762.9731 391.439 745.2925 463.0322 710.6519 459.9473 c
f
643.2075 313.1743 m
680.8335 338.3057 748.2632 301.8076 761.1479 329.4312 c
774.7437 358.5708 705.7358 398.1841 643.2075 313.1743 C
f
761.2114 294.6133 m
747.2778 240.0723 808.7417 217.7461 781.4624 170.8887 C
810.9409 200.668 834.2427 234.6875 828.5278 269.5781 C
823.105 330.0386 774.481 326.4346 761.2114 294.6133 C
f
459.6274 236.0879 m
494.9946 236.3516 533.3462 227.3252 549.6685 187.7139 c
563.7739 153.4834 546.1079 136.0342 552.7192 112.8838 c
562.0806 80.1104 608.9272 82.2959 617.2026 117.7041 c
638.979 210.8857 519.8442 264.4795 459.6274 236.0879 C
f
735.8003 775.2588 m
689.481 835.7651 581.5845 797.2598 541.8843 761.0635 C
587.7026 776.0576 621.2944 780.1641 646.686 763.667 c
675.4487 744.9805 662.2212 717.6328 682.5259 699.8027 c
725.8628 661.7412 775.2476 723.7246 735.8003 775.2588 c
f
534.6392 843.2612 m
520.7339 870.519 485.0913 863.188 468.0757 808.915 c
459.6987 782.1973 445.6968 764.0771 418.6968 745.0723 C
474.7622 748.5859 555.5288 802.3135 534.6392 843.2612 c
f
590.0112 720.1768 m
600.4663 704.2041 635.5923 691.1387 645.5142 712.2314 c
663.8335 751.1768 588.0278 778.1768 539.7271 750.5742 C
561.8179 752.7148 578.5757 732.2969 590.0112 720.1768 C
f
544.5376 863.9971 m
566.6011 856.335 570.9751 836.3721 564.5161 813.3979 c
559.1548 794.3252 533.0474 773.0986 508.9341 763.0889 C
557.6255 772.4268 611.4829 803.9292 612.2817 862.1499 c
612.0239 889.0591 605.4282 919.814 581.5601 933.9971 c
544.5376 955.9971 494.8862 936.874 502.1626 899.3301 c
507.937 869.5342 526.6724 870.2012 544.5376 863.9971 c
f
605.2866 808.6729 m
618.3354 810.6025 654.5854 828.6631 669.1763 872.4097 c
682.2671 908.6929 663.9839 971.1958 625.0923 949.6768 c
611.3169 942.0547 614.0796 922.1304 624.5991 892.4746 c
632.8716 869.1499 638.5308 835.3872 605.2866 808.6729 C
f
710.6519 959.9473 m
695.6147 958.2163 688.437 941.8589 688.9487 922.5083 c
689.5259 900.6572 691.2456 875.2866 679.9155 864.54 C
762.9731 891.439 745.2925 963.0322 710.6519 959.9473 c
f
643.2075 813.1743 m
680.8335 838.3057 748.2632 801.8076 761.1479 829.4312 c
774.7437 858.5708 705.7358 898.1841 643.2075 813.1743 C
f
761.2114 794.6133 m
747.2778 740.0723 808.7417 717.7461 781.4624 670.8887 C
810.9409 700.668 834.2427 734.6875 828.5278 769.5781 C
823.105 830.0386 774.481 826.4346 761.2114 794.6133 C
f
459.6274 736.0879 m
494.9946 736.3516 533.3462 727.3252 549.6685 687.7139 c
563.7739 653.4834 546.1079 636.0342 552.7192 612.8838 c
562.0806 580.1104 608.9272 582.2959 617.2026 617.7041 c
638.979 710.8857 519.8442 764.4795 459.6274 736.0879 C
f
968.0757 308.915 m
959.6987 282.1973 945.6968 264.0771 918.6968 245.0723 C
948.0522 246.9121 984.1724 262.5215 1008.9341 282.8516 C
1008.9341 358.4297 L
994.3237 356.3096 978.019 340.6313 968.0757 308.915 c
f
1002.1626 399.3301 m
1003.6431 391.6885 1005.981 386.0605 1008.9341 381.7964 C
1008.9341 427.3262 L
1002.8657 420.0186 1000.0005 410.4878 1002.1626 399.3301 c
f
959.6274 236.0879 m
976.272 236.2119 993.5747 234.2754 1008.9341 228.0654 C
1008.9341 243.1006 L
990.9819 244.877 973.6958 242.7217 959.6274 236.0879 C
f
968.0757 808.915 m
959.6987 782.1973 945.6968 764.0771 918.6968 745.0723 C
948.0522 746.9121 984.1724 762.5215 1008.9341 782.8516 C
1008.9341 858.4297 L
994.3237 856.3096 978.019 840.6313 968.0757 808.915 c
f
1002.1626 899.3301 m
1003.6431 891.6885 1005.981 886.0605 1008.9341 881.7964 C
1008.9341 927.3262 L
1002.8657 920.0186 1000.0005 910.4878 1002.1626 899.3301 c
f
959.6274 736.0879 m
976.272 736.2119 993.5747 734.2754 1008.9341 728.0649 C
1008.9341 743.1006 L
990.9819 744.877 973.6958 742.7212 959.6274 736.0879 C
f
41.8843 261.0635 m
87.7026 276.0576 121.2944 280.1641 146.686 263.667 c
175.4487 244.9805 162.2212 217.6328 182.5259 199.8027 c
225.8628 161.7412 275.2476 223.7246 235.8003 275.2588 c
189.481 335.7651 81.5845 297.2598 41.8843 261.0635 C
f
34.6392 343.2612 m
28.8599 354.5898 19.3252 359.937 8.93457 358.4297 C
8.93457 282.8516 L
31.4639 301.3486 44.5908 323.7539 34.6392 343.2612 c
f
39.7271 250.5742 m
61.8179 252.7148 78.5757 232.2969 90.0112 220.1768 C
100.4663 204.2041 135.5923 191.1387 145.5142 212.2314 c
163.8335 251.1768 88.0278 278.1768 39.7271 250.5742 C
f
2.1626 399.3301 m
3.64355 391.688 5.98193 386.0601 8.93457 381.7959 C
8.93457 427.3267 L
2.86621 420.0186 0 410.4883 2.1626 399.3301 c
f
8.93408 263.0889 m
8.93457 263.0889 L
8.93457 263.0889 L
8.93408 263.0889 l
f
112.2817 362.1499 m
112.0239 389.0591 105.4282 419.814 81.5601 433.9971 c
55.5405 449.4585 23.2842 444.6079 8.93457 427.3267 C
8.93457 381.7959 L
17.4946 369.4341 31.2544 368.6099 44.5376 363.9971 c
66.6011 356.335 70.9751 336.3721 64.5161 313.3979 c
59.1548 294.3252 33.0479 273.0986 8.93457 263.0889 C
8.93457 263.0889 L
57.626 272.4268 111.4829 303.9292 112.2817 362.1499 c
f
169.1763 372.4097 m
182.2671 408.6929 163.9839 471.1958 125.0923 449.6768 c
111.3169 442.0547 114.0796 422.1304 124.5991 392.4746 c
132.8716 369.1499 138.5308 335.3872 105.2866 308.6729 C
118.3354 310.6025 154.5854 328.6631 169.1763 372.4097 c
f
210.6519 459.9473 m
195.6147 458.2163 188.437 441.8589 188.9487 422.5083 c
189.5259 400.6572 191.2456 375.2866 179.9155 364.54 C
262.9731 391.439 245.2925 463.0322 210.6519 459.9473 c
f
143.2075 313.1743 m
180.8335 338.3057 248.2632 301.8076 261.1479 329.4312 c
274.7437 358.5708 205.7358 398.1841 143.2075 313.1743 C
f
261.2114 294.6133 m
247.2778 240.0723 308.7417 217.7461 281.4624 170.8887 C
310.9409 200.668 334.2427 234.6875 328.5278 269.5781 C
323.105 330.0386 274.481 326.4346 261.2114 294.6133 C
f
49.6685 187.7139 m
63.7739 153.4834 46.1079 136.0342 52.7192 112.8838 c
62.0806 80.1104 108.9272 82.2959 117.2026 117.7041 c
133.8911 189.1152 67.8218 237.2734 8.93457 243.1006 C
8.93457 228.0645 L
26.2119 221.0781 41.0278 208.6836 49.6685 187.7139 c
f
146.686 763.667 m
175.4487 744.9805 162.2212 717.6328 182.5259 699.8027 c
225.8628 661.7412 275.2476 723.7246 235.8003 775.2588 c
189.481 835.7651 81.5845 797.2598 41.8843 761.0635 C
87.7026 776.0576 121.2944 780.1641 146.686 763.667 c
f
34.6392 843.2612 m
28.8599 854.5898 19.3252 859.937 8.93457 858.4297 C
8.93457 782.8516 L
31.4639 801.3491 44.5908 823.7539 34.6392 843.2612 c
f
145.5142 712.2314 m
163.8335 751.1768 88.0278 778.1768 39.7271 750.5742 C
61.8179 752.7148 78.5757 732.2969 90.0112 720.1768 C
100.4663 704.2041 135.5923 691.1387 145.5142 712.2314 c
f
2.1626 899.3301 m
3.64355 891.688 5.98193 886.0601 8.93457 881.7959 C
8.93457 927.3267 L
2.86621 920.0186 0 910.4883 2.1626 899.3301 c
f
8.93408 763.0889 m
8.93457 763.0889 L
8.93457 763.0889 L
8.93408 763.0889 l
f
112.2817 862.1499 m
112.0239 889.0591 105.4282 919.814 81.5601 933.9971 c
55.5405 949.4585 23.2842 944.6084 8.93457 927.3267 C
8.93457 881.7959 L
17.4946 869.4341 31.2544 868.6099 44.5376 863.9971 c
66.6011 856.335 70.9751 836.3721 64.5161 813.3979 c
59.1548 794.3252 33.0479 773.0986 8.93457 763.0889 C
8.93457 763.0889 L
57.626 772.4268 111.4829 803.9292 112.2817 862.1499 c
f
169.1763 872.4097 m
182.2671 908.6929 163.9839 971.1958 125.0923 949.6768 c
111.3169 942.0547 114.0796 922.1304 124.5991 892.4746 c
132.8716 869.1499 138.5308 835.3872 105.2866 808.6729 C
118.3354 810.6025 154.5854 828.6631 169.1763 872.4097 c
f
210.6519 959.9473 m
195.6147 958.2163 188.437 941.8589 188.9487 922.5083 c
189.5259 900.6572 191.2456 875.2866 179.9155 864.54 C
262.9731 891.439 245.2925 963.0322 210.6519 959.9473 c
f
143.2075 813.1743 m
180.8335 838.3057 248.2632 801.8076 261.1479 829.4312 c
274.7437 858.5708 205.7358 898.1841 143.2075 813.1743 C
f
261.2114 794.6133 m
247.2778 740.0723 308.7417 717.7461 281.4624 670.8887 C
310.9409 700.668 334.2427 734.6875 328.5278 769.5781 C
323.105 830.0386 274.481 826.4346 261.2114 794.6133 C
f
49.6685 687.7139 m
63.7739 653.4834 46.1079 636.0342 52.7192 612.8838 c
62.0806 580.1104 108.9272 582.2959 117.2026 617.7041 c
133.8911 689.1152 67.8218 737.2729 8.93457 743.1006 C
8.93457 728.0649 L
26.2119 721.0786 41.0278 708.6836 49.6685 687.7139 c
f
446.2603 234.5068 m
407.3306 239.3438 386.1167 224.5039 368.9863 213.9297 C
401.2349 223.9287 414.355 214.5146 428.3296 204.3311 C
439.5142 191.7451 469.3589 187.1201 476.3267 206.9424 c
481.896 222.7822 459.1694 232.9023 446.2603 234.5068 c
f
428.3296 704.3311 m
439.5142 691.7451 469.3589 687.1201 476.3267 706.9424 c
481.896 722.7822 459.1694 732.9023 446.2603 734.5068 c
407.3306 739.3438 386.1167 724.5039 368.9863 713.9297 C
401.2349 723.9287 414.355 714.5146 428.3296 704.3311 C
f
868.9868 213.9297 m
901.2349 223.9287 914.355 214.5146 928.3296 204.3311 C
939.5142 191.7451 969.3589 187.1201 976.3267 206.9424 c
981.896 222.7822 959.1694 232.9023 946.2603 234.5068 c
907.3306 239.3438 886.1167 224.5039 868.9868 213.9297 C
f
928.3296 704.3311 m
939.5142 691.7451 969.3589 687.1201 976.3267 706.9424 c
981.896 722.7822 959.1694 732.9023 946.2603 734.5068 c
907.3306 739.3438 886.1167 724.5039 868.9868 713.9297 C
901.2349 723.9287 914.355 714.5146 928.3296 704.3311 C
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginBrushPattern
(Unnamed 20)0 A
u
u
0 J 0 j 1 w 4 M []0 d0 XR
-4012.5 4714.4351 m
-3798.8999 4714.4351 L
-3798.8999 4706.6343 L
-4012.5 4706.6343 L
-4012.5 4714.4351 L
n
0 O
0 0 0 1 k
-4012.5 4710.5352 m
-4002.4856 4713.0269 -3995.6863 4714.375 -3983.7007 4714.4351 c
-3970.7185 4714.5 -3905.6997 4714.4351 y
-3840.6816 4714.5 -3827.6997 4714.4351 v
-3815.7124 4714.375 -3808.9136 4713.0269 -3798.8999 4710.5352 C
-3808.9136 4708.0435 -3815.7124 4706.6953 -3827.6997 4706.6343 c
-3840.6816 4706.5688 -3905.6997 4706.6343 y
-3970.7185 4706.5688 -3983.7007 4706.6343 v
-3995.6863 4706.6953 -4002.4856 4708.0435 -4012.5 4710.5352 C
f
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 12)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7885 8587 m
-7787.2451 8587 L
-7787.2451 8566.2842 L
-7885 8566.2842 L
-7885 8587 L
n
0 O
0 g
1 XR
-7787.5586 8582.3184 m
-7802.8247 8568.5303 -7820.5537 8589.4492 -7835.9277 8577.166 C
-7834.4199 8571.5137 -7828.7598 8578.4678 -7826.5176 8573.8213 C
-7826.4341 8572.2207 -7829.6313 8573.7207 -7829.5127 8571.6006 C
-7827.6245 8568.1914 -7822.8955 8568.6885 -7821.5664 8572.7373 C
-7815.3115 8570.7676 -7808.7734 8564.8242 -7802.7847 8566.6172 C
-7801.2671 8567.9678 -7802.0708 8569.1514 -7801.6211 8570.4277 C
-7794.2871 8565.9922 -7785.4644 8575.1279 -7787.5586 8582.3184 C
f
-7831.2842 8583.9326 m
-7831.8247 8584.3086 -7830.9277 8585.4199 -7831.2529 8585.9082 C
-7833.3237 8585.1563 -7835.6919 8581.0781 -7837.4731 8578.3105 C
-7837.2632 8579.8398 -7838.6641 8581.1641 -7840.0781 8578.9326 C
-7840.2383 8578.1152 -7839.3667 8577.8281 -7839.6729 8576.9365 C
-7840.8306 8575.3682 -7841.8472 8576.8535 -7842.7798 8576.625 C
-7843.3184 8575.8613 -7843.6143 8575.2188 -7843.6816 8574.6943 C
-7837.5537 8571.874 -7830.9263 8583.6768 -7824.7456 8584.1025 C
-7824.9048 8587.1152 -7828.8555 8588.8008 -7831.2842 8583.9326 C
f
u
u
0 XR
-7828.1602 8578.6602 m
-7843.0142 8572.1201 -7864.4731 8576.3418 -7880.3687 8576.3193 c
-7886.2988 8576.3125 -7875.8965 8576.3213 -7881.8267 8576.3262 c
N
0 O
0 g
-7825.8052 8577.4395 m
-7843.1475 8570.2637 -7862.9341 8575.0557 -7881.0532 8574.9863 C
-7881.8608 8575.873 -7882.6685 8576.7617 -7883.4751 8577.6475 C
-7882.6973 8577.6475 -7881.9194 8577.6465 -7881.1421 8577.6533 C
-7880.3345 8576.7656 -7879.5273 8575.8789 -7878.7202 8574.9922 C
-7879.3516 8575.002 -7879.9844 8574.9951 -7880.6157 8574.9951 c
-7882.3735 8574.998 -7886.9165 8577.6621 -7883.0376 8577.6572 c
-7882.4063 8577.6572 -7881.7734 8577.6641 -7881.1421 8577.6533 c
-7879.4155 8577.626 -7874.8184 8575.0234 -7878.7202 8574.9922 c
-7879.4976 8574.9834 -7880.2759 8574.9863 -7881.0532 8574.9863 c
-7882.8081 8574.9854 -7887.3574 8577.6328 -7883.4751 8577.6475 c
-7866.1177 8577.7148 -7847.1025 8573.0137 -7830.5151 8579.8789 c
-7829.1035 8580.4639 -7823.8081 8578.2666 -7825.8052 8577.4395 c
-7825.8052 8577.4395 l
f
U
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 2)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7867 8587 m
-7885 8587 L
-7885 8569 L
-7867 8569 L
-7867 8587 L
n
u
u
0 Ap
0 O
0 0 0 1 k
-7866.9658 8579.4375 m
-7885 8579.4375 L
-7885 8576.5625 L
-7866.9658 8576.5625 L
-7866.9658 8579.4375 L
-7866.9658 8579.4375 L
f
U
u
0.15 1 0.9 0.1 k
-7866.9658 8578.7002 m
-7883.5 8578.7002 L
-7883.5 8577.3008 L
-7866.9658 8577.3008 L
-7866.9658 8578.7002 L
-7866.9658 8578.7002 L
f
U
u
0 1 1 0 k
-7866.9658 8578.3125 m
-7882.5 8578.3125 L
-7882.5 8577.6865 L
-7866.9658 8577.6865 L
-7866.9658 8578.3125 L
-7866.9658 8578.3125 L
f
U
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 3)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7867 8587 m
-7885 8587 L
-7885 8569 L
-7867 8569 L
-7867 8587 L
n
u
u
0 Ap
0 O
0 0 0 1 k
-7867 8579.4375 m
-7885 8579.4375 L
-7885 8576.5625 L
-7867 8576.5625 L
-7867 8579.4375 L
-7867 8579.4375 L
f
U
u
0.15 1 0.9 0.1 k
-7867 8578.7002 m
-7885 8578.7002 L
-7885 8577.3008 L
-7867 8577.3008 L
-7867 8578.7002 L
-7867 8578.7002 L
f
U
u
0 1 1 0 k
-7867 8578.3125 m
-7885 8578.3125 L
-7885 8577.6865 L
-7867 8577.6865 L
-7867 8578.3125 L
-7867 8578.3125 L
f
U
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 4)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7884.8833 8586.9551 m
-7793.0479 8586.9551 L
-7793.0479 8582.6758 L
-7884.8833 8582.6758 L
-7884.8833 8586.9551 L
n
0 O
0 0 0 1 k
-7884.6631 8584.2754 m
-7885 8584.3418 -7884.4814 8584.5313 -7884.8833 8584.3887 C
-7884.8379 8584.2705 -7884.7725 8584.1816 -7884.6631 8584.2754 C
f
-7794.1675 8584.4414 m
-7795.2524 8585.2041 -7796.6816 8584.4336 -7797.8701 8584.9199 C
-7798.0098 8584.9521 -7797.8345 8584.502 -7798.1484 8584.6025 C
-7799.3008 8585.1953 -7801.1162 8584.8418 -7802.5195 8584.3848 C
-7802.4346 8584.2666 L
-7802.7017 8584.1816 -7803.0283 8584.5723 -7803.3115 8584.5176 C
-7803.3135 8584.4395 -7803.2207 8584.4063 -7803.2861 8584.2988 C
-7803.3574 8584.5352 -7803.7983 8584.4082 -7803.9185 8584.584 C
-7804.0303 8584.4922 -7804.0195 8584.3047 -7804.1641 8584.2012 C
-7804.3262 8584.4697 L
-7804.7769 8585.1094 -7805.4209 8584.4258 -7806.0361 8584.7559 C
-7806.0063 8584.6934 -7805.9453 8584.6445 -7805.9941 8584.584 C
-7806.9814 8584.9727 -7808.2168 8584.9004 -7809.3208 8585.043 C
-7809.2769 8584.9482 -7809.2363 8584.7754 -7809.3008 8584.668 C
-7809.3555 8584.9512 -7809.6963 8585.0225 -7809.9922 8585.0781 C
-7810.1255 8584.7871 -7810.4995 8585.3438 -7810.8467 8585.1836 C
-7810.8169 8585.1191 L
-7811.0732 8585.4238 -7811.1973 8584.9434 -7811.4053 8585.3086 C
-7811.5684 8585.0801 L
-7811.6807 8585.4902 -7811.9395 8584.8672 -7812.1514 8585.0762 C
-7812.1445 8585.1602 L
-7812.3442 8585.2598 -7812.4482 8585.0537 -7812.6338 8585.123 C
-7812.6514 8585.0762 L
-7813.0854 8585.1836 -7813.3379 8584.9551 -7813.3271 8585.2754 C
-7813.4795 8585.0186 -7812.9063 8585.1582 -7813.1455 8584.7852 C
-7814.5732 8585.1152 -7816.0459 8585.0508 -7817.4834 8585.0566 C
-7817.6465 8584.9277 -7817.7505 8584.8887 -7817.7871 8584.7676 C
-7817.9307 8584.832 -7818.3281 8584.8262 -7818.4585 8584.9902 C
-7818.4102 8584.9834 -7818.5513 8584.8262 -7818.6274 8584.8105 C
-7818.8887 8584.6895 -7818.9131 8585.1621 -7819.2002 8585.0186 C
-7819.0859 8584.9336 -7819.0469 8584.8301 -7819.0854 8584.7109 C
-7819.3301 8584.9609 -7819.6577 8584.9209 -7819.9473 8585.002 C
-7819.9023 8584.9482 -7819.8325 8584.916 -7819.8433 8584.8154 C
-7820.1602 8585.0986 -7820.4209 8584.7559 -7820.6982 8584.9346 C
-7820.5947 8584.75 L
-7821.0415 8584.5254 -7820.7266 8585.1367 -7821.1128 8585.0039 C
-7821.02 8584.9453 -7821.0527 8584.873 -7821.0361 8584.7979 C
-7821.3965 8585.1338 -7821.9795 8585.0225 -7822.3389 8585.1367 C
-7822.3174 8585.1113 -7822.3232 8585.0605 Y
-7822.7148 8585.1025 -7823.1245 8584.998 -7823.5552 8585.1445 C
-7823.7119 8585.0625 -7823.5039 8584.6934 -7823.9185 8584.7617 C
-7823.9033 8585.1328 -7824.6221 8584.9141 -7824.3779 8585.334 C
-7824.7319 8585.2734 -7825.2925 8585.1338 -7825.5283 8585.2598 C
-7825.3691 8585.1191 -7825.7007 8584.8066 -7825.4063 8584.7754 C
-7825.6289 8584.5498 L
-7825.5957 8584.3984 -7825.3999 8584.6016 -7825.4707 8584.4102 C
-7825.6182 8584.4258 -7826.0479 8584.5723 -7826.1797 8584.5117 C
-7826.4531 8584.7393 -7826.7041 8585.1641 -7827.1465 8585.2109 C
-7826.9385 8585.0664 -7827.2646 8584.8018 -7827.1235 8584.7383 C
-7827.7407 8585.4492 L
-7827.8877 8585.4668 -7827.7725 8585.1563 -7827.9854 8585.2529 C
-7827.9746 8585.3516 -7828.0674 8585.4121 -7828.1318 8585.4922 C
-7828.1875 8585.4492 -7828.7441 8585.584 -7828.8081 8585.2188 C
-7828.8735 8585.0762 -7828.5684 8585.1426 -7828.7314 8585.0117 C
-7829.0029 8585.0156 -7829.0151 8585.1406 -7829.2871 8585.1465 C
-7829.2925 8585.0977 L
-7829.4717 8585.043 -7829.8213 8585.2529 -7829.6265 8585.4551 C
-7829.5015 8585.4668 -7829.6738 8585.2354 -7829.4888 8585.3418 C
-7829.6152 8585.5537 -7829.9312 8585.6133 -7830.2031 8585.6172 C
-7830.1104 8585.5586 -7830.1216 8585.4609 -7830.0845 8585.3574 C
-7830.4497 8585.6445 -7830.8369 8585.7354 -7831.2451 8585.8555 C
-7831.2515 8586.0293 -7831.0928 8585.5391 -7831.0327 8585.6309 C
-7831.5557 8585.3896 -7832.1128 8585.9727 -7832.5479 8585.6201 C
-7832.4766 8585.5898 -7832.5098 8585.8672 -7832.5146 8585.8184 C
-7832.7666 8585.7969 -7832.7549 8585.5449 -7832.9189 8585.6377 C
-7832.9355 8585.4902 -7833.1255 8585.6855 -7833.2944 8585.7305 C
-7833.3818 8585.8369 -7833.3384 8585.6582 -7833.1914 8585.6426 C
-7833.4268 8585.7676 -7834.3691 8585.9941 -7834.9131 8585.7793 C
-7834.9023 8585.877 -7835.2471 8586.1377 -7835.3721 8586.127 C
-7835.3232 8585.8984 L
-7835.4375 8585.7617 -7835.7422 8585.918 -7835.7632 8585.7227 C
-7836.0303 8586 -7834.7344 8585.4863 -7835.0957 8585.7002 C
-7835.1895 8585.5098 -7835.5991 8586.0645 -7835.5215 8585.7529 C
-7835.7725 8585.7617 -7836.0161 8586.0186 -7836.2559 8585.8047 C
-7836.1865 8585.8418 -7836.0522 8585.4873 -7836.2549 8585.5039 C
-7836.6123 8585.5449 -7836.3564 8585.6133 -7836.6465 8585.6895 C
-7836.8281 8585.7832 L
-7836.8398 8586.0059 -7837.1475 8585.7529 -7837.0146 8586.002 C
-7837.0586 8585.8184 -7837.5337 8586.1152 -7837.4971 8585.7461 C
-7837.4473 8585.4551 L
-7837.6016 8585.4766 -7837.7002 8585.7617 -7837.8213 8585.8896 C
-7837.8418 8585.8633 -7837.8823 8585.8047 -7837.8745 8585.7578 C
-7837.8994 8586.2031 -7838.2432 8585.7207 -7838.4268 8586.0645 C
-7838.7505 8585.9102 -7839.2495 8586.0508 -7839.4023 8585.7734 C
-7839.6514 8585.9082 -7839.8784 8586.0684 -7840.1621 8585.9727 C
-7840.1055 8585.9307 -7840.0283 8585.918 -7840.0122 8585.8223 C
-7840.1904 8585.6914 -7840.2344 8585.8086 -7840.3975 8585.8809 C
-7840.3608 8585.8145 -7840.7539 8585.6201 -7840.9521 8585.4629 C
-7841.1992 8585.5957 -7841.1143 8585.8359 -7841.1392 8585.9824 C
-7841.3652 8585.543 -7841.8379 8586.2656 -7842.1211 8585.8672 C
-7842.0352 8585.8066 -7841.7598 8585.6514 -7841.9658 8585.541 C
-7842.1919 8585.1025 -7842.4219 8585.8652 -7842.7861 8585.6543 C
-7842.6968 8586.0186 L
-7842.8594 8585.793 -7843.2334 8586.2305 -7843.1963 8585.8594 C
-7843.3184 8585.9902 -7843.6265 8585.7383 -7843.5859 8586.0938 C
-7844.1846 8585.793 -7845.0425 8586.2754 -7845.4102 8585.6377 C
-7845.4961 8585.6973 -7845.7104 8585.6367 -7845.6665 8585.8193 C
-7845.5239 8586.0176 -7845.4673 8585.6777 -7845.4141 8585.8125 C
-7845.4912 8585.8232 -7845.5078 8585.9209 -7845.5161 8585.9697 C
-7845.7021 8585.8887 -7845.8486 8585.8633 -7845.6729 8585.5674 C
-7846.0869 8585.3477 -7846.1001 8586.1719 -7846.6274 8586.0332 C
-7846.6035 8585.8857 -7846.6436 8585.8301 -7846.7979 8585.8535 C
-7847.0903 8586.1055 L
-7847.4312 8586.0469 -7847.2842 8585.7705 -7847.2925 8585.5215 C
-7847.4746 8585.5645 -7847.6973 8585.5527 -7847.7803 8585.7383 C
-7848.0015 8585.4258 L
-7847.8398 8585.6514 -7848.1514 8585.5762 -7848.2368 8585.6367 C
-7848.1514 8585.5762 L
-7848.1846 8585.4697 -7848.3955 8585.5352 -7848.5024 8585.5664 C
-7848.4766 8585.7207 -7848.2617 8585.7832 -7848.1445 8585.8281 C
-7848.2373 8585.9375 -7848.3823 8585.9121 -7848.5059 8586.041 C
-7848.4648 8585.7969 -7848.8027 8585.8672 -7848.9473 8585.8418 C
-7849.1133 8585.7891 -7849.1348 8586.0605 -7849.1831 8586.0527 C
-7849.1875 8585.9258 -7849.4541 8586.0313 -7849.3247 8585.8535 C
-7849.2681 8585.8125 -7849.1953 8585.9766 -7849.1016 8585.8652 C
-7849.2109 8585.7705 -7849.1982 8585.5498 -7849.4258 8585.7109 C
-7849.5967 8585.832 -7849.3818 8586.1934 -7849.7061 8586.0391 C
-7849.6211 8585.9785 -7849.6055 8585.8809 -7849.5391 8585.793 C
-7849.8433 8585.666 L
-7849.8564 8585.8887 L
-7849.8975 8585.832 -7849.8691 8585.8125 -7849.8877 8585.7832 C
-7849.9785 8586.0176 -7850.3521 8585.8555 -7850.4209 8586.1191 C
-7850.5742 8586.1426 -7850.7441 8585.9648 -7850.8906 8585.9395 C
-7850.8623 8585.9199 L
-7851.0415 8585.7891 -7851.2793 8585.875 -7851.4297 8586.0254 C
-7851.4219 8585.9766 L
-7851.5195 8585.959 -7851.7505 8585.9941 -7851.8735 8586.125 C
-7852.1201 8585.957 -7851.9561 8585.2842 -7852.2295 8585.5645 C
-7852.48 8585.5723 -7852.6221 8585.9727 -7852.5215 8586.1152 C
-7852.9717 8585.9648 -7853.4834 8586.3281 -7853.9009 8585.9824 C
-7853.9658 8586.0723 -7853.9248 8586.1289 -7854.0586 8586.1816 C
-7854.7197 8586.0938 -7855.4551 8586.4453 -7855.9814 8586.0078 C
-7855.79 8585.9141 -7855.9688 8585.7852 -7855.9727 8585.6582 C
-7856.1309 8585.8574 -7856.1631 8585.4512 -7856.2197 8585.793 C
-7856.2041 8585.9941 -7856.2197 8586.0918 -7856.0337 8586.1729 C
-7856.4282 8586.2813 -7857.0283 8586.2813 -7857.2471 8586.0938 C
-7857.1377 8586.1865 -7857.2227 8586.248 -7857.3086 8586.3086 C
-7857.2803 8585.9873 -7857.5713 8585.9395 -7857.7915 8586.0527 C
-7857.8223 8586.248 L
-7857.9658 8586.0469 L
-7858.0503 8586.1094 -7858.0591 8586.457 -7858.2773 8586.2695 C
-7858.2891 8586.1934 -7858.3018 8586.1162 -7858.3418 8586.0605 C
-7858.5693 8586.2207 -7858.8906 8586.4922 -7859.1377 8586.3262 C
-7859.3398 8586.041 L
-7859.4453 8586.0723 -7859.6235 8586.2441 -7859.4375 8586.3262 C
-7859.8594 8586.1543 -7860.1309 8586.1328 -7860.2646 8585.8857 C
-7860.9912 8586.4873 -7862.0459 8586.5117 -7862.8906 8586.4688 C
-7862.8652 8586.3223 L
-7863.0923 8586.1855 -7862.9834 8586.5781 -7863.1416 8586.4766 C
-7863.0684 8586.3369 -7863.3145 8586.1729 -7863.1362 8586.002 C
-7863.4609 8585.8477 -7863.5547 8586.2559 -7863.7656 8586.3223 C
-7863.7979 8586.5146 -7863.5957 8586.1992 -7863.6367 8586.4434 C
-7863.6729 8586.5117 -7864.0859 8586.293 -7864.1362 8586.584 C
-7864.2178 8586.4697 -7864.1543 8586.2559 -7864.1104 8586.1377 C
-7864.3086 8586.2793 L
-7864.5513 8585.9395 -7863.7559 8585.6719 -7864.0107 8585.2529 C
-7864.1934 8585.2988 L
-7864.3682 8584.9941 -7863.71 8584.9551 -7864.1689 8584.8506 C
-7864.3682 8584.9941 -7864.5381 8585.416 -7864.3608 8585.5449 C
-7864.7754 8585.625 -7864.5527 8586.2383 -7864.9985 8586.2139 C
-7865.1201 8586.043 -7864.6416 8586.1729 -7864.7275 8585.9336 C
-7864.9375 8585.6992 -7865.1484 8586.0645 -7865.3354 8585.9824 C
-7865.1279 8586.0918 -7865.3032 8586.3857 -7865.4375 8586.4395 C
-7865.6641 8586.3018 -7865.29 8586.1641 -7865.6113 8586.1338 C
-7865.6641 8586.3018 -7865.9595 8586.4277 -7865.7041 8586.5449 C
-7865.8203 8586.9258 -7866.0381 8586.4395 -7866.2129 8586.7344 C
-7866.3174 8586.4668 -7865.8823 8586.1152 -7866.2354 8585.9814 C
-7866.1792 8586.2393 -7866.6704 8586.332 -7866.4839 8586.7148 C
-7866.6221 8586.6406 -7866.6367 8586.4375 -7866.5361 8586.2793 C
-7866.7334 8586.1201 -7867.0151 8586.75 -7867.0801 8586.2383 C
-7867.1479 8586.502 L
-7867.21 8586.416 -7867.2983 8586.3516 -7867.3994 8586.209 C
-7867.5732 8586.2041 -7867.96 8586.5664 -7867.9443 8586.168 C
-7868 8586.209 -7868.3975 8586.1914 -7868.2441 8586.4668 C
-7867.9971 8586.6348 -7867.96 8586.2656 -7867.8223 8586.6377 C
-7867.9971 8586.334 -7868.1787 8586.6777 -7868.3213 8586.7793 C
-7868.3447 8586.625 L
-7868.4297 8586.6855 -7868.6255 8586.6514 -7868.6787 8586.8184 C
-7868.6133 8586.7305 -7868.6475 8586.625 -7868.7148 8586.5879 C
-7868.8042 8586.8223 L
-7869.1494 8586.9395 -7868.8857 8586.4102 -7869.2217 8586.4785 C
-7868.9663 8586.2969 L
-7869.0225 8586.3359 -7869.1367 8586.1162 -7869.2979 8586.1895 C
-7869.3604 8586.4033 -7869.4775 8586.6602 -7869.5313 8586.8262 C
-7869.7207 8586.9199 -7869.6162 8586.585 -7869.8027 8586.8047 C
-7869.5586 8586.5469 L
-7869.5215 8586.4766 -7869.7231 8586.1934 -7869.9761 8586.1992 C
-7870.1377 8586.2734 -7870.3887 8586.582 -7870.1338 8586.6992 C
-7870.2607 8586.7031 -7870.4385 8586.5723 -7870.3379 8586.416 C
-7870.6255 8586.4902 -7870.2998 8586.6465 -7870.5479 8586.7793 C
-7870.6494 8586.6367 -7870.9658 8586.4336 -7871.1563 8586.2266 C
-7870.8975 8585.8682 L
-7871.0693 8585.8652 L
-7870.8467 8585.5781 -7871.1826 8585.6465 -7871.0566 8585.3438 C
-7871.1743 8585.2969 -7871.3169 8585.3994 -7871.4307 8585.4785 C
-7871.0864 8585.9629 -7871.8159 8586.1406 -7871.7158 8586.582 C
-7872.1875 8586.7031 -7872.0107 8585.5078 -7872.5024 8586.1992 C
-7872.4219 8586.3145 -7872.6533 8586.6504 -7872.3564 8586.5225 C
-7872.6494 8586.4746 -7872.5557 8586.9658 -7872.9014 8586.7832 C
-7872.6455 8586.6016 -7873.1763 8586.3359 -7872.8066 8586.0723 C
-7872.8311 8586.2188 -7872.6001 8586.1836 -7872.5435 8586.1426 C
-7872.6641 8585.9727 -7872.5186 8585.6973 -7872.8184 8585.6973 C
-7873.0015 8585.7393 -7873.2524 8585.748 -7873.2158 8585.9785 C
-7873.2085 8586.2314 -7872.9365 8585.9512 -7873.0537 8586.207 C
-7873.4185 8586.2949 -7873.4795 8585.9102 -7873.6304 8586.3594 C
-7873.3999 8586.3232 -7873.3423 8586.584 -7873.3467 8586.7578 C
-7873.6143 8586.8633 L
-7873.5625 8586.6953 L
-7873.9922 8586.5742 -7873.6895 8587 -7874.1055 8586.9551 C
-7874.3008 8586.623 L
-7874.2017 8586.3369 -7873.6953 8586.75 -7873.7695 8586.2842 C
-7874.04 8586.2656 -7874.1299 8586.502 -7874.3848 8586.3818 C
-7874.3281 8586.3418 -7874.2505 8586.3301 -7874.1943 8586.2891 C
-7874.2915 8586.2734 -7874.3877 8585.6563 -7874.7734 8586.0176 C
-7874.9727 8586.1582 -7874.8262 8586.1836 -7874.8311 8586.3574 C
-7875.2656 8586.4102 -7875.3955 8586.5879 -7875.6753 8586.6152 C
-7875.6177 8586.2754 -7876.1699 8586.582 -7875.8608 8586.2344 C
-7875.7188 8586.4336 -7875.0903 8586.4141 -7874.9365 8586.0898 C
-7875.0947 8585.6865 -7874.5952 8586.1465 -7874.5024 8585.7383 C
-7874.8506 8585.7285 -7874.8335 8585.332 -7874.8896 8585.0723 C
-7874.9863 8585.0537 -7875.0801 8585.1641 -7875.1377 8585.2041 C
-7875.1787 8585.4492 -7875.0522 8585.4453 -7875.0449 8585.6973 C
-7875.4336 8585.6309 -7875.8081 8585.7676 -7876.0225 8586.0059 C
-7876.1523 8585.8848 -7876.1113 8585.6406 -7875.9575 8585.6172 C
-7876.4199 8585.6895 -7876.9141 8585.6563 -7877.3535 8585.582 C
-7877.0693 8585.9814 -7877.8433 8585.6758 -7877.6494 8586.0078 C
-7877.4141 8586.0977 -7877.2119 8586.3818 -7877.3418 8586.5605 C
-7877.4888 8586.5352 -7877.3369 8586.3857 -7877.3984 8586.3008 C
-7877.5859 8586.5186 -7877.6895 8585.9512 -7877.8735 8586.2949 C
-7877.4512 8586.166 -7877.7915 8585.8086 -7877.7139 8585.4961 C
-7878.0186 8585.6719 -7877.7007 8585.2734 -7878.0024 8585.2734 C
-7878.3057 8585.4473 -7878.6787 8585.584 -7879.0161 8585.6514 C
-7879.4399 8585.3555 -7880.0898 8585.6465 -7880.4683 8585.6582 C
-7880.6665 8585.5 -7880.5322 8585.1465 -7880.7471 8585.085 C
-7880.9995 8585.0918 -7880.5601 8585.4668 -7880.9336 8585.3047 C
-7880.8975 8585.2344 L
-7881.0107 8585.3164 -7881.5825 8584.9941 -7881.6929 8585.502 C
-7881.5776 8585.1191 L
-7881.6475 8585.084 -7881.7119 8585.1719 -7881.7695 8585.2129 C
-7881.7725 8585.0879 -7881.8535 8584.9746 -7881.7402 8584.8926 C
-7881.9707 8584.6289 -7882.2241 8584.9346 -7882.4746 8584.9453 C
-7882.3135 8585.1719 L
-7882.7422 8585.3496 -7883.0293 8585.125 -7883.4443 8585.2041 C
-7883.4316 8584.9824 L
-7883.6787 8585.1152 L
-7883.6182 8584.9004 -7883.8447 8584.7617 -7883.9751 8584.9414 C
-7883.3335 8584.3984 L
-7883.1553 8584.5293 -7883.5283 8584.666 -7883.4165 8584.8848 C
-7883.3213 8585.0762 -7882.9375 8585.0156 -7882.8755 8584.8018 C
-7883.0225 8584.7773 -7883.0293 8584.8262 -7883.1436 8584.9063 C
-7883.1919 8584.5977 -7882.9688 8584.6094 -7882.8584 8584.4033 C
-7882.9355 8584.416 -7883.0449 8584.3223 -7883.0615 8584.4199 C
-7882.9102 8584.2695 -7882.7578 8584.2461 -7882.5059 8584.2383 C
-7882.6763 8584.3594 -7882.4131 8584.4297 -7882.4775 8584.5176 C
-7882.4575 8584.2461 -7882.2168 8584.1621 -7881.9053 8584.2383 C
-7881.6831 8584.5527 -7881.3208 8584.0361 -7880.96 8584.123 C
-7881.1064 8584.3984 -7881.2935 8584.6191 -7881.5127 8584.7305 C
-7881.2861 8584.8682 -7881.2607 8584.7227 -7881.0337 8584.8613 C
-7880.9238 8584.6563 -7880.8457 8584.3418 -7880.5503 8584.2168 C
-7880.5342 8584.4199 L
-7880.2666 8584.3164 -7880.2666 8584.0156 -7879.9258 8584.0723 C
-7879.3418 8584.1719 -7878.7407 8584.1719 -7878.2949 8584.1973 C
-7878.2783 8584.3994 L
-7878.0303 8583.9658 -7877.4521 8584.2393 -7877.1182 8584.0469 C
-7876.5503 8584.2422 -7875.8848 8583.8535 -7875.5938 8584.2031 C
-7874.5913 8584.0469 -7873.7148 8583.8945 -7872.6768 8583.9688 C
-7872.8516 8584.2637 L
-7872.6655 8584.0469 -7872.7305 8584.4336 -7872.5479 8584.3896 C
-7872.7578 8584.1543 -7872.2949 8584.084 -7872.1665 8583.9033 C
-7871.7041 8584.1328 -7871.1104 8583.8828 -7870.7007 8583.6758 C
-7870.6846 8583.8789 L
-7870.2705 8583.498 -7869.7759 8583.832 -7869.2598 8583.8945 C
-7869.2007 8583.9785 -7869.1074 8584.1689 -7868.9536 8584.1465 C
-7868.6738 8583.8184 -7868.5273 8583.8418 -7868.1167 8583.6367 C
-7867.8169 8583.6367 -7867.3301 8583.7178 -7867.0254 8583.8457 C
-7865.8975 8583.3848 -7864.7456 8583.6797 -7863.5732 8583.4023 C
-7863.4888 8583.6406 L
-7862.3521 8583.1309 -7860.9541 8583.5938 -7859.9839 8583.332 C
-7860.0776 8583.7393 L
-7859.7734 8583.8652 -7859.3843 8583.6328 -7859.4619 8583.3438 C
-7859.1567 8583.4688 -7858.7007 8583.1465 -7858.5068 8583.4814 C
-7858.1953 8583.5566 -7858.1255 8583.293 -7857.8662 8583.2383 C
-7857.2422 8583.3926 -7857.0107 8583.3574 -7856.4224 8583.2813 C
-7856.5684 8583.2559 L
-7856.6328 8583.3457 -7856.6387 8583.5186 -7856.4922 8583.5449 C
-7856.2725 8583.4316 -7855.6846 8583.6543 -7855.9033 8583.168 C
-7855.2754 8583.4492 -7854.4385 8582.9395 -7853.8271 8583.3184 C
-7853.8789 8583.1855 -7853.7246 8583.1602 -7853.6602 8583.0703 C
-7853.1089 8583.0645 -7852.5293 8583.3359 -7852.0898 8583.1094 C
-7852.0024 8583.1758 -7852.2295 8583.3359 -7852.0049 8583.3496 C
-7851.8721 8583.2988 -7852.0024 8583.1758 -7851.8384 8583.1016 C
-7850.9453 8582.8535 -7850.0303 8583.3574 -7849.2188 8583.293 C
-7847.7754 8583.0361 -7846.2695 8583.166 -7844.8867 8583.123 C
-7844.9023 8583.2207 L
-7844.4395 8582.8477 -7843.8159 8583.6025 -7843.4463 8583.041 C
-7843.3369 8583.1338 -7843.0283 8583.085 -7843.1094 8583.2734 C
-7842.7407 8583.0098 -7842.0771 8583.5215 -7841.5439 8583.1865 C
-7841.5928 8583.1777 -7841.6211 8583.1973 -7841.6777 8583.2393 C
-7841.1392 8583.4551 -7840.6641 8583.1602 -7840.0957 8583.3555 C
-7840.1533 8583.3975 -7840.2583 8583.4277 -7840.2754 8583.5254 C
-7840.0557 8583.7129 -7839.7549 8583.1133 -7839.6348 8583.584 C
-7839.5088 8583.5801 -7839.5449 8583.3477 -7839.6221 8583.3613 C
-7838.3779 8583.5449 -7837.0498 8583.2441 -7835.7549 8583.1367 C
-7834.8271 8583.418 -7835.6982 8583.9297 -7834.9663 8583.5781 C
-7834.9063 8583.6689 -7834.9229 8583.3984 -7834.9131 8583.4961 C
-7834.6299 8583.3643 -7834.4717 8584.0215 -7834.2754 8583.7754 C
-7834.3564 8583.4863 -7834.1445 8583.6133 -7834.1387 8583.4375 C
-7833.5713 8583.625 -7833.4575 8583.8857 -7833.0098 8583.666 C
-7833.0435 8583.8184 L
-7832.5186 8583.3887 -7831.9102 8583.6191 -7831.4673 8583.123 C
-7828.5728 8583.0332 -7825.7983 8582.7578 -7822.9761 8582.7002 C
-7820.1865 8582.7949 -7817.4551 8582.5723 -7814.6221 8582.8359 C
-7813.9585 8583.2354 -7813.9087 8583.2246 -7813.1797 8583.0625 C
-7813.2095 8583.127 -7813.2549 8583.1426 -7813.2061 8583.2031 C
-7813.1699 8582.875 -7812.6929 8583.1719 -7812.6235 8582.8594 C
-7811.5762 8582.9199 -7810.6113 8582.8301 -7809.5337 8582.8281 C
-7809.7041 8582.8633 -7809.7896 8583.1309 -7809.5869 8583.1094 C
-7809.3755 8582.9004 L
-7809.3408 8582.9922 L
-7809.2021 8582.9434 -7809.0513 8582.7813 -7809.1943 8582.6758 C
-7806.4873 8582.3926 -7803.8242 8583.0508 -7801.1729 8582.9697 C
-7800.5435 8583.1064 -7799.6475 8582.9814 -7798.9629 8582.9141 C
-7796.9355 8583.3516 -7795.1079 8583.7041 -7793.0479 8583.3984 C
-7793.3169 8584.2461 -7794.1675 8584.4414 V
f
-7884.2578 8584.2422 m
-7884.1855 8584.4063 -7883.9497 8584.4961 -7884.1377 8584.7148 C
-7884.1611 8584.5605 -7884.2822 8584.3887 -7884.2578 8584.2422 C
f
-7877.9619 8585.9297 m
-7877.9536 8585.8809 -7877.8721 8585.9961 -7877.8521 8586.0225 C
-7877.9297 8586.0352 -7878.0024 8586.1729 -7878.0645 8586.0879 C
-7877.9854 8586.0762 -7877.9976 8585.998 -7877.9619 8585.9297 C
f
-7876.3521 8586.0273 m
-7876.3765 8586.1729 -7876.7207 8586.2891 -7876.9238 8586.3066 C
-7876.3521 8586.0273 L
f
-7874.8521 8586.6289 m
-7874.7227 8586.752 -7874.7583 8586.8193 -7874.9326 8586.8154 C
-7874.9453 8586.7383 -7874.8877 8586.6992 -7874.8521 8586.6289 C
f
-7874.7456 8586.2969 m
-7874.6211 8586.293 -7874.5591 8586.3789 -7874.4985 8586.4629 C
-7874.5029 8586.3369 -7874.7871 8586.541 -7874.7456 8586.2969 C
f
-7871.4893 8586.7207 m
-7871.4111 8586.709 -7871.2417 8586.5879 -7871.1689 8586.75 C
-7871.2505 8586.6367 -7871.5498 8586.9346 -7871.4893 8586.7207 C
f
-7869.9761 8586.5 m
-7869.9272 8586.5098 -7869.9072 8586.5361 -7869.8506 8586.4961 C
-7869.7607 8586.5625 -7869.8555 8586.6689 -7869.9312 8586.6826 C
-7869.9761 8586.5 L
f
-7842.4287 8585.9141 m
-7842.5923 8585.9863 L
-7842.5684 8585.8418 L
-7842.4287 8585.9141 L
f
-7830.3574 8585.9063 m
-7830.1943 8585.8145 -7830.2441 8586.043 -7830.2168 8586.0645 C
-7830.3643 8586.0801 -7830.1621 8585.8848 -7830.3574 8585.9063 C
f
-7823.8486 8585.1777 m
-7823.8984 8585.1816 L
-7823.8818 8584.8828 L
-7823.8486 8585.1777 L
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 5)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7867 8587 m
-7885 8587 L
-7885 8569 L
-7867 8569 L
-7867 8587 L
n
u
u
0 Ap
0 O
0 0 0 1 k
-7874.5625 8587 m
-7877.4375 8587 L
-7877.4375 8578.5 L
-7877.4375 8577.4316 -7876.5684 8576.5625 -7875.5 8576.5625 C
-7866.9165 8576.5625 L
-7866.9165 8579.4375 L
-7874.5625 8579.4375 L
-7874.5625 8587 L
-7874.5625 8587 L
f
U
u
0.15 1 0.9 0.1 k
-7875.2998 8587 m
-7876.7002 8587 L
-7876.7002 8578.5 L
-7876.7002 8577.8389 -7876.1621 8577.3008 -7875.5 8577.3008 C
-7866.9165 8577.3008 L
-7866.9165 8578.7002 L
-7875.2998 8578.7002 L
-7875.2998 8587 L
-7875.2998 8587 L
f
U
u
0 1 1 0 k
-7875.6875 8587 m
-7876.3125 8587 L
-7876.3125 8578.5 L
-7876.3125 8578.0527 -7875.9482 8577.6865 -7875.5 8577.6865 C
-7866.9165 8577.6865 L
-7866.9165 8578.3125 L
-7875.5 8578.3125 L
-7875.6035 8578.3125 -7875.6875 8578.3975 -7875.6875 8578.5 C
-7875.6875 8587 L
-7875.6875 8587 L
f
U
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 55)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7858.9727 8587 m
-7858.9727 8560.9717 L
-7885 8560.9717 L
-7885 8587 L
-7858.9727 8587 L
n
0 Ap
0 R
0.7084 0.636438 0.515526 0.381872 K
1.125 w-7885 8569.6465 m
-7858.9727 8569.6465 l
S
0.64 0.650477 0.701045 0.510735 K
-7885 8578.3242 m
-7858.9727 8578.3242 l
S
0.597742 0.537865 0.64184 0.350469 K
0.375 w-7885 8573.9854 m
-7858.9727 8573.9854 l
S
0 O
0.597742 0.537865 0.64184 0.350469 k
1 w-7863.5742 8574.0117 m
-7863.3442 8573.7402 -7863.6914 8573.4541 -7864 8573.2432 c
-7864.1118 8573.166 -7864.5215 8573.3789 -7864.7466 8573.2129 c
-7865.0439 8572.9951 -7865.1826 8572.9082 -7865.4824 8572.9141 c
-7865.6455 8572.918 -7866.0435 8573.0479 -7866.1895 8573.0781 c
-7866.5679 8573.1543 -7866.8022 8573.3516 -7867.3672 8573.2549 c
-7867.7344 8573.1914 -7867.8286 8573.1006 -7867.9233 8573.1484 c
-7868.1118 8573.29 -7868.2202 8573.5137 -7868.4258 8573.5625 c
-7868.9575 8573.6895 -7869.3535 8573.7334 -7869.8818 8573.7227 c
-7870.3047 8573.7129 -7871.4185 8573.7813 -7872.2866 8573.6816 c
-7872.6226 8573.6416 -7872.6025 8573.2168 -7872.7695 8573.2129 c
-7872.8618 8573.2109 -7872.7646 8573.5264 -7872.8306 8573.5469 c
-7873.1694 8573.6533 -7873.4702 8572.5029 -7873.6943 8572.5723 c
-7873.8047 8572.6074 -7873.5562 8573.1533 -7873.6729 8573.1816 c
-7873.8975 8573.2373 -7874.2178 8572.2188 -7874.4321 8572.2813 c
-7874.5635 8572.3184 -7874.2886 8572.7383 -7874.4375 8572.8066 c
-7874.6655 8572.9111 -7874.9087 8572.0352 -7875.1064 8572.1338 C
-7875.1543 8572.1816 -7874.7295 8572.9375 -7875.1685 8572.8789 c
-7875.2871 8572.8613 -7875.5054 8572.3135 -7875.5801 8572.3398 c
-7875.6919 8572.3799 -7875.3535 8572.8018 -7875.4897 8572.9277 C
-7875.7681 8573.1543 -7876.3711 8572.1631 -7876.4575 8572.2344 c
-7876.5791 8572.3359 -7876.1279 8573.0977 -7876.2695 8573.166 C
-7876.4497 8573.4297 -7877.0142 8572.5527 -7877.0889 8572.6016 c
-7877.1777 8572.6602 -7876.9058 8573.0381 -7876.8799 8573.2334 c
-7876.8545 8573.4277 -7876.9966 8573.5615 -7877.2144 8573.5098 c
-7877.4736 8573.4473 -7877.8696 8572.6416 -7877.9727 8572.7354 C
-7878.0791 8572.791 -7877.8682 8573.0781 -7877.7954 8573.3125 c
-7877.7583 8573.4277 -7877.8882 8573.6016 -7878.0298 8573.6016 c
-7878.3135 8573.6494 -7878.6255 8572.998 -7878.7065 8573.1025 c
-7878.7524 8573.1621 -7878.5898 8573.4902 -7878.7295 8573.5879 c
-7878.8994 8573.7061 -7879.3115 8573.2383 -7879.4521 8573.293 C
-7879.5361 8573.3418 -7879.4126 8573.5967 -7879.4927 8573.6533 c
-7879.7295 8573.8193 -7880.0039 8573.4209 -7880.0513 8573.4688 C
-7880.1167 8573.4912 -7880.1201 8573.5361 -7880.2793 8573.6406 c
-7880.4736 8573.7676 -7880.5254 8573.8486 -7880.5425 8573.9648 c
-7880.5654 8574.083 -7880.3135 8574.375 -7880.1655 8574.3496 c
-7879.8223 8574.29 -7879.8662 8574.8496 -7879.6328 8574.7158 c
-7879.5679 8574.6797 -7879.6592 8574.2588 -7879.4199 8574.2656 c
-7879.0488 8574.2783 -7878.9858 8574.8213 -7878.7817 8574.8105 c
-7878.6406 8574.8037 -7878.8521 8574.1836 -7878.6328 8574.2607 c
-7878.4751 8574.3164 -7878.0063 8575.3018 -7877.9795 8575.21 c
-7877.8975 8574.9424 -7878.0703 8574.3984 -7877.9409 8574.4082 c
-7877.7568 8574.4229 -7877.5078 8575.3174 -7877.2544 8575.4375 c
-7877.1826 8575.4727 -7877.3774 8574.6006 -7877.1958 8574.5967 C
-7877.0898 8574.6465 -7876.7578 8575.4492 -7876.6274 8575.498 C
-7876.5591 8575.4824 -7876.5879 8575.125 -7876.5176 8575.1045 c
-7876.4688 8575.0898 -7876.2817 8575.5654 -7876.21 8575.5234 c
-7876.1055 8575.4629 -7876.2471 8574.9922 -7876.0889 8574.9229 c
-7875.9175 8574.8486 -7875.4878 8575.8926 -7875.3486 8575.7979 c
-7875.2769 8575.75 -7875.3574 8575.21 -7875.21 8575.2461 c
-7875.0718 8575.2783 -7874.9414 8575.6143 -7874.8081 8575.6426 c
-7874.7295 8575.6582 -7874.7935 8575.1914 -7874.7495 8575.1738 c
-7874.5889 8575.1152 -7874.2329 8575.6719 -7874.0688 8575.5234 c
-7873.8584 8575.335 -7873.9395 8574.9697 -7873.8345 8574.9824 c
-7873.6274 8575.0059 -7873.4912 8575.2432 -7873.4146 8575.1836 c
-7873.2642 8575.0684 -7873.3281 8574.7793 -7873.0527 8574.6924 c
-7872.8975 8574.6426 -7872.7935 8574.9346 -7872.7495 8574.9307 c
-7872.6738 8574.9277 -7872.6782 8574.8301 -7872.6665 8574.7246 c
-7872.6328 8574.4609 -7872.6064 8574.3994 -7872.4878 8574.377 c
-7872.0854 8574.3535 -7871.5625 8574.2842 -7871.1807 8574.2754 c
-7870.6274 8574.2607 -7869.2607 8574.2373 -7869.1182 8574.2373 c
-7869 8574.2129 -7868.7432 8574.3945 -7868.6689 8574.4609 c
-7868.4678 8574.6455 -7868.2998 8574.8594 -7867.9858 8575.1201 c
-7867.8906 8575.2012 -7867.8081 8575.1807 -7867.7378 8575.1563 c
-7867.5249 8575.085 -7867.4585 8575.0332 -7867.2202 8575.002 c
-7866.9175 8574.959 -7866.4272 8575.0488 -7866.1245 8575.1426 c
-7865.6035 8575.3018 -7865.5264 8575.3242 -7865.0977 8575.2754 c
-7864.6992 8575.2295 -7864.0586 8575.1582 -7864.0479 8574.8105 c
-7864.0415 8574.5957 -7863.9414 8574.4434 -7863.5742 8574.0117 c
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 56)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7858.9722 8587 m
-7858.9722 8560.9727 L
-7885 8560.9727 L
-7885 8587 L
-7858.9722 8587 L
n
0 Ap
0 R
0.597742 0.537865 0.64184 0.350469 K
0.375 w-7867.6455 8573.9893 m
-7858.9736 8573.9893 l
S
-7871.9839 8587 m
-7871.9839 8578.3242 l
S
0.7084 0.636438 0.515526 0.381872 K
1.125 w-7867.7202 8569.6504 m
-7858.9727 8569.6504 l
S
-7876.3232 8586.999 m
-7876.3232 8577.6455 l
S
0.64 0.650477 0.701045 0.510735 K
-7867.6504 8586.999 m
-7867.6504 8584.5869 l
-7864.9937 8584.3633 -7863.3096 8582.6602 v
-7861.6064 8580.9336 -7861.3774 8578.3281 y
-7858.9727 8578.3281 l
S
*u
1 D
0 O
0.7084 0.636438 0.515526 0.381872 k
1 w-7875.8418 8571.1855 m
-7875.8418 8571.25 -7875.8218 8571.291 -7875.7783 8571.291 c
-7875.6943 8571.291 -7875.4634 8570.9541 -7875.3994 8570.9541 c
-7875.3154 8570.9541 -7875.2729 8570.9961 -7875.2729 8571.1016 c
-7875.2729 8571.1855 -7875.5264 8572.0928 y
-7875.5264 8572.1338 -7875.5264 8572.1338 -7875.5049 8572.1338 c
-7875.4414 8572.1338 -7875.0615 8571.5869 -7874.9351 8571.5869 c
-7874.9146 8571.5869 -7874.8936 8571.6074 -7874.8936 8571.6289 c
-7875.1675 8572.5352 -7875.1675 8572.7256 v
-7875.1675 8572.7891 -7875.1675 8572.8105 -7875.1465 8572.8105 c
-7875.1055 8572.8105 -7874.6826 8572.2402 -7874.5562 8572.2402 c
-7874.5352 8572.2402 -7874.5137 8572.2607 -7874.5137 8572.2822 c
-7874.5137 8572.3457 -7874.7666 8573.084 -7874.7666 8573.252 c
-7874.7666 8573.2949 -7874.7666 8573.2949 -7874.7446 8573.2949 c
-7874.6826 8573.2949 -7874.4722 8573.084 -7874.4297 8573.084 c
-7874.4082 8573.084 -7874.3882 8573.1055 -7874.3882 8573.126 c
-7874.3882 8573.1465 -7874.4927 8573.5059 -7874.4927 8573.5898 c
-7874.4927 8573.6113 -7874.4927 8573.6113 -7874.4722 8573.6113 c
-7874.4297 8573.6113 -7874.0918 8573.252 -7874.0078 8573.252 c
-7873.9658 8573.252 -7873.9233 8573.2949 -7873.9233 8573.3789 c
-7873.9233 8573.5273 -7874.1138 8574.2441 -7874.1138 8574.2861 c
-7874.1138 8574.3701 -7874.0918 8574.4121 -7874.0498 8574.4121 c
-7873.9658 8574.4121 -7873.7119 8574.0957 -7873.6494 8574.0957 c
-7873.5854 8574.0957 -7873.5439 8574.1162 -7873.5439 8574.1807 c
-7873.5854 8574.6016 L
-7873.5854 8574.666 -7873.5854 8574.6855 -7873.5654 8574.6855 c
-7873.5225 8574.6855 -7873.2915 8574.3916 -7873.2065 8574.3916 c
-7873.1006 8574.3916 -7873.1006 8574.877 -7873.1006 8574.9395 c
-7873.1006 8575.0449 -7873.0166 8575.1289 -7872.8896 8575.1289 c
-7872.8057 8575.1289 -7872.4678 8574.8975 -7872.4473 8574.8975 c
-7872.3623 8574.8975 -7872.3198 8575.3398 -7872.2568 8575.3398 c
-7872.1943 8575.3398 -7871.9199 8575.2129 -7871.8564 8575.2129 c
-7871.6455 8575.2129 -7871.6035 8575.2988 -7871.6035 8575.4668 c
-7871.6255 8575.6143 L
-7871.6255 8575.6563 -7871.6035 8575.6563 -7871.5835 8575.6563 c
-7871.4985 8575.6563 -7871.2241 8575.3818 -7871.1392 8575.3818 c
-7870.9287 8575.3818 -7868.8198 8577.4492 -7868.5454 8577.7227 c
-7868.3984 8577.8906 -7868.3984 8578.1865 -7868.3984 8578.3135 c
-7868.3984 8579.1777 -7868.3984 8579.2617 -7868.2295 8579.3457 c
-7867.5977 8579.5996 -7867.5127 8579.7471 -7866.7334 8581.0332 c
-7866.6479 8581.1807 -7865.7407 8581.793 -7865.5942 8581.793 c
-7865.4878 8581.793 -7865.1094 8581.5391 -7865.0239 8581.5391 c
-7864.9194 8581.5391 -7864.8135 8581.6025 -7864.8135 8581.7705 c
-7864.8135 8582.2139 -7865.3408 8582.7207 -7865.9312 8582.7207 c
-7866.7534 8582.7207 -7867.0913 8582.0234 -7867.1338 8581.625 c
-7867.1543 8581.4766 -7867.2393 8581.3916 -7867.3447 8581.3916 c
-7867.3862 8581.3916 -7867.4287 8581.4121 -7867.4702 8581.4766 c
-7867.9561 8582.2773 -7868.9473 8582.7207 -7869.7065 8582.7207 c
-7870.7393 8582.7207 -7871.8774 8582.0879 -7872.3418 8581.8145 c
-7872.7842 8581.5615 -7873.4814 8581.3916 -7873.8809 8581.3916 c
-7874.3242 8581.3916 -7874.3662 8581.5391 -7874.3662 8581.793 c
-7874.3662 8581.9404 -7873.9023 8582.3818 -7873.9023 8582.5098 c
-7873.9023 8582.6357 -7874.0498 8582.7207 -7874.4082 8582.7207 c
-7874.8936 8582.7207 -7875.5679 8582.0029 -7875.5679 8581.2236 c
-7875.5679 8580.6113 -7874.7666 8580.085 -7874.3022 8580.085 c
-7873.3755 8580.085 -7873.0942 8580.4434 -7872.5264 8580.9072 c
-7872.4414 8580.9697 -7872.3774 8580.9922 -7872.3359 8580.9922 c
-7872.1895 8580.9922 -7872.1895 8579.8945 -7872.1895 8579.7695 c
-7872.1895 8579.6201 -7872.2729 8579.5576 -7872.3774 8579.5576 c
-7874.7822 8579.5576 -7879.6592 8578.334 -7881.3672 8572.1777 c
-7881.4297 8571.9658 -7881.5361 8571.8613 -7881.6406 8571.8613 c
-7881.7881 8571.8613 -7882.7793 8572.7041 -7882.7793 8574.2861 c
-7882.7793 8576.1201 -7881.5767 8577.0898 -7880.9873 8577.0898 c
-7880.8398 8577.0898 -7880.6494 8577.0693 -7880.6494 8576.9209 c
-7880.6494 8576.8584 -7880.6929 8576.7949 -7880.7759 8576.6895 c
-7881.1143 8576.3535 -7881.3672 8575.7197 -7881.3672 8575.4033 c
-7881.3672 8575.1914 -7881.2607 8575.0234 -7881.1143 8575.0234 c
-7880.9033 8575.0234 -7880.5654 8575.9727 -7880.46 8576.1201 c
-7880.3335 8576.3311 -7879.9546 8576.7109 -7879.2378 8577.2383 c
-7878.4995 8577.7637 -7877.0654 8579.0723 -7877.0654 8580.3369 c
-7877.0654 8581.709 -7878.1191 8582.6152 -7878.9209 8582.6152 c
-7879.7007 8582.6152 -7880.6714 8582.0879 -7881.0713 8581.6025 c
-7881.7041 8580.8652 -7882.3154 8580.2949 -7882.8218 8580.2949 c
-7883.1592 8580.2949 -7883.3066 8580.5059 -7883.3066 8580.7168 c
-7883.3066 8581.0537 -7883.0537 8581.2861 -7882.5479 8581.3281 c
-7881.9575 8581.3711 -7881.8936 8581.793 -7881.8936 8582.1289 c
-7881.8936 8582.4033 -7882.4209 8582.7207 -7882.8433 8582.7207 c
-7883.4751 8582.7207 -7884.2974 8582.0234 -7884.2974 8580.1904 c
-7884.2974 8578.6924 -7883.0537 8578.2295 -7882.5679 8578.2295 c
-7882.1265 8578.2295 -7881.4722 8578.3135 -7881.0928 8578.6504 c
-7879.8066 8579.8535 -7879.1318 8580.0625 -7878.5835 8580.0625 c
-7878.3721 8580.0625 -7878.2881 8580.0625 -7878.2881 8580.2109 c
-7878.2881 8580.5273 -7879.0474 8580.7168 -7879.1318 8580.7383 c
-7879.3423 8580.8008 -7879.5103 8581.0332 -7879.5103 8581.2441 c
-7879.5103 8581.7295 -7879.2378 8581.75 -7878.8774 8581.75 c
-7878.5215 8581.75 -7877.8042 8581.3916 -7877.8042 8580.1904 c
-7877.8042 8579.1992 -7878.9424 8578.0391 -7879.4058 8577.8076 c
-7879.7007 8577.6377 -7880.5874 8577.6602 -7880.9458 8577.6172 c
-7881.6406 8577.5322 -7883.4121 8576.585 -7883.4121 8574.0957 c
-7883.4336 8572.6826 -7882.1265 8571.3555 -7881.8511 8571.166 c
-7881.6826 8571.0586 -7881.5986 8570.9326 -7881.5986 8570.7637 c
-7881.5986 8570.5527 -7881.6626 8567.6221 -7881.9995 8567.6221 c
-7882.4424 8567.6221 -7882.5054 8567.6221 -7882.5054 8567.8135 c
-7882.21 8568.9082 -7882.21 8569.1406 v
-7882.21 8569.457 -7882.4424 8570.9326 -7883.3066 8570.9326 c
-7883.5806 8570.9326 -7884.0449 8570.7002 -7884.0449 8570.3848 c
-7884.0449 8570.0898 -7883.3486 8568.8877 -7883.3486 8568.6133 c
-7883.3486 8568.1279 -7883.3921 8568.1074 -7884.0654 8567.4961 c
-7884.2559 8567.3486 -7884.3193 8567.2227 -7884.3193 8567.0313 c
-7884.3193 8566.8633 -7884.2134 8566.7354 -7884.0449 8566.7354 c
-7883.8975 8566.7354 -7883.3281 8567.0117 -7883.2017 8567.0313 c
-7883.0752 8567.0313 -7882.8433 8567.0527 -7882.6538 8567.0527 c
-7882.2734 8567.0527 -7882.0845 8566.9258 -7882.0845 8566.7998 c
-7882.0845 8566.5674 -7882.0845 8565.8936 -7882.9263 8564.4375 c
-7883.1167 8564.1006 -7884.2974 8562.7725 -7884.2974 8562.4346 c
-7884.2974 8562.2656 -7884.2134 8562.2461 -7884.1089 8562.2461 c
-7883.9185 8562.2461 -7883.4966 8562.667 -7883.3706 8562.8145 c
-7882.1265 8564.1426 -7881.3042 8565.5762 -7880.9238 8566.8418 c
-7880.8398 8567.1582 -7880.7344 8567.0742 -7880.5654 8567.0957 c
-7878.4155 8567.6016 -7876.3271 8570.1104 -7876.3271 8570.1318 c
-7876.4326 8570.4053 -7876.4326 8570.4688 v
-7876.4326 8570.5957 -7876.3271 8570.6172 -7876.3057 8570.6172 c
-7876.2432 8570.6172 -7876.0527 8570.4053 -7876.0103 8570.4053 c
-7875.9058 8570.4053 -7875.7783 8570.4902 -7875.7783 8570.6377 C
-7875.8418 8571.1855 l
f
0 D
-7879.1104 8569.6895 m
-7878.5215 8569.6895 -7878.0986 8569.7949 -7877.6982 8570.0684 c
-7877.6553 8570.0898 -7877.6138 8570.1104 -7877.5928 8570.1104 c
-7877.5498 8570.1104 -7877.5498 8570.0898 -7877.5498 8570.0469 c
-7877.5498 8569.626 -7879.4272 8567.666 -7880.5654 8567.666 c
-7880.6289 8567.666 -7880.6714 8567.707 -7880.6714 8567.7695 c
-7880.6714 8567.96 -7880.5874 8569.9629 -7880.2495 8569.9629 c
-7880.1865 8569.9629 -7880.1016 8569.9414 -7880.0386 8569.9004 c
-7879.7007 8569.752 -7879.4902 8569.6895 -7879.1104 8569.6895 c
f
-7878.5835 8572.4512 m
-7878.5835 8572.0293 -7878.5625 8571.5654 -7877.8662 8571.5654 c
-7877.2334 8571.5654 -7876.6431 8572.2197 -7876.4961 8572.3672 c
-7876.4326 8572.4092 -7876.3906 8572.4297 -7876.3486 8572.4297 c
-7876.3271 8572.4297 -7876.2847 8572.3877 -7876.2847 8572.3457 c
-7876.2847 8571.9023 -7877.6553 8570.2373 -7879.0049 8570.2373 c
-7879.2578 8570.2373 -7880.2705 8570.4053 -7880.2705 8570.9541 c
-7880.2705 8571.207 -7879.8906 8572.5781 -7879.2793 8573.6533 c
-7877.9087 8576.1416 -7873.7119 8577.7002 -7871.8145 8577.7002 c
-7870.9072 8577.7227 -7870.6118 8577.4063 -7870.4863 8577.3848 c
-7870.4648 8577.3848 -7870.4438 8577.3643 -7870.4233 8577.3643 c
-7870.3174 8577.3643 -7870.1904 8577.4277 -7870.1904 8577.5752 c
-7870.1904 8577.5967 -7870.2119 8577.5967 v
-7870.3594 8578.7344 -7870.4014 8579.1357 -7870.4014 8580.3994 c
-7870.4014 8581.793 -7870.4014 8581.9189 -7869.4321 8581.9189 c
-7868.1455 8581.9189 -7867.8506 8580.8438 -7867.8506 8580.6113 c
-7867.8506 8580.1904 -7868.4399 8579.8945 -7868.5889 8579.8945 c
-7868.7358 8579.8945 -7868.9058 8580.002 -7868.9058 8580.1904 c
-7868.9058 8580.4854 -7868.9473 8580.6328 -7869.2207 8580.6328 c
-7869.4951 8580.6328 -7869.4951 8580.2744 -7869.4951 8580.168 c
-7869.4951 8579.916 -7869.3896 8579.6631 -7869.1782 8579.5361 c
-7868.7998 8579.2832 -7868.7998 8578.8828 -7868.7998 8578.6719 c
-7868.7998 8578.5664 -7868.7998 8578.4395 -7868.8198 8578.334 c
-7868.8418 8578.166 -7870.7817 8576.1201 -7871.0977 8576.1201 c
-7871.2446 8576.1201 -7871.5615 8576.2666 -7872.4258 8576.2666 c
-7874.5767 8576.2666 -7875.5474 8574.5391 -7875.7378 8574.0117 c
-7875.9897 8573.2949 -7876.7915 8572.999 -7877.0225 8572.999 c
-7877.2129 8572.999 -7877.2129 8573.042 -7877.2129 8573.4424 c
-7877.2129 8573.5273 -7877.4238 8573.8633 y
-7877.4238 8574.0537 -7876.3906 8574.3066 -7876.3906 8574.4961 c
-7876.3906 8574.666 -7876.5801 8574.6855 -7876.7271 8574.6855 c
-7876.8115 8574.6855 -7877.8882 8574.6855 -7878.3306 8573.8633 c
-7878.5415 8573.4629 -7878.5835 8572.8945 -7878.5835 8572.4512 c
f
1 D
-7874.4927 8570.1953 m
-7874.4927 8570.1514 -7874.5137 8570.1318 -7874.5352 8570.1318 c
-7874.5986 8570.1318 -7874.7666 8570.4688 -7874.8506 8570.4688 c
-7874.9146 8570.4688 -7874.9995 8570.3848 -7875.0415 8570.2783 c
-7875.0615 8570.1953 -7875.1255 8569.7305 -7875.21 8569.7305 c
-7875.2524 8569.7305 -7875.4209 8569.9629 -7875.4634 8569.9629 c
-7875.6104 8569.9629 -7875.7158 8569.7305 -7875.7158 8569.5215 c
-7875.7158 8569.415 -7875.7783 8569.415 -7875.9263 8569.415 c
-7876.5166 8569.415 -7878.1406 8567.2432 -7878.5625 8565.4922 c
-7878.6055 8565.3242 -7878.5835 8565.1768 -7878.8994 8565.0703 c
-7881.0713 8564.334 -7883.5176 8562.1816 -7883.5176 8562.0557 c
-7883.5176 8561.9082 -7883.4336 8561.8242 -7883.3066 8561.8242 c
-7883.2432 8561.8242 -7883.1592 8561.8242 -7882.6538 8562.1602 c
-7881.7681 8562.751 -7879.7217 8564.0381 -7878.8994 8564.0381 c
-7878.6265 8564.0381 -7878.6055 8563.6797 -7878.6055 8563.4258 c
-7878.6055 8563.2354 -7878.6265 8563.0039 -7878.6265 8562.8574 c
-7878.6465 8562.583 -7878.9634 8562.2656 -7878.9634 8562.0977 c
-7878.9634 8561.9502 -7878.8154 8561.8447 -7878.6465 8561.8447 c
-7878.4575 8561.8447 -7878.3306 8561.8662 -7878.1606 8562.0557 c
-7877.8662 8562.3926 -7877.7402 8562.541 -7877.4238 8562.541 c
-7877.1914 8562.541 -7876.1377 8561.8242 -7875.8838 8561.8242 c
-7875.5679 8561.8242 -7875.1895 8562.3086 -7875.1895 8562.6045 c
-7875.1895 8563.3418 -7876.0942 8563.9326 -7876.6431 8563.9326 c
-7877.0225 8563.9326 -7877.4438 8563.8066 -7877.6353 8563.5742 c
-7877.6982 8563.5098 -7877.7607 8563.4688 -7877.8242 8563.4688 c
-7877.9937 8563.4688 -7878.1191 8563.9326 -7878.1191 8563.9746 c
-7878.1191 8564.3975 -7875.2729 8564.459 -7874.9146 8564.459 c
-7874.7666 8564.459 -7874.6401 8564.375 -7874.5352 8564.2061 c
-7874.3447 8563.9121 -7873.1855 8562.6895 -7871.6255 8562.6895 c
-7869.79 8562.6895 -7868.0825 8563.9521 -7868.0825 8565.8506 c
-7868.0825 8565.957 -7868.1245 8566.5039 -7868.1245 8566.5264 c
-7868.1245 8566.5898 -7867.0063 8568.3389 -7865.6782 8568.3389 c
-7864.6245 8568.3389 -7864.2656 8567.75 -7864.2656 8567.2637 c
-7864.2656 8567.0313 -7864.3711 8566.3789 -7864.8984 8566.3789 c
-7865.1094 8566.3789 -7865.2144 8566.5898 -7865.2144 8566.9688 c
-7865.2144 8567.0527 -7865.0039 8567.4326 -7865.0039 8567.5381 c
-7865.0039 8567.5801 -7865.0239 8567.6016 -7865.0879 8567.6016 c
-7865.4258 8567.6016 -7865.9521 8567.2432 -7866.1846 8566.5898 c
-7866.4595 8565.873 -7866.8594 8565.1768 -7867.1958 8564.7754 c
-7867.5127 8564.418 -7867.6182 8563.8262 -7867.6182 8563.4893 c
-7867.6182 8563.0039 -7867.1338 8561.8447 -7865.4878 8561.8447 c
-7864.2871 8561.8447 -7863.4434 8562.583 -7863.4434 8563.1943 c
-7863.4434 8563.8066 -7863.7598 8564.1855 -7864.2026 8564.1855 c
-7864.6455 8564.1855 -7864.9824 8563.8477 -7864.9824 8563.5098 c
-7864.9824 8562.8359 -7865.1514 8562.6895 -7865.4878 8562.6895 c
-7865.6992 8562.6895 -7865.8896 8562.8145 -7865.8896 8563.1309 c
-7865.8896 8563.3633 -7865.8896 8563.7422 -7864.3711 8565.0078 c
-7863.8857 8565.4082 -7863.4214 8566.1055 -7863.4214 8566.8848 c
-7863.4214 8567.6445 -7864.4561 8568.8447 -7865.6362 8568.8447 c
-7866.8594 8568.8447 -7867.6401 8568.0654 -7868.2515 8567.3486 c
-7868.5454 8567.0117 -7869.9814 8565.3242 -7870.0439 8565.3018 c
-7870.2334 8565.1543 -7870.3174 8565.0293 -7870.3174 8564.9023 c
-7870.3174 8564.7969 -7870.2119 8564.6914 -7870.0854 8564.6914 c
-7869.8535 8564.6914 -7868.9058 8565.6406 -7868.8198 8565.6406 c
-7868.7568 8565.6406 -7868.7153 8565.5762 -7868.7153 8565.4922 c
-7868.7153 8564.7334 -7869.8535 8563.2578 -7871.6255 8563.2578 c
-7873.1006 8563.2578 -7873.9863 8564.375 -7873.9863 8564.418 c
-7873.9863 8564.5439 -7873.8394 8564.6689 -7873.5225 8564.7334 c
-7869.6426 8565.4717 -7866.3955 8569.0215 -7866.3955 8573.6377 c
-7866.3955 8573.7441 -7866.2256 8573.7705 -7866.0786 8573.7705 c
-7865.7202 8573.7705 -7865.0879 8573.8496 -7865.0879 8573.5762 c
-7865.0879 8573.4697 -7865.1294 8573.3438 -7865.1934 8573.2168 c
-7865.5518 8572.6465 -7865.8682 8572.4727 -7865.8682 8571.5215 c
-7865.8682 8571.0586 -7865.4878 8570.5322 -7864.8984 8570.5322 c
-7863.8657 8570.5322 -7863.4214 8571.5654 -7863.4214 8571.7969 c
-7863.4214 8571.9658 -7863.5073 8572.0293 -7863.5903 8572.0293 c
-7863.7178 8572.0293 -7864.2241 8571.502 -7864.3711 8571.502 c
-7864.5615 8571.502 -7864.7085 8571.5439 -7864.7085 8572.0293 c
-7864.7085 8572.3672 -7863.4214 8576.0781 -7863.4214 8576.8789 c
-7863.4214 8577.4492 -7863.7598 8578.1455 -7864.6455 8578.6504 c
-7864.6875 8578.6719 -7864.7085 8578.6924 -7864.7085 8578.7344 c
-7864.7085 8578.8184 -7864.5615 8578.9248 -7864.4126 8578.9658 c
-7863.8018 8579.1357 -7863.4214 8579.2412 -7863.4214 8580.1904 c
-7863.4214 8580.5488 -7863.7598 8581.2236 -7864.0127 8581.2236 c
-7864.2026 8581.2236 -7864.2026 8581.1807 -7864.2026 8580.8223 c
-7864.2026 8580.6748 -7864.2446 8580.5693 -7864.3926 8580.4639 c
-7864.7085 8580.2529 -7864.7295 8580.2109 -7864.8135 8579.7266 c
-7864.8774 8579.4102 -7865.0039 8579.3242 -7866.1426 8578.6924 c
-7866.5854 8578.4189 -7866.6904 8578.1865 -7866.7744 8577.9551 c
-7866.8594 8577.7637 -7866.9233 8577.7637 -7867.4287 8577.7637 c
-7867.9561 8577.7637 -7870.5073 8575.0449 -7870.5073 8574.918 c
-7870.5073 8574.8555 -7870.3809 8574.5596 -7870.3809 8574.4961 c
-7870.3809 8574.4336 -7870.4014 8574.3916 -7870.4438 8574.3916 c
-7870.4863 8574.3916 -7870.6338 8574.6016 -7870.6758 8574.6016 c
-7870.7817 8574.6016 -7870.7817 8574.4121 -7870.7817 8574.2637 c
-7870.7817 8574.1602 -7870.5703 8573.5898 -7870.5703 8573.4424 c
-7870.5703 8573.3584 -7870.5918 8573.2949 -7870.6338 8573.2949 c
-7870.7178 8573.2949 -7870.9072 8573.7578 -7870.9922 8573.7578 c
-7871.0342 8573.7578 -7871.0762 8573.7168 -7871.0762 8573.5898 c
-7871.0762 8573.4424 -7870.8862 8572.7256 y
-7870.8862 8572.6621 -7870.9072 8572.5566 -7870.9502 8572.5566 c
-7871.0342 8572.5566 -7871.1826 8572.957 -7871.2666 8572.957 c
-7871.3286 8572.957 -7871.3926 8572.873 -7871.3926 8572.7256 c
-7871.3926 8572.6406 -7871.2446 8572.2197 -7871.2446 8572.1143 c
-7871.2446 8572.0508 -7871.2666 8571.9863 -7871.3086 8571.9863 c
-7871.3506 8571.9863 -7871.5835 8572.5996 -7871.7095 8572.5996 c
-7871.7935 8572.5996 -7871.8994 8572.4922 -7871.8994 8572.3877 c
-7871.8994 8572.3037 -7871.7729 8571.9453 -7871.7729 8571.8613 c
-7871.7729 8571.8184 -7871.7729 8571.7969 -7871.7935 8571.7969 c
-7871.8774 8571.7969 -7872.0254 8572.2822 -7872.1104 8572.2822 c
-7872.3418 8572.2822 -7872.3623 8571.8613 -7872.3623 8571.6709 c
-7872.3623 8571.5869 -7872.2998 8571.25 -7872.2998 8571.1855 c
-7872.2998 8571.123 -7872.3198 8571.1016 -7872.3418 8571.1016 c
-7872.4897 8571.1016 -7872.6782 8571.9023 -7872.8271 8571.9023 c
-7873.0386 8571.9023 -7873.0386 8571.7129 -7873.0386 8571.4814 c
-7873.0166 8570.9541 L
-7873.0166 8570.9326 -7873.0386 8570.9121 y
-7873.0586 8570.9121 -7873.1006 8570.9326 -7873.1226 8570.9961 c
-7873.1855 8571.207 -7873.3115 8571.6289 -7873.5225 8571.6289 c
-7873.6694 8571.6289 -7873.8174 8571.46 -7873.8174 8571.3135 c
-7873.8174 8571.0801 -7873.7119 8570.7002 -7873.7119 8570.4688 c
-7873.7119 8570.4053 -7873.7334 8570.3848 -7873.7754 8570.3848 c
-7873.8608 8570.3848 -7873.9863 8570.8262 -7874.0278 8570.9121 c
-7874.0918 8570.9961 -7874.1553 8571.0176 -7874.2192 8571.0176 c
-7874.5352 8571.0176 -7874.5352 8570.7002 -7874.5352 8570.5527 C
-7874.4927 8570.1953 l
f
0 D
-7875.8633 8565.8301 m
-7875.8633 8565.5977 -7877.8042 8565.4082 -7877.8662 8565.4082 c
-7877.9722 8565.4082 -7878.0352 8565.4717 -7878.0352 8565.5762 c
-7878.0352 8566.4414 -7876.2847 8568.6768 -7875.8633 8568.6768 c
-7875.7998 8568.6768 -7875.7783 8568.6563 -7875.7783 8568.5928 c
-7876.2002 8567.3486 -7876.2002 8567.0957 v
-7876.2002 8566.7158 -7876.0942 8566.4629 -7875.9058 8566.041 c
-7875.8838 8565.957 -7875.8633 8565.8936 -7875.8633 8565.8301 c
f
-7867.1338 8577.2793 m
-7866.9858 8577.2793 -7866.4795 8576.7744 -7866.3325 8576.7744 c
-7866.2065 8576.7744 -7866.0791 8576.8584 -7866.0791 8577.0059 c
-7866.0791 8577.0898 -7866.2695 8577.5322 -7866.2695 8577.6377 c
-7866.2695 8577.9961 -7865.8896 8578.293 -7865.5098 8578.293 c
-7865.1094 8578.293 -7863.9702 8577.9756 -7863.9702 8576.752 c
-7863.9702 8575.6563 -7864.3926 8575.6563 -7866.0366 8575.6563 c
-7866.3955 8575.6563 -7868.0615 8575.8457 -7868.3145 8575.8457 c
-7868.4399 8575.8457 -7868.4834 8575.6768 -7868.4834 8575.5498 c
-7868.4834 8575.5088 -7868.4834 8575.4668 -7868.4614 8575.4453 c
-7868.3984 8575.0664 -7868.1675 8574.5176 -7868.1675 8574.1377 c
-7868.1675 8569.6895 -7872.2998 8565.8301 -7874.7666 8565.8301 c
-7875.4209 8565.8301 -7875.6519 8566.6318 -7875.6519 8567.0527 c
-7875.6519 8568.7822 -7873.6694 8569.8145 -7873.4175 8569.8145 c
-7873.3545 8569.8145 -7873.3335 8569.7949 -7873.3335 8569.752 c
-7873.3335 8569.71 -7873.3545 8569.668 -7873.3975 8569.626 c
-7873.5225 8569.457 -7874.0498 8568.8447 -7874.0498 8568.2129 c
-7874.0498 8567.875 -7873.7554 8567.4326 -7872.9951 8567.4326 c
-7871.7305 8567.4326 -7871.1826 8568.7822 -7871.1826 8569.1406 c
-7871.1826 8569.2891 -7871.2446 8569.499 -7871.4561 8569.499 c
-7871.6035 8569.499 -7872.0049 8568.8447 -7872.1519 8568.8447 c
-7872.2158 8568.8447 -7872.4473 8568.9717 -7872.5103 8568.9717 c
-7872.5942 8568.9717 -7872.6582 8568.9512 -7872.7422 8568.9512 c
-7872.8057 8568.9512 -7872.8481 8569.0137 -7872.8481 8569.1191 c
-7872.8481 8569.4785 -7872.3623 8570.0469 -7871.8774 8570.3008 c
-7870.9722 8570.7637 -7869.6226 8572.0928 -7869.6226 8573.5479 c
-7869.6226 8573.9688 -7869.6846 8574.3701 -7869.6846 8574.707 c
-7869.6846 8575.2559 -7868.7568 8576.1201 -7867.8081 8577.0059 c
-7867.6401 8577.1533 -7867.3862 8577.2793 -7867.1338 8577.2793 c
f
*U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 57)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7858.9722 8587 m
-7858.9722 8560.9727 L
-7885 8560.9727 L
-7885 8587 L
-7858.9722 8587 L
n
0 Ap
0 R
0.597742 0.537865 0.64184 0.350469 K
0.375 w-7867.6455 8573.9893 m
-7858.9736 8573.9893 l
S
-7871.9839 8587 m
-7871.9839 8578.3242 l
S
0.64 0.650477 0.701045 0.510735 K
1.125 w-7867.7202 8569.6504 m
-7858.9727 8569.6504 l
S
-7876.3232 8587 m
-7876.3232 8577.6455 l
S
0.7084 0.636438 0.515526 0.381872 K
-7867.6504 8587 m
-7867.6504 8584.5869 l
-7864.9937 8584.3633 -7863.3096 8582.6602 v
-7861.6064 8580.9336 -7861.3774 8578.3281 y
-7858.9727 8578.3281 l
S
*u
0 O
0.7084 0.636438 0.515526 0.381872 k
1 w-7875.7783 8570.6377 m
-7875.7783 8570.4902 -7875.9058 8570.4053 -7876.0103 8570.4053 c
-7876.0527 8570.4053 -7876.2432 8570.6172 -7876.3057 8570.6172 c
-7876.3271 8570.6172 -7876.4326 8570.5957 -7876.4326 8570.4688 c
-7876.4326 8570.4053 -7876.3271 8570.1318 y
-7876.3271 8570.1104 -7878.4155 8567.6016 -7880.5654 8567.0957 c
-7880.7344 8567.0742 -7880.8398 8567.1582 -7880.9238 8566.8418 c
-7881.3042 8565.5762 -7882.1265 8564.1426 -7883.3706 8562.8145 c
-7883.4966 8562.668 -7883.9185 8562.2461 -7884.1089 8562.2461 c
-7884.2134 8562.2461 -7884.2974 8562.2656 -7884.2974 8562.4346 c
-7884.2974 8562.7725 -7883.1167 8564.1006 -7882.9263 8564.4375 c
-7882.0845 8565.8936 -7882.0845 8566.5674 -7882.0845 8566.7998 c
-7882.0845 8566.9258 -7882.2734 8567.0527 -7882.6538 8567.0527 c
-7882.8433 8567.0527 -7883.0752 8567.0313 -7883.2017 8567.0313 c
-7883.3281 8567.0117 -7883.8975 8566.7354 -7884.0449 8566.7354 c
-7884.2134 8566.7354 -7884.3193 8566.8633 -7884.3193 8567.0313 c
-7884.3193 8567.2227 -7884.2559 8567.3486 -7884.0654 8567.4961 c
-7883.3921 8568.1074 -7883.3486 8568.1279 -7883.3486 8568.6133 c
-7883.3486 8568.8877 -7884.0449 8570.0898 -7884.0449 8570.3848 c
-7884.0449 8570.7002 -7883.5806 8570.9326 -7883.3066 8570.9326 c
-7882.4424 8570.9326 -7882.21 8569.457 -7882.21 8569.1406 c
-7882.21 8568.9082 -7882.5054 8567.8135 y
-7882.5054 8567.6221 -7882.4424 8567.6221 -7881.9995 8567.6221 c
-7881.6626 8567.6221 -7881.5986 8570.5527 -7881.5986 8570.7637 c
-7881.5986 8570.9326 -7881.6826 8571.0586 -7881.8511 8571.166 c
-7882.1265 8571.3555 -7883.4336 8572.6826 -7883.4121 8574.0957 c
-7883.4121 8576.585 -7881.6406 8577.5322 -7880.9458 8577.6172 c
-7880.5874 8577.6602 -7879.7007 8577.6377 -7879.4058 8577.8076 c
-7878.9424 8578.0391 -7877.8042 8579.1992 -7877.8042 8580.1904 c
-7877.8042 8581.3916 -7878.5215 8581.75 -7878.8774 8581.75 c
-7879.2378 8581.75 -7879.5103 8581.7295 -7879.5103 8581.2441 c
-7879.5103 8581.0332 -7879.3423 8580.8008 -7879.1318 8580.7383 c
-7879.0474 8580.7168 -7878.2881 8580.5273 -7878.2881 8580.2109 c
-7878.2881 8580.0625 -7878.3721 8580.0625 -7878.5835 8580.0625 c
-7879.1318 8580.0625 -7879.8066 8579.8535 -7881.0928 8578.6504 c
-7881.4722 8578.3135 -7882.1265 8578.2295 -7882.5679 8578.2295 c
-7883.0537 8578.2295 -7884.2974 8578.6924 -7884.2974 8580.1904 c
-7884.2974 8582.0234 -7883.4751 8582.7207 -7882.8433 8582.7207 c
-7882.4209 8582.7207 -7881.8936 8582.4033 -7881.8936 8582.1289 c
-7881.8936 8581.793 -7881.9575 8581.3711 -7882.5479 8581.3281 c
-7883.0537 8581.2861 -7883.3066 8581.0537 -7883.3066 8580.7168 c
-7883.3066 8580.5059 -7883.1592 8580.2949 -7882.8218 8580.2949 c
-7882.3154 8580.2949 -7881.7041 8580.8652 -7881.0713 8581.6025 c
-7880.6714 8582.0879 -7879.7007 8582.6152 -7878.9209 8582.6152 c
-7878.1191 8582.6152 -7877.0654 8581.709 -7877.0654 8580.3369 c
-7877.0654 8579.0723 -7878.4995 8577.7637 -7879.2378 8577.2383 c
-7879.9546 8576.7109 -7880.3335 8576.3311 -7880.46 8576.1201 c
-7880.5654 8575.9727 -7880.9033 8575.0234 -7881.1143 8575.0234 c
-7881.2607 8575.0234 -7881.3672 8575.1914 -7881.3672 8575.4033 c
-7881.3672 8575.7197 -7881.1143 8576.3535 -7880.7759 8576.6895 c
-7880.6929 8576.7949 -7880.6494 8576.8584 -7880.6494 8576.9209 c
-7880.6494 8577.0693 -7880.8398 8577.0898 -7880.9873 8577.0898 c
-7881.5767 8577.0898 -7882.7793 8576.1201 -7882.7793 8574.2861 c
-7882.7793 8572.7041 -7881.7881 8571.8613 -7881.6406 8571.8613 c
-7881.5361 8571.8613 -7881.4297 8571.9658 -7881.3672 8572.1777 c
-7879.6592 8578.334 -7874.7822 8579.5576 -7872.3774 8579.5576 c
-7872.2729 8579.5576 -7872.1895 8579.6201 -7872.1895 8579.7695 c
-7872.1895 8579.8945 -7872.1895 8580.9922 -7872.3359 8580.9922 c
-7872.3774 8580.9922 -7872.4414 8580.9697 -7872.5264 8580.9072 c
-7873.0942 8580.4434 -7873.3755 8580.085 -7874.3022 8580.085 c
-7874.7666 8580.085 -7875.5679 8580.6113 -7875.5679 8581.2236 c
-7875.5679 8582.0029 -7874.8936 8582.7207 -7874.4082 8582.7207 c
-7874.0498 8582.7207 -7873.9023 8582.6357 -7873.9023 8582.5098 c
-7873.9023 8582.3818 -7874.3662 8581.9404 -7874.3662 8581.793 c
-7874.3662 8581.5391 -7874.3242 8581.3916 -7873.8809 8581.3916 c
-7873.4814 8581.3916 -7872.7842 8581.5615 -7872.3418 8581.8145 c
-7871.8774 8582.0879 -7870.7393 8582.7207 -7869.7065 8582.7207 c
-7868.9473 8582.7207 -7867.9561 8582.2773 -7867.4702 8581.4766 c
-7867.4287 8581.4121 -7867.3862 8581.3916 -7867.3447 8581.3916 c
-7867.2393 8581.3916 -7867.1543 8581.4766 -7867.1338 8581.625 c
-7867.0913 8582.0234 -7866.7534 8582.7207 -7865.9312 8582.7207 c
-7865.3408 8582.7207 -7864.8135 8582.2139 -7864.8135 8581.7705 c
-7864.8135 8581.6025 -7864.9194 8581.5391 -7865.0239 8581.5391 c
-7865.1094 8581.5391 -7865.4878 8581.793 -7865.5942 8581.793 c
-7865.7407 8581.793 -7866.6479 8581.1807 -7866.7334 8581.0332 c
-7867.5127 8579.7471 -7867.5977 8579.5996 -7868.2295 8579.3457 c
-7868.3984 8579.2617 -7868.3984 8579.1777 -7868.3984 8578.3135 c
-7868.3984 8578.1865 -7868.3984 8577.8906 -7868.5454 8577.7227 c
-7868.8198 8577.4492 -7870.9287 8575.3818 -7871.1392 8575.3818 c
-7871.2241 8575.3818 -7871.4985 8575.6563 -7871.5835 8575.6563 c
-7871.6035 8575.6563 -7871.6255 8575.6563 -7871.6255 8575.6143 C
-7871.6035 8575.4668 l
-7871.6035 8575.2988 -7871.6455 8575.2129 -7871.8564 8575.2129 c
-7871.9199 8575.2129 -7872.1943 8575.3398 -7872.2568 8575.3398 c
-7872.3198 8575.3398 -7872.3623 8574.8975 -7872.4473 8574.8975 c
-7872.4678 8574.8975 -7872.8057 8575.1289 -7872.8896 8575.1289 c
-7873.0166 8575.1289 -7873.1006 8575.0449 -7873.1006 8574.9395 c
-7873.1006 8574.877 -7873.1006 8574.3916 -7873.2065 8574.3916 c
-7873.2915 8574.3916 -7873.5225 8574.6855 -7873.5654 8574.6855 c
-7873.5854 8574.6855 -7873.5854 8574.666 -7873.5854 8574.6016 C
-7873.5439 8574.1807 l
-7873.5439 8574.1162 -7873.5854 8574.0957 -7873.6494 8574.0957 c
-7873.7119 8574.0957 -7873.9658 8574.4121 -7874.0498 8574.4121 c
-7874.0918 8574.4121 -7874.1138 8574.3701 -7874.1138 8574.2861 c
-7874.1138 8574.2441 -7873.9233 8573.5273 -7873.9233 8573.3789 c
-7873.9233 8573.2949 -7873.9658 8573.252 -7874.0078 8573.252 c
-7874.0918 8573.252 -7874.4297 8573.6113 -7874.4722 8573.6113 c
-7874.4927 8573.6113 -7874.4927 8573.6113 -7874.4927 8573.5898 c
-7874.4927 8573.5059 -7874.3882 8573.1465 -7874.3882 8573.127 c
-7874.3882 8573.1055 -7874.4082 8573.084 -7874.4297 8573.084 c
-7874.4722 8573.084 -7874.6826 8573.2949 -7874.7446 8573.2949 c
-7874.7666 8573.2949 -7874.7666 8573.2949 -7874.7666 8573.252 c
-7874.7666 8573.084 -7874.5137 8572.3457 -7874.5137 8572.2822 c
-7874.5137 8572.2607 -7874.5352 8572.2402 -7874.5562 8572.2402 c
-7874.6826 8572.2402 -7875.1055 8572.8105 -7875.1465 8572.8105 c
-7875.1675 8572.8105 -7875.1675 8572.7891 -7875.1675 8572.7256 c
-7875.1675 8572.5352 -7874.8936 8571.6289 y
-7874.8936 8571.6074 -7874.9146 8571.5869 -7874.9351 8571.5869 c
-7875.0615 8571.5869 -7875.4414 8572.1338 -7875.5049 8572.1338 c
-7875.5264 8572.1338 -7875.5264 8572.1338 -7875.5264 8572.0928 c
-7875.2729 8571.1855 -7875.2729 8571.1016 v
-7875.2729 8570.9961 -7875.3154 8570.9541 -7875.3994 8570.9541 c
-7875.4634 8570.9541 -7875.6943 8571.291 -7875.7783 8571.291 c
-7875.8218 8571.291 -7875.8418 8571.25 -7875.8418 8571.1855 c
-7875.7783 8570.6377 L
f
1 D
-7880.0386 8569.9004 m
-7880.1016 8569.9414 -7880.1865 8569.9629 -7880.2495 8569.9629 c
-7880.5874 8569.9629 -7880.6714 8567.96 -7880.6714 8567.7695 c
-7880.6714 8567.707 -7880.6289 8567.666 -7880.5654 8567.666 c
-7879.4272 8567.666 -7877.5498 8569.627 -7877.5498 8570.0469 c
-7877.5498 8570.0898 -7877.5498 8570.1104 -7877.5928 8570.1104 c
-7877.6138 8570.1104 -7877.6553 8570.0898 -7877.6982 8570.0684 c
-7878.0986 8569.7949 -7878.5215 8569.6895 -7879.1104 8569.6895 c
-7879.4902 8569.6895 -7879.7007 8569.752 -7880.0386 8569.9004 c
f
-7878.3306 8573.8633 m
-7877.8882 8574.6855 -7876.8115 8574.6855 -7876.7271 8574.6855 c
-7876.5801 8574.6855 -7876.3906 8574.666 -7876.3906 8574.4961 c
-7876.3906 8574.3066 -7877.4238 8574.0537 -7877.4238 8573.8633 c
-7877.2129 8573.5273 -7877.2129 8573.4424 v
-7877.2129 8573.043 -7877.2129 8573 -7877.0225 8573 c
-7876.7915 8573 -7875.9897 8573.2949 -7875.7378 8574.0117 c
-7875.5474 8574.5391 -7874.5767 8576.2666 -7872.4258 8576.2666 c
-7871.5615 8576.2666 -7871.2446 8576.1201 -7871.0977 8576.1201 c
-7870.7817 8576.1201 -7868.8418 8578.166 -7868.8198 8578.334 c
-7868.7998 8578.4395 -7868.7998 8578.5664 -7868.7998 8578.6719 c
-7868.7998 8578.8828 -7868.7998 8579.2832 -7869.1782 8579.5361 c
-7869.3896 8579.6631 -7869.4951 8579.916 -7869.4951 8580.168 c
-7869.4951 8580.2744 -7869.4951 8580.6328 -7869.2207 8580.6328 c
-7868.9473 8580.6328 -7868.9058 8580.4854 -7868.9058 8580.1904 c
-7868.9058 8580.002 -7868.7358 8579.8945 -7868.5889 8579.8945 c
-7868.4399 8579.8945 -7867.8506 8580.1904 -7867.8506 8580.6113 c
-7867.8506 8580.8438 -7868.1455 8581.9189 -7869.4321 8581.9189 c
-7870.4014 8581.9189 -7870.4014 8581.793 -7870.4014 8580.3994 c
-7870.4014 8579.1357 -7870.3594 8578.7344 -7870.2119 8577.5967 c
-7870.1904 8577.5967 -7870.1904 8577.5752 y
-7870.1904 8577.4277 -7870.3174 8577.3643 -7870.4233 8577.3643 c
-7870.4438 8577.3643 -7870.4648 8577.3848 -7870.4863 8577.3848 c
-7870.6118 8577.4063 -7870.9072 8577.7227 -7871.8145 8577.7002 c
-7873.7119 8577.7002 -7877.9087 8576.1416 -7879.2793 8573.6533 c
-7879.8906 8572.5781 -7880.2705 8571.207 -7880.2705 8570.9541 c
-7880.2705 8570.4053 -7879.2578 8570.2373 -7879.0049 8570.2373 c
-7877.6553 8570.2373 -7876.2847 8571.9023 -7876.2847 8572.3457 c
-7876.2847 8572.3877 -7876.3271 8572.4297 -7876.3486 8572.4297 c
-7876.3906 8572.4297 -7876.4326 8572.4092 -7876.4961 8572.3672 c
-7876.6431 8572.2197 -7877.2334 8571.5654 -7877.8662 8571.5654 c
-7878.5625 8571.5654 -7878.5835 8572.0293 -7878.5835 8572.4512 c
-7878.5835 8572.8945 -7878.5415 8573.4629 -7878.3306 8573.8633 c
f
0 D
-7874.5352 8570.5527 m
-7874.5352 8570.7002 -7874.5352 8571.0176 -7874.2192 8571.0176 c
-7874.1553 8571.0176 -7874.0918 8570.9961 -7874.0278 8570.9121 c
-7873.9863 8570.8262 -7873.8608 8570.3848 -7873.7754 8570.3848 c
-7873.7334 8570.3848 -7873.7119 8570.4053 -7873.7119 8570.4688 c
-7873.7119 8570.7002 -7873.8174 8571.0801 -7873.8174 8571.3135 c
-7873.8174 8571.46 -7873.6694 8571.6289 -7873.5225 8571.6289 c
-7873.3115 8571.6289 -7873.1855 8571.207 -7873.1226 8570.9961 c
-7873.1006 8570.9326 -7873.0586 8570.9121 -7873.0386 8570.9121 c
-7873.0166 8570.9326 -7873.0166 8570.9541 V
-7873.0386 8571.4814 l
-7873.0386 8571.7129 -7873.0386 8571.9023 -7872.8271 8571.9023 c
-7872.6782 8571.9023 -7872.4897 8571.1016 -7872.3418 8571.1016 c
-7872.3198 8571.1016 -7872.2998 8571.123 -7872.2998 8571.1855 c
-7872.2998 8571.25 -7872.3623 8571.5869 -7872.3623 8571.6709 c
-7872.3623 8571.8613 -7872.3418 8572.2822 -7872.1104 8572.2822 c
-7872.0254 8572.2822 -7871.8774 8571.7969 -7871.7935 8571.7969 c
-7871.7729 8571.7969 -7871.7729 8571.8184 -7871.7729 8571.8613 c
-7871.7729 8571.9453 -7871.8994 8572.3037 -7871.8994 8572.3877 c
-7871.8994 8572.4922 -7871.7935 8572.5996 -7871.7095 8572.5996 c
-7871.5835 8572.5996 -7871.3506 8571.9863 -7871.3086 8571.9863 c
-7871.2666 8571.9863 -7871.2446 8572.0508 -7871.2446 8572.1143 c
-7871.2446 8572.2197 -7871.3926 8572.6406 -7871.3926 8572.7256 c
-7871.3926 8572.873 -7871.3286 8572.957 -7871.2666 8572.957 c
-7871.1826 8572.957 -7871.0342 8572.5566 -7870.9502 8572.5566 c
-7870.9072 8572.5566 -7870.8862 8572.6621 -7870.8862 8572.7256 c
-7871.0762 8573.4424 -7871.0762 8573.5898 v
-7871.0762 8573.7168 -7871.0342 8573.7578 -7870.9922 8573.7578 c
-7870.9072 8573.7578 -7870.7178 8573.2949 -7870.6338 8573.2949 c
-7870.5918 8573.2949 -7870.5703 8573.3584 -7870.5703 8573.4424 c
-7870.5703 8573.5898 -7870.7817 8574.1602 -7870.7817 8574.2637 c
-7870.7817 8574.4121 -7870.7817 8574.6016 -7870.6758 8574.6016 c
-7870.6338 8574.6016 -7870.4863 8574.3916 -7870.4438 8574.3916 c
-7870.4014 8574.3916 -7870.3809 8574.4336 -7870.3809 8574.4961 c
-7870.3809 8574.5596 -7870.5073 8574.8555 -7870.5073 8574.918 c
-7870.5073 8575.0449 -7867.9561 8577.7637 -7867.4287 8577.7637 c
-7866.9233 8577.7637 -7866.8594 8577.7637 -7866.7744 8577.9551 c
-7866.6904 8578.1865 -7866.5854 8578.4189 -7866.1426 8578.6924 c
-7865.0039 8579.3242 -7864.8774 8579.4102 -7864.8135 8579.7266 c
-7864.7295 8580.2109 -7864.7085 8580.2529 -7864.3926 8580.4639 c
-7864.2446 8580.5693 -7864.2026 8580.6748 -7864.2026 8580.8223 c
-7864.2026 8581.1807 -7864.2026 8581.2236 -7864.0127 8581.2236 c
-7863.7598 8581.2236 -7863.4214 8580.5488 -7863.4214 8580.1904 c
-7863.4214 8579.2412 -7863.8018 8579.1357 -7864.4126 8578.9658 c
-7864.5615 8578.9248 -7864.7085 8578.8184 -7864.7085 8578.7344 c
-7864.7085 8578.6924 -7864.6875 8578.6719 -7864.6455 8578.6504 c
-7863.7598 8578.1455 -7863.4214 8577.4492 -7863.4214 8576.8789 c
-7863.4214 8576.0781 -7864.7085 8572.3672 -7864.7085 8572.0293 c
-7864.7085 8571.5439 -7864.5615 8571.502 -7864.3711 8571.502 c
-7864.2241 8571.502 -7863.7178 8572.0293 -7863.5903 8572.0293 c
-7863.5073 8572.0293 -7863.4214 8571.9658 -7863.4214 8571.7969 c
-7863.4214 8571.5654 -7863.8657 8570.5322 -7864.8984 8570.5322 c
-7865.4878 8570.5322 -7865.8682 8571.0586 -7865.8682 8571.5215 c
-7865.8682 8572.4727 -7865.5518 8572.6465 -7865.1934 8573.2168 c
-7865.1294 8573.3438 -7865.0879 8573.4697 -7865.0879 8573.5762 c
-7865.0879 8573.8496 -7865.7202 8573.7705 -7866.0786 8573.7705 c
-7866.2256 8573.7705 -7866.3955 8573.7441 -7866.3955 8573.6377 c
-7866.3955 8569.0215 -7869.6426 8565.4717 -7873.5225 8564.7334 c
-7873.8394 8564.6689 -7873.9863 8564.5439 -7873.9863 8564.418 c
-7873.9863 8564.375 -7873.1006 8563.2578 -7871.6255 8563.2578 c
-7869.8535 8563.2578 -7868.7153 8564.7334 -7868.7153 8565.4922 c
-7868.7153 8565.5762 -7868.7568 8565.6406 -7868.8198 8565.6406 c
-7868.9058 8565.6406 -7869.8535 8564.6914 -7870.0854 8564.6914 c
-7870.2119 8564.6914 -7870.3174 8564.7969 -7870.3174 8564.9023 c
-7870.3174 8565.0293 -7870.2334 8565.1543 -7870.0439 8565.3018 c
-7869.9814 8565.3242 -7868.5454 8567.0117 -7868.2515 8567.3486 c
-7867.6401 8568.0654 -7866.8594 8568.8447 -7865.6362 8568.8447 c
-7864.4561 8568.8447 -7863.4214 8567.6445 -7863.4214 8566.8848 c
-7863.4214 8566.1055 -7863.8857 8565.4082 -7864.3711 8565.0078 c
-7865.8896 8563.7422 -7865.8896 8563.3633 -7865.8896 8563.1309 c
-7865.8896 8562.8145 -7865.6992 8562.6895 -7865.4878 8562.6895 c
-7865.1514 8562.6895 -7864.9824 8562.8359 -7864.9824 8563.5098 c
-7864.9824 8563.8477 -7864.6455 8564.1855 -7864.2026 8564.1855 c
-7863.7598 8564.1855 -7863.4434 8563.8066 -7863.4434 8563.1943 c
-7863.4434 8562.584 -7864.2871 8561.8447 -7865.4878 8561.8447 c
-7867.1338 8561.8447 -7867.6182 8563.0039 -7867.6182 8563.4893 c
-7867.6182 8563.8262 -7867.5127 8564.418 -7867.1958 8564.7754 c
-7866.8594 8565.1768 -7866.4595 8565.873 -7866.1846 8566.5898 c
-7865.9521 8567.2432 -7865.4258 8567.6016 -7865.0879 8567.6016 c
-7865.0239 8567.6016 -7865.0039 8567.5801 -7865.0039 8567.5381 c
-7865.0039 8567.4326 -7865.2144 8567.0527 -7865.2144 8566.9688 c
-7865.2144 8566.5898 -7865.1094 8566.3789 -7864.8984 8566.3789 c
-7864.3711 8566.3789 -7864.2656 8567.0313 -7864.2656 8567.2637 c
-7864.2656 8567.75 -7864.6245 8568.3389 -7865.6782 8568.3389 c
-7867.0063 8568.3389 -7868.1245 8566.5898 -7868.1245 8566.5264 c
-7868.1245 8566.5039 -7868.0825 8565.957 -7868.0825 8565.8506 c
-7868.0825 8563.9521 -7869.79 8562.6895 -7871.6255 8562.6895 c
-7873.1855 8562.6895 -7874.3447 8563.9121 -7874.5352 8564.2061 c
-7874.6401 8564.375 -7874.7666 8564.459 -7874.9146 8564.459 c
-7875.2729 8564.459 -7878.1191 8564.3975 -7878.1191 8563.9746 c
-7878.1191 8563.9326 -7877.9937 8563.4688 -7877.8242 8563.4688 c
-7877.7607 8563.4688 -7877.6982 8563.5098 -7877.6353 8563.5742 c
-7877.4438 8563.8066 -7877.0225 8563.9326 -7876.6431 8563.9326 c
-7876.0942 8563.9326 -7875.1895 8563.3418 -7875.1895 8562.6045 c
-7875.1895 8562.3086 -7875.5679 8561.8242 -7875.8838 8561.8242 c
-7876.1377 8561.8242 -7877.1914 8562.541 -7877.4238 8562.541 c
-7877.7402 8562.541 -7877.8662 8562.3926 -7878.1606 8562.0557 c
-7878.3306 8561.8662 -7878.4575 8561.8447 -7878.6465 8561.8447 c
-7878.8154 8561.8447 -7878.9634 8561.9502 -7878.9634 8562.0977 c
-7878.9634 8562.2656 -7878.6465 8562.584 -7878.6265 8562.8574 c
-7878.6265 8563.0039 -7878.6055 8563.2354 -7878.6055 8563.4258 c
-7878.6055 8563.6797 -7878.6265 8564.0381 -7878.8994 8564.0381 c
-7879.7217 8564.0381 -7881.7681 8562.752 -7882.6538 8562.1602 c
-7883.1592 8561.8242 -7883.2432 8561.8242 -7883.3066 8561.8242 c
-7883.4336 8561.8242 -7883.5176 8561.9082 -7883.5176 8562.0557 c
-7883.5176 8562.1816 -7881.0713 8564.334 -7878.8994 8565.0703 c
-7878.5835 8565.1768 -7878.6055 8565.3242 -7878.5625 8565.4922 c
-7878.1406 8567.2432 -7876.5166 8569.416 -7875.9263 8569.416 c
-7875.7783 8569.416 -7875.7158 8569.416 -7875.7158 8569.5215 c
-7875.7158 8569.7305 -7875.6104 8569.9629 -7875.4634 8569.9629 c
-7875.4209 8569.9629 -7875.2524 8569.7305 -7875.21 8569.7305 c
-7875.1255 8569.7305 -7875.0615 8570.1953 -7875.0415 8570.2783 c
-7874.9995 8570.3848 -7874.9146 8570.4688 -7874.8506 8570.4688 c
-7874.7666 8570.4688 -7874.5986 8570.1318 -7874.5352 8570.1318 c
-7874.5137 8570.1318 -7874.4927 8570.1514 -7874.4927 8570.1953 c
-7874.5352 8570.5527 L
f
1 D
-7875.9058 8566.041 m
-7876.0942 8566.4629 -7876.2002 8566.7158 -7876.2002 8567.0957 c
-7876.2002 8567.3486 -7875.7783 8568.5928 y
-7875.7783 8568.6563 -7875.7998 8568.6768 -7875.8633 8568.6768 c
-7876.2847 8568.6768 -7878.0352 8566.4414 -7878.0352 8565.5762 c
-7878.0352 8565.4717 -7877.9722 8565.4082 -7877.8662 8565.4082 c
-7877.8042 8565.4082 -7875.8633 8565.5977 -7875.8633 8565.8301 c
-7875.8633 8565.8936 -7875.8838 8565.957 -7875.9058 8566.041 c
f
-7867.8081 8577.0059 m
-7868.7568 8576.1201 -7869.6846 8575.2559 -7869.6846 8574.707 c
-7869.6846 8574.3701 -7869.6226 8573.9688 -7869.6226 8573.5479 c
-7869.6226 8572.0928 -7870.9722 8570.7637 -7871.8774 8570.3008 c
-7872.3623 8570.0469 -7872.8481 8569.4785 -7872.8481 8569.1191 c
-7872.8481 8569.0137 -7872.8057 8568.9512 -7872.7422 8568.9512 c
-7872.6582 8568.9512 -7872.5942 8568.9717 -7872.5103 8568.9717 c
-7872.4473 8568.9717 -7872.2158 8568.8447 -7872.1519 8568.8447 c
-7872.0049 8568.8447 -7871.6035 8569.5 -7871.4561 8569.5 c
-7871.2446 8569.5 -7871.1826 8569.2891 -7871.1826 8569.1406 c
-7871.1826 8568.7822 -7871.7305 8567.4326 -7872.9951 8567.4326 c
-7873.7554 8567.4326 -7874.0498 8567.875 -7874.0498 8568.2129 c
-7874.0498 8568.8447 -7873.5225 8569.457 -7873.3975 8569.627 c
-7873.3545 8569.668 -7873.3335 8569.71 -7873.3335 8569.752 c
-7873.3335 8569.7949 -7873.3545 8569.8145 -7873.4175 8569.8145 c
-7873.6694 8569.8145 -7875.6519 8568.7822 -7875.6519 8567.0527 c
-7875.6519 8566.6318 -7875.4209 8565.8301 -7874.7666 8565.8301 c
-7872.2998 8565.8301 -7868.1675 8569.6895 -7868.1675 8574.1377 c
-7868.1675 8574.5176 -7868.3984 8575.0664 -7868.4614 8575.4453 c
-7868.4834 8575.4668 -7868.4834 8575.5088 -7868.4834 8575.5498 c
-7868.4834 8575.6768 -7868.4399 8575.8457 -7868.3145 8575.8457 c
-7868.0615 8575.8457 -7866.3955 8575.6563 -7866.0366 8575.6563 c
-7864.3926 8575.6563 -7863.9702 8575.6563 -7863.9702 8576.752 c
-7863.9702 8577.9756 -7865.1094 8578.293 -7865.5098 8578.293 c
-7865.8896 8578.293 -7866.2695 8577.9961 -7866.2695 8577.6377 c
-7866.2695 8577.5322 -7866.0791 8577.0898 -7866.0791 8577.0059 c
-7866.0791 8576.8584 -7866.2065 8576.7744 -7866.3325 8576.7744 c
-7866.4795 8576.7744 -7866.9858 8577.2793 -7867.1338 8577.2793 c
-7867.3862 8577.2793 -7867.6401 8577.1533 -7867.8081 8577.0059 c
f
*U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 7)0 A
u
1 Ap
0 D
0 J 0 j 1 w 4 M []0 d0 XR
-7867 8587 m
-7885 8587 L
-7885 8569 L
-7867 8569 L
-7867 8587 L
n
u
0 Ap
0 O
0 0 0 1 k
-7867 8578 m
-7874.8379 8573.4746 L
-7874.8379 8576.5625 L
-7885 8576.5625 L
-7885 8579.4375 L
-7874.8379 8579.4375 L
-7874.8379 8582.5264 L
-7867 8578 L
f
0.15 1 0.9 0.1 k
-7871.2939 8576.3857 m
-7874.0879 8574.7744 L
-7874.0879 8577.3008 L
-7885 8577.3008 L
-7885 8578.7002 L
-7874.0879 8578.7002 L
-7874.0879 8581.2266 L
-7871.2939 8579.6133 L
-7868.5 8578 L
-7871.2939 8576.3857 L
f
0 1 1 0 k
-7873.1675 8577.0918 m
-7873.5586 8577.0918 -7873.8896 8577.3408 -7874.0176 8577.6865 C
-7885 8577.6865 L
-7885 8578.3125 L
-7874.0176 8578.3125 L
-7873.8896 8578.6602 -7873.5586 8578.9082 -7873.1675 8578.9082 c
-7872.6655 8578.9082 -7872.2588 8578.502 -7872.2588 8578 c
-7872.2588 8577.499 -7872.6655 8577.0918 -7873.1675 8577.0918 c
f
U
U
%AI8_EndBrushPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Brush Manager Order)
(Adobe Brush Manager Order)
( Adobe Calligraphic Brush Tool/ 2 pt. Oval/ Adobe Calligraphic) -
( Brush Tool/ 5 pt. Oval/ Adobe Calligraphic Brush Tool/ 5 pt. ) -
(Flat/ Adobe Calligraphic Brush Tool/ 3 pt. Round/ Adobe Callig) -
(raphic Brush Tool/ 7 pt. Round/ Adobe Calligraphic Brush Tool/) -
( 15 pt. Round/ Adobe ArtOnPath Brush Tool/ Charcoal/ Adobe Art) -
(OnPath Brush Tool/ Tapered Stroke/ Adobe ArtOnPath Brush Tool/) -
( Floral Spoke/ Adobe PatternOnPath Brush Tool/ Red Arrow Brush) -
(/ Adobe PatternOnPath Brush Tool/ Gothic/) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(15 pt. Round)
(1 15 15 100 100 15 15 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(2 pt. Oval)
(1 2 2 26 74 15 15 0 1 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(3 pt. Round)
(1 3 3 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(5 pt. Flat)
(1 5 5 0 0 90 90 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(5 pt. Oval)
(1 5 5 10 90 -65 35 0 1 1 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(7 pt. Round)
(1 7 7 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Charcoal)
(1 / Unnamed Brush Pat 4/ / / / / 0 1 /  1 1 1.2 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Floral Spoke)
(1 / Unnamed Brush Pat 12/ / / / / 0 1 /  1 1 1 0 1 0 0 1) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Tapered Stroke)
(1 / Unnamed 20/ / / / / 0 1 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(Gothic)
(1 / Unnamed Brush Pat 55/ Unnamed Brush Pat 57/ Unnamed Brush ) -
(Pat 56/ / / 5 0.717647 0.556863 0.176471 /  1 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(Red Arrow Brush)
(1 / Unnamed Brush Pat 3/ Unnamed Brush Pat 5/ Unnamed Brush Pa) -
(t 5/ Unnamed Brush Pat 7/ Unnamed Brush Pat 2/ 5 0.00392157 0.) -
(00392157 0.00784314 /  1 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([Registration]) 0 Xs
([Registration])
Pc
0 0 0 0 k
(White)
Pc
0 0 0 1 k
(Black)
Pc
0 1 1 0 k
(CMYK Red)
Pc
0 0 1 0 k
(CMYK Yellow)
Pc
1 0 1 0 k
(CMYK Green)
Pc
1 0 0 0 k
(CMYK Cyan)
Pc
1 1 0 0 k
(CMYK Blue)
Pc
0 1 0 0 k
(CMYK Magenta)
Pc
0.15 1 0.9 0.1 k
(C=15 M=100 Y=90 K=10)
Pc
0 0.9 0.85 0 k
(C=0 M=90 Y=85 K=0)
Pc
0 0.8 0.95 0 k
(C=0 M=80 Y=95 K=0)
Pc
0 0.5 1 0 k
(C=0 M=50 Y=100 K=0)
Pc
0 0.35 0.85 0 k
(C=0 M=35 Y=85 K=0)
Pc
0.05 0 0.9 0 k
(C=5 M=0 Y=90 K=0)
Pc
0.2 0 1 0 k
(C=20 M=0 Y=100 K=0)
Pc
0.5 0 1 0 k
(C=50 M=0 Y=100 K=0)
Pc
0.75 0 1 0 k
(C=75 M=0 Y=100 K=0)
Pc
0.85 0.1 1 0.1 k
(C=85 M=10 Y=100 K=10)
Pc
0.9 0.3 0.95 0.3 k
(C=90 M=30 Y=95 K=30)
Pc
0.75 0 0.75 0 k
(C=75 M=0 Y=75 K=0)
Pc
0.8 0.1 0.45 0 k
(C=80 M=10 Y=45 K=0)
Pc
0.7 0.15 0 0 k
(C=70 M=15 Y=0 K=0)
Pc
0.85 0.5 0 0 k
(C=85 M=50 Y=0 K=0)
Pc
1 0.95 0.05 0 k
(C=100 M=95 Y=5 K=0)
Pc
1 1 0.25 0.25 k
(C=100 M=100 Y=25 K=25)
Pc
0.75 1 0 0 k
(C=75 M=100 Y=0 K=0)
Pc
0.5 1 0 0 k
(C=50 M=100 Y=0 K=0)
Pc
0.35 1 0.35 0.1 k
(C=35 M=100 Y=35 K=10)
Pc
0.1 1 0.5 0 k
(C=10 M=100 Y=50 K=0)
Pc
0 0.95 0.2 0 k
(C=0 M=95 Y=20 K=0)
Pc
0.25 0.25 0.4 0 k
(C=25 M=25 Y=40 K=0)
Pc
0.4 0.45 0.5 0.05 k
(C=40 M=45 Y=50 K=5)
Pc
0.5 0.5 0.6 0.25 k
(C=50 M=50 Y=60 K=25)
Pc
0.55 0.6 0.65 0.4 k
(C=55 M=60 Y=65 K=40)
Pc
0.25 0.4 0.65 0 k
(C=25 M=40 Y=65 K=0)
Pc
0.3 0.5 0.75 0.1 k
(C=30 M=50 Y=75 K=10)
Pc
0.35 0.6 0.8 0.25 k
(C=35 M=60 Y=80 K=25)
Pc
0.4 0.65 0.9 0.35 k
(C=40 M=65 Y=90 K=35)
Pc
0.4 0.7 1 0.5 k
(C=40 M=70 Y=100 K=50)
Pc
0.5 0.7 0.8 0.7 k
(C=50 M=70 Y=80 K=70)
Pc
Bb
2 (Linear Gradient) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Linear Gradient)
Pc
Bb
2 (Fade to Black) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Fade to Black)
Pc
Bb
0 0 0 0 Bh
2 (Radial Gradient) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Radial Gradient)
Pc
Bb
0 0 0 0 Bh
2 (Soft Black Vignette) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Soft Black Vignette)
Pc
Bb
2 (Desert Sunset) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Desert Sunset)
Pc
Bb
0 0 0 0 Bh
2 (Copper Radial) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Copper Radial)
Pc
(Fish Pattern) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Fish Pattern)
Pc
(New Pattern) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(New Pattern)
Pc
(New Pattern1) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(New Pattern1)
Pc
0 0 0 1 k
(C=0 M=0 Y=0 K=100)
Pc
0 0 0 0.899994 k
(C=0 M=0 Y=0 K=90)
Pc
0 0 0 0.799988 k
(C=0 M=0 Y=0 K=80)
Pc
0 0 0 0.699997 k
(C=0 M=0 Y=0 K=70)
Pc
0 0 0 0.599991 k
(C=0 M=0 Y=0 K=60)
Pc
0 0 0 0.5 k
(C=0 M=0 Y=0 K=50)
Pc
0 0 0 0.399994 k
(C=0 M=0 Y=0 K=40)
Pc
0 0 0 0.299988 k
(C=0 M=0 Y=0 K=30)
Pc
0 0 0 0.199997 k
(C=0 M=0 Y=0 K=20)
Pc
0 0 0 0.099991 k
(C=0 M=0 Y=0 K=10)
Pc
0 0 0 0.049988 k
(C=0 M=0 Y=0 K=5)
Pc
0 1 1 0 k
(C=0 M=100 Y=100 K=0)
Pc
0 0.75 1 0 k
(C=0 M=75 Y=100 K=0)
Pc
0 0.1 0.95 0 k
(C=0 M=10 Y=95 K=0)
Pc
0.85 0.1 1 0 k
(C=85 M=10 Y=100 K=0)
Pc
1 0.9 0 0 k
(C=100 M=90 Y=0 K=0)
Pc
0.6 0.9 0.000031 0.000031 k
(C=60 M=90 Y=0 K=0)
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 7 128 128 128 0 50 Lb
(Layer 8) Ln
0 A
1 Ap
0 O
0.03 0.03 0.05 0.03 k
0 J 0 j 1 w 4 M []0 d0 XR
555.2422 261.752 m
55.2422 261.752 L
55.2422 761.7515 L
555.2422 761.7515 L
555.2422 261.752 L
f
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 1 8 0 0 0 0 50 Lb
(Layer 9) Ln
0 A
0 Ap
0 O
0.6 0.340673 0.309819 0.153262 k
0 J 0 j 1 w 4 M []0 d0 XR
146.001 518.9556 m
152.0361 525.8452 162.688 531.0361 175.5659 531.4106 c
162.688 531.0361 152.0361 525.8452 146.001 518.9556 c
f
155.3145 538.2349 m
142.6553 538.1987 132.5479 534.3071 126.0273 527.7378 c
132.5479 534.3071 142.6553 538.1987 155.3145 538.2349 c
f
120.8857 520.6123 m
121.1787 521.1958 121.4922 521.7676 121.8252 522.3271 c
121.4922 521.7676 121.1787 521.1958 120.8857 520.6123 c
f
121.8252 522.3271 m
122.1582 522.8872 122.5112 523.4341 122.8828 523.9692 c
122.5112 523.4341 122.1582 522.8872 121.8252 522.3271 c
f
145.0869 517.854 m
144.5034 517.1108 143.9727 516.3511 143.4971 515.5776 c
143.9727 516.3511 144.5034 517.1108 145.0869 517.854 c
f
124.6855 526.2896 m
125.1143 526.7856 125.5615 527.2686 126.0273 527.7378 c
125.5615 527.2686 125.1143 526.7856 124.6855 526.2896 c
f
192.8379 529.0898 m
192.8379 529.0903 L
187.5586 530.6499 182.4453 531.3774 177.6172 531.4297 c
182.4458 531.3774 187.5591 530.6499 192.8379 529.0898 C
f
122.8828 523.9692 m
123.2549 524.5039 123.646 525.0264 124.0562 525.5356 c
123.646 525.0264 123.2549 524.5039 122.8828 523.9692 c
f
84.6436 549.2837 m
55.9297 547.437 66.1572 590.5942 55.2422 601.8823 C
55.2422 548.4985 L
66.1064 544.8257 77.5532 544.8291 84.6436 549.2837 C
f
485.7061 511.0898 m
473.7061 517.0898 458.1016 521.9458 455.3721 508.0898 c
451.4941 488.4067 498.5391 508.23 513.4336 460.8433 C
511.7344 486.5898 497.9121 504.9868 485.7061 511.0898 c
f
493.5391 525.0469 m
495.2383 508.0288 506.0391 493.5898 521.5391 486.5898 C
501.5391 501.0898 540.0391 522.4575 532.5391 544.0898 c
523.084 571.3589 490.5391 555.0879 493.5391 525.0469 c
f
475.6563 521.9458 m
467.1816 528.3794 454.916 548.6128 459.8145 561.5342 c
466.4688 579.0898 482.4707 578.6455 486.5391 572.3018 c
498.5391 553.5898 524.0391 568.5898 518.1387 592.7388 c
515.0391 605.4287 498.8877 619.1919 472.0811 613.2539 c
444.252 607.0898 417.5391 552.1528 475.6563 521.9458 C
f
479.9141 564.5898 m
458.4141 564.0898 470.0947 522.2959 487.0391 516.5898 C
477.5391 526.0898 480.6611 534.5806 485.5391 545.5898 c
491.0391 558.0024 489.4141 564.5898 479.9141 564.5898 c
f
420.5391 595.0898 m
400.5391 595.2466 401.0391 569.5898 408.0391 557.5898 C
414.6045 545.335 430.3643 535.7622 444.252 530.8833 C
435.5391 540.5898 434.9727 551.6035 433.5391 562.5898 c
432.0391 576.0898 436.8867 594.9614 420.5391 595.0898 c
f
553.291 603.4204 m
533.043 615.4194 518.1973 590.7417 530.0693 568.3115 c
535.0938 558.8188 544.9043 551.9937 555.2422 548.4985 C
555.2422 601.8828 L
554.6553 602.4897 554.0098 603.0098 553.291 603.4204 c
f
403.6426 502.0898 m
409.0879 490.9785 423.6934 501.7007 433.75 510.7563 c
441.9023 518.0981 451.9668 521.0874 465.0391 521.9458 C
442.8379 532.562 393.8633 522.0479 403.6426 502.0898 c
f
429.0391 499.4233 m
427.3721 496.7563 427.0391 489.7563 431.0391 488.7563 C
434.7061 487.4233 437.7061 492.4233 439.0391 495.0898 C
441.1348 498.8618 447.0391 511.7515 455.1465 514.6045 C
442.8379 513.0898 431.3809 507.0898 429.0391 499.4233 C
f
218.9941 368.9824 m
229.7012 373.9668 239.6426 380.3457 246.3506 392.9102 c
254.4492 408.0811 251.8438 439.687 231.5039 440.9585 c
209.8379 442.313 208.8379 423.8911 217.1709 412.5127 c
223.1709 404.6563 227.0391 396.4316 226.0391 386.6787 c
225.4961 381.6055 223.627 373.6611 218.9941 368.9824 C
f
205.3721 508.0898 m
201.4941 488.4067 248.5391 508.23 263.4336 460.8433 C
261.7344 486.5898 247.9121 504.9868 235.7061 511.0898 c
223.7061 517.0898 208.1016 521.9458 205.3721 508.0898 c
f
243.5391 525.0469 m
245.2383 508.0288 256.0391 493.5898 271.5391 486.5898 C
251.5391 501.0898 290.0391 522.4575 282.5391 544.0898 c
273.084 571.3589 240.5391 555.0879 243.5391 525.0469 c
f
225.6563 521.9458 m
217.1816 528.3794 204.916 548.6128 209.8145 561.5342 c
216.4688 579.0898 232.4707 578.6455 236.5391 572.3018 c
248.5391 553.5898 274.0391 568.5898 268.1387 592.7388 c
265.0391 605.4287 248.8877 619.1919 222.0811 613.2539 c
194.252 607.0898 167.5391 552.1528 225.6563 521.9458 C
f
229.9141 564.5898 m
208.4141 564.0898 220.0947 522.2959 237.0391 516.5898 C
227.5391 526.0898 230.6611 534.5806 235.5391 545.5898 c
241.0391 558.0024 239.4141 564.5898 229.9141 564.5898 c
f
170.5391 595.0898 m
150.5391 595.2466 151.0391 569.5898 158.0391 557.5898 C
164.6045 545.335 180.3643 535.7622 194.252 530.8833 C
185.5391 540.5898 184.9722 551.6035 183.5391 562.5898 c
182.0391 576.0898 186.8867 594.9614 170.5391 595.0898 c
f
192.8379 529.0898 m
178.8901 535.4648 166.165 538.2661 155.3145 538.2349 c
166.165 538.2661 178.8896 535.4648 192.8379 529.0903 C
192.8379 529.0898 L
f
124.6855 526.2896 m
124.4707 526.0415 124.2612 525.79 124.0562 525.5356 c
123.646 525.0264 123.2549 524.5039 122.8828 523.9692 c
122.5112 523.4341 122.1582 522.8872 121.8252 522.3271 c
121.4922 521.7676 121.1787 521.1958 120.8857 520.6123 c
120.4453 519.7368 120.0498 518.8354 119.7012 517.9087 c
113.3682 501.0903 132.6455 492.1123 142.2393 513.2202 c
142.6016 514.0171 143.0215 514.8042 143.4971 515.5776 c
143.9727 516.3511 144.5034 517.1108 145.0869 517.854 c
145.3789 518.2256 145.6836 518.5933 146.001 518.9556 c
152.0361 525.8452 162.688 531.0361 175.5659 531.4106 c
176.2437 531.4307 176.9277 531.437 177.6172 531.4297 c
182.4453 531.3774 187.5586 530.6499 192.8379 529.0903 C
178.8896 535.4648 166.165 538.2661 155.3145 538.2349 c
142.6553 538.1987 132.5479 534.3071 126.0273 527.7378 c
125.5615 527.2686 125.1143 526.7856 124.6855 526.2896 c
f
392.2393 513.2202 m
398.0322 525.9658 418.7061 536.2207 442.8379 529.0898 C
405.6436 546.0898 377.1445 537.6763 369.7012 517.9087 c
363.3682 501.0903 382.6455 492.1123 392.2393 513.2202 c
f
377.8379 602.2754 m
361.7227 601.1387 364.666 575.105 372.5918 565.5947 c
383.6924 552.2739 398.6943 546.8418 409.667 546.835 C
389.7324 559.002 403.7861 604.106 377.8379 602.2754 c
f
377.8379 352.2754 m
361.7227 351.1387 364.666 325.1055 372.5918 315.5947 c
383.6924 302.2734 398.6943 296.8418 409.667 296.835 C
389.7324 309.002 403.7861 354.1055 377.8379 352.2754 c
f
127.8379 602.2754 m
111.7227 601.1387 114.666 575.105 122.5918 565.5947 c
133.6924 552.2739 148.6943 546.8418 159.667 546.835 C
139.7324 559.002 153.7861 604.106 127.8379 602.2754 c
f
127.8379 352.2754 m
111.7227 351.1387 114.666 325.1055 122.5918 315.5947 c
133.6924 302.2734 148.6943 296.8418 159.667 296.835 C
139.7324 309.002 153.7861 354.1055 127.8379 352.2754 c
f
280.0693 568.3115 m
290.373 548.8433 320.8057 540.5898 334.6436 549.2837 C
304.3848 547.3374 317.374 595.3735 303.291 603.4204 c
283.043 615.4194 268.1973 590.7417 280.0693 568.3115 c
f
153.6431 502.0898 m
159.0879 490.9785 173.6934 501.7007 183.75 510.7563 c
191.9023 518.0981 201.9668 521.0874 215.0391 521.9458 C
192.8379 532.562 143.8628 522.0479 153.6431 502.0898 c
f
179.0391 499.4233 m
177.3721 496.7563 177.0391 489.7563 181.0391 488.7563 C
184.7061 487.4233 187.7061 492.4233 189.0391 495.0898 C
191.1348 498.8618 197.0391 511.7515 205.1465 514.6045 C
192.8379 513.0898 181.3809 507.0898 179.0391 499.4233 C
f
107.8828 650.1978 m
108.5908 650.0376 109.2998 649.8774 110.0225 649.7007 c
109.2891 649.8911 108.5806 650.0508 107.8828 650.1978 c
f
513.4336 710.8433 m
511.7344 736.5898 497.9121 754.9868 485.7061 761.0898 c
485.2607 761.3125 484.8086 761.5327 484.3535 761.7515 C
456.5967 761.7515 L
456.0684 760.71 455.6504 759.5015 455.3721 758.0898 c
451.4941 738.4067 498.5391 758.23 513.4336 710.8433 C
f
521.5391 736.5898 m
511.8486 743.6152 515.8916 752.2529 521.7813 761.7515 C
496.8945 761.7515 L
501.5078 750.6826 510.2822 741.6733 521.5391 736.5898 C
f
403.6426 752.0898 m
409.0879 740.9785 423.6934 751.7007 433.75 760.7563 c
434.1328 761.1011 434.5234 761.4263 434.9141 761.7515 C
403.5146 761.7515 L
402.0293 758.8711 401.9082 755.6299 403.6426 752.0898 c
f
429.0391 749.4233 m
427.3721 746.7563 427.0391 739.7563 431.0391 738.7563 C
434.7061 737.4233 437.7061 742.4233 439.0391 745.0898 C
440.7061 748.0903 444.7832 756.8535 450.4609 761.7515 C
443.5732 761.7515 L
436.2891 758.9595 430.6104 754.5679 429.0391 749.4233 C
f
263.4336 710.8433 m
261.7344 736.5898 247.9121 754.9868 235.7061 761.0898 c
235.2598 761.3125 234.8086 761.5327 234.3535 761.7515 C
206.5967 761.7515 L
206.0684 760.71 205.6504 759.5015 205.3721 758.0898 c
201.4941 738.4067 248.5391 758.23 263.4336 710.8433 C
f
271.5391 736.5898 m
261.8486 743.6152 265.8916 752.2529 271.7813 761.7515 C
246.8945 761.7515 L
251.5088 750.6826 260.2822 741.6733 271.5391 736.5898 C
f
141.5273 761.7515 m
118.4551 761.7515 L
118.2646 749.6021 133.0454 745.1333 141.5273 761.7515 C
f
391.5273 761.7515 m
368.4551 761.7515 L
368.2637 749.6021 383.0449 745.1333 391.5273 761.7515 C
f
357.8828 650.1978 m
358.5908 650.0376 359.2998 649.8774 360.0225 649.7007 c
359.2891 649.8911 358.5801 650.0508 357.8828 650.1978 c
f
153.6431 752.0898 m
159.0879 740.9785 173.6934 751.7007 183.75 760.7563 c
184.1323 761.1011 184.5234 761.4263 184.9141 761.7515 C
153.5146 761.7515 L
152.0293 758.8711 151.9082 755.6299 153.6431 752.0898 c
f
179.0391 749.4233 m
177.3721 746.7563 177.0391 739.7563 181.0391 738.7563 C
184.7061 737.4233 187.7061 742.4233 189.0391 745.0898 C
190.7061 748.0903 194.7842 756.8535 200.4609 761.7515 C
193.5742 761.7515 L
186.29 758.9595 180.6104 754.5679 179.0391 749.4233 C
f
126.0273 277.7383 m
132.5479 284.3066 142.6553 288.1973 155.3145 288.2344 c
142.6553 288.1973 132.5479 284.3066 126.0273 277.7383 c
f
122.8828 273.9688 m
123.2549 274.5039 123.646 275.0254 124.0562 275.5352 c
123.646 275.0254 123.2549 274.5039 122.8828 273.9688 c
f
121.8252 272.3262 m
122.1582 272.8867 122.5112 273.4336 122.8828 273.9688 c
122.5112 273.4336 122.1582 272.8867 121.8252 272.3262 c
f
192.8379 279.0898 m
192.8379 279.0898 L
187.5586 280.6504 182.4453 281.377 177.6172 281.4297 c
182.4458 281.377 187.5591 280.6504 192.8379 279.0898 C
f
124.6855 276.2891 m
125.1143 276.7852 125.5615 277.2676 126.0273 277.7383 c
125.5615 277.2676 125.1143 276.7852 124.6855 276.2891 c
f
145.0869 267.8535 m
144.5034 267.1113 143.9727 266.3516 143.4971 265.5781 c
143.9727 266.3516 144.5034 267.1113 145.0869 267.8535 c
f
120.8857 270.6133 m
121.1787 271.1953 121.4922 271.7676 121.8252 272.3262 c
121.4922 271.7676 121.1787 271.1953 120.8857 270.6133 c
f
146.001 268.9551 m
152.0361 275.8457 162.688 281.0352 175.5659 281.4102 c
162.688 281.0352 152.0361 275.8457 146.001 268.9551 c
f
84.6436 299.2832 m
55.9297 297.4375 66.1572 340.5938 55.2422 351.8828 C
55.2422 298.498 L
66.1064 294.8242 77.5532 294.8281 84.6436 299.2832 C
f
99.5396 261.752 m
110.1475 261.752 L
106.9668 265.998 102.8179 265.0801 99.5396 261.752 C
f
456.5957 261.752 m
484.3545 261.752 L
473.8115 266.8223 461.0586 270.5547 456.5957 261.752 C
f
532.5391 294.0898 m
523.084 321.3594 490.5391 305.0879 493.5391 275.0469 c
494.0039 270.3867 495.1563 265.9238 496.8945 261.752 C
521.7813 261.752 L
528.0479 271.8574 536.4053 282.9395 532.5391 294.0898 c
f
472.0811 363.2539 m
444.252 357.0898 417.5391 302.1523 475.6563 271.9453 C
467.1816 278.3789 454.916 298.6133 459.8145 311.5332 c
466.4688 329.0898 482.4707 328.6455 486.5391 322.3018 c
498.5391 303.5898 524.0391 318.5898 518.1387 342.7383 c
515.0391 355.4287 498.8877 369.1914 472.0811 363.2539 c
f
479.9141 314.5898 m
458.4141 314.0898 470.0947 272.2949 487.0391 266.5898 C
477.5391 276.0898 480.6611 284.5801 485.5391 295.5898 c
491.0391 308.002 489.4141 314.5898 479.9141 314.5898 c
f
420.5391 345.0898 m
400.5391 345.2471 401.0391 319.5898 408.0391 307.5898 C
414.6045 295.334 430.3643 285.7617 444.252 280.8828 C
435.5391 290.5898 434.9727 301.6035 433.5391 312.5898 c
432.0391 326.0898 436.8867 344.9609 420.5391 345.0898 c
f
553.291 353.4199 m
533.043 365.4199 518.1973 340.7422 530.0693 318.3115 c
535.0938 308.8184 544.9043 301.9941 555.2422 298.498 C
555.2422 351.8828 L
554.6553 352.4902 554.0098 353.0098 553.291 353.4199 c
f
403.5137 261.752 m
434.9141 261.752 L
442.8574 268.3633 452.5791 271.127 465.0391 271.9453 C
446.7754 280.6777 410.4014 275.1113 403.5137 261.752 C
f
443.5723 261.752 m
450.4609 261.752 L
451.9219 263.0117 453.4863 264.0195 455.1465 264.6035 C
451.0977 264.1055 447.1426 263.1191 443.5723 261.752 C
f
206.5967 261.752 m
234.3545 261.752 L
223.8115 266.8223 211.0586 270.5547 206.5967 261.752 C
f
282.5391 294.0898 m
273.084 321.3594 240.5391 305.0879 243.5391 275.0469 c
244.0039 270.3867 245.1563 265.9238 246.8945 261.752 C
271.7813 261.752 L
278.0479 271.8574 286.4053 282.9395 282.5391 294.0898 c
f
222.0811 363.2539 m
194.252 357.0898 167.5391 302.1523 225.6563 271.9453 C
217.1816 278.3789 204.916 298.6133 209.8145 311.5332 c
216.4688 329.0898 232.4707 328.6455 236.5391 322.3018 c
248.5391 303.5898 274.0391 318.5898 268.1387 342.7383 c
265.0391 355.4287 248.8877 369.1914 222.0811 363.2539 c
f
229.9141 314.5898 m
208.4141 314.0898 220.0947 272.2949 237.0391 266.5898 C
227.5391 276.0898 230.6611 284.5801 235.5391 295.5898 c
241.0391 308.002 239.4141 314.5898 229.9141 314.5898 c
f
170.5391 345.0898 m
150.5391 345.2471 151.0391 319.5898 158.0391 307.5898 C
164.6045 295.334 180.3643 285.7617 194.252 280.8828 C
185.5391 290.5898 184.9722 301.6035 183.5391 312.5898 c
182.0391 326.0898 186.8867 344.9609 170.5391 345.0898 c
f
192.8379 279.0898 m
178.8901 285.4648 166.165 288.2656 155.3145 288.2344 c
166.165 288.2656 178.8896 285.4648 192.8379 279.0898 C
192.8379 279.0898 L
f
143.4971 265.5781 m
143.9727 266.3516 144.5034 267.1113 145.0869 267.8535 c
145.3789 268.2266 145.6836 268.5938 146.001 268.9551 c
152.0361 275.8457 162.688 281.0352 175.5659 281.4102 c
176.2437 281.4297 176.9277 281.4375 177.6172 281.4297 c
182.4453 281.377 187.5586 280.6504 192.8379 279.0898 C
178.8896 285.4648 166.165 288.2656 155.3145 288.2344 c
142.6553 288.1973 132.5479 284.3066 126.0273 277.7383 c
125.5615 277.2676 125.1143 276.7852 124.6855 276.2891 c
124.4707 276.041 124.2612 275.7891 124.0562 275.5352 c
123.646 275.0254 123.2549 274.5039 122.8828 273.9688 c
122.5112 273.4336 122.1582 272.8867 121.8252 272.3262 c
121.4922 271.7676 121.1787 271.1953 120.8857 270.6133 c
120.4453 269.7363 120.0498 268.8359 119.7012 267.9082 c
118.8711 265.7051 118.4844 263.6367 118.4551 261.752 C
141.5273 261.752 L
141.7695 262.2246 142.0078 262.7109 142.2393 263.2207 c
142.6016 264.0176 143.0215 264.8047 143.4971 265.5781 c
f
442.8379 279.0898 m
405.6436 296.0898 377.1445 287.6758 369.7012 267.9082 c
368.8711 265.7051 368.4844 263.6367 368.4551 261.752 C
391.5273 261.752 L
391.7695 262.2246 392.0078 262.7109 392.2393 263.2207 c
398.0322 275.9648 418.7061 286.2207 442.8379 279.0898 C
f
303.291 353.4199 m
283.043 365.4199 268.1973 340.7422 280.0693 318.3115 c
290.373 298.8418 320.8057 290.5898 334.6436 299.2832 C
304.3848 297.3379 317.374 345.373 303.291 353.4199 c
f
349.5391 261.752 m
360.1475 261.752 L
356.9668 265.998 352.8184 265.0801 349.5391 261.752 C
f
153.5146 261.752 m
184.9136 261.752 L
192.8564 268.3633 202.5791 271.127 215.0391 271.9453 C
196.7754 280.6777 160.4014 275.1113 153.5146 261.752 C
f
193.5732 261.752 m
200.4609 261.752 L
201.9219 263.0117 203.4863 264.0195 205.1465 264.6035 C
201.0977 264.1055 197.1436 263.1191 193.5732 261.752 C
f
250.623 386.0303 m
266.667 411.2031 261.4434 436.2339 252.6641 443.5547 c
244.7061 450.1919 231.2949 452.8311 216.3496 443.5547 c
197.0166 431.5552 183.3008 440.9507 181.3809 454.4683 c
179.8916 464.9585 182.7764 472.6689 190.0039 479.1504 c
202.5391 490.3911 217.5195 491.0083 231.4746 486.5898 c
261.4355 476.3286 282.8145 423.2944 250.623 386.0303 C
f
u
329.207 530.2598 m
319.207 511.7598 325.9121 490.9243 347.0391 489.1436 c
354.0137 488.5557 368.6484 498.1465 362.2383 516.5898 c
353.7568 540.9907 377.0742 545.0474 396.5156 543.0088 C
370.7051 558.0024 341.1865 551.915 329.207 530.2598 c
f
U
296.0625 510.293 m
282.8145 505.064 271.7813 494.6465 269.9072 472.5898 c
267.8574 448.4644 271.7813 432.8843 273.8096 421.8579 C
275.0303 441.0288 273.4941 454.8374 283.5225 468.7544 c
295.7734 485.7544 313.7188 478.1953 317.8057 497.3491 c
320.666 510.7563 301.2002 512.3208 296.0625 510.293 c
f
u
291.5391 457.438 m
286.0391 460.938 280.9648 449.3188 279.9648 445.3188 C
279.1387 441.1899 275.8418 429.0293 278.4082 416.0898 C
279.9648 429.0293 283.6631 437.562 286.5391 440.438 c
289.0391 442.938 298.5391 453.438 291.5391 457.438 C
f
U
u
290.373 529.0898 m
286.373 518.5898 296.0625 514.6045 308.0391 519.0898 c
317.498 522.6328 324.9043 531.7827 328.6016 540.2803 C
316.2168 533.7285 293.6992 538.2349 290.373 529.0898 c
f
U
481.5039 440.9585 m
459.8379 442.313 458.8379 423.8911 467.1709 412.5127 c
473.1709 404.6563 477.0391 396.4316 476.0391 386.6787 c
475.4961 381.6055 473.627 373.6611 468.9941 368.9824 C
479.7012 373.9668 489.6426 380.3457 496.3506 392.9102 c
504.4492 408.0811 501.8438 439.687 481.5039 440.9585 c
f
466.3496 443.5547 m
481.2949 452.8311 494.7061 450.1919 502.6641 443.5547 c
511.4434 436.2339 516.667 411.2031 500.623 386.0303 C
532.8145 423.2944 511.4355 476.3286 481.4746 486.5898 c
467.5195 491.0083 452.5391 490.3911 440.0039 479.1504 c
432.7764 472.6689 429.8916 464.9585 431.3809 454.4683 c
433.3008 440.9507 447.0166 431.5552 466.3496 443.5547 c
f
546.0625 510.293 m
532.8145 505.064 521.7813 494.6465 519.9072 472.5898 c
517.8574 448.4644 521.7813 432.8843 523.8096 421.8579 C
525.0303 441.0288 523.4941 454.8374 533.5225 468.7544 c
540.1289 477.9214 548.3906 479.9478 555.2422 482.8716 C
555.2422 510.7339 L
551.4727 511.2754 547.875 511.0083 546.0625 510.293 c
f
536.5391 440.438 m
539.0391 442.938 548.5391 453.438 541.5391 457.438 C
536.0391 460.938 530.9648 449.3188 529.9648 445.3188 C
529.1387 441.1899 525.8418 429.0293 528.4082 416.0898 C
529.9648 429.0293 533.6631 437.562 536.5391 440.438 c
f
540.373 529.0898 m
536.6904 519.4224 544.6152 515.2832 555.2422 518.188 C
555.2422 535.5605 L
548.0215 534.729 541.9736 533.4907 540.373 529.0898 c
f
79.207 530.2598 m
69.207 511.7598 75.9116 490.9243 97.0391 489.1436 c
104.0142 488.5557 118.6489 498.1465 112.2383 516.5898 c
103.7568 540.9907 127.0742 545.0474 146.5161 543.0088 C
120.7056 558.0024 91.1865 551.915 79.207 530.2598 c
f
67.8057 497.3491 m
69.6567 506.0259 62.1572 509.7412 55.2422 510.7339 C
55.2422 482.8721 L
61.0967 485.3706 65.9229 488.5239 67.8057 497.3491 c
f
78.6016 540.2803 m
72.1768 536.8813 63.0273 536.4575 55.2422 535.5605 C
55.2422 518.188 L
56.1572 518.438 57.0898 518.7344 58.0391 519.0898 c
67.4985 522.6328 74.9043 531.7827 78.6016 540.2803 C
f
468.9941 618.9819 m
479.7012 623.9673 489.6426 630.3457 496.3506 642.9102 c
504.4492 658.0811 501.8438 689.687 481.5039 690.9585 c
459.8379 692.313 458.8379 673.8911 467.1709 662.5127 c
473.1709 654.6563 477.0391 646.4316 476.0391 636.6787 c
475.4961 631.606 473.627 623.6611 468.9941 618.9819 C
f
466.3496 693.5547 m
481.2949 702.8311 494.7061 700.1919 502.6641 693.5547 c
511.4434 686.2339 516.667 661.2031 500.623 636.0303 C
532.8145 673.2944 511.4355 726.3286 481.4746 736.5898 c
467.5195 741.0083 452.5391 740.3911 440.0039 729.1504 c
432.7764 722.6689 429.8916 714.9585 431.3809 704.4683 c
433.3008 690.9507 447.0166 681.5552 466.3496 693.5547 c
f
546.0625 760.293 m
532.8145 755.064 521.7813 744.6465 519.9072 722.5898 c
517.8574 698.4644 521.7813 682.8843 523.8096 671.8579 C
525.0303 691.0288 523.4941 704.8374 533.5225 718.7544 c
540.1289 727.9214 548.3906 729.9478 555.2422 732.8721 C
555.2422 760.7344 L
551.4727 761.2754 547.875 761.0083 546.0625 760.293 c
f
536.5391 690.438 m
539.0391 692.938 548.5391 703.438 541.5391 707.438 C
536.0391 710.938 530.9648 699.3188 529.9648 695.3188 C
529.1387 691.1899 525.8418 679.0293 528.4082 666.0898 C
529.9648 679.0293 533.6631 687.562 536.5391 690.438 c
f
97.0391 739.1436 m
103.376 738.6094 116.0332 746.4775 113.4897 761.7515 C
74.7021 761.7515 L
75.3003 749.9761 82.9639 740.3301 97.0391 739.1436 c
f
67.8057 747.3491 m
69.6567 756.0259 62.1572 759.7412 55.2422 760.7339 C
55.2422 732.8721 L
61.0967 735.3706 65.9229 738.5244 67.8057 747.3491 c
f
218.9941 618.9819 m
229.7012 623.9673 239.6426 630.3457 246.3506 642.9102 c
254.4492 658.0811 251.8438 689.687 231.5039 690.9585 c
209.8379 692.313 208.8379 673.8911 217.1709 662.5127 c
223.1709 654.6563 227.0391 646.4316 226.0391 636.6787 c
225.4961 631.606 223.627 623.6611 218.9941 618.9819 C
f
216.3496 693.5547 m
231.2949 702.8311 244.7061 700.1919 252.6641 693.5547 c
261.4434 686.2339 266.667 661.2031 250.623 636.0303 C
282.8145 673.2944 261.4355 726.3286 231.4746 736.5898 c
217.5195 741.0083 202.5391 740.3911 190.0039 729.1504 c
182.7764 722.6689 179.8916 714.9585 181.3809 704.4683 c
183.3008 690.9507 197.0166 681.5552 216.3496 693.5547 c
f
347.0391 739.1436 m
353.376 738.6094 366.0332 746.4775 363.4902 761.7515 C
324.7021 761.7515 L
325.3008 749.9761 332.9639 740.3301 347.0391 739.1436 c
f
283.5225 718.7544 m
295.7734 735.7544 313.7188 728.1953 317.8057 747.3491 c
320.666 760.7563 301.2002 762.3208 296.0625 760.293 c
282.8145 755.064 271.7813 744.6465 269.9072 722.5898 c
267.8574 698.4644 271.7813 682.8843 273.8096 671.8579 C
275.0303 691.0288 273.4941 704.8374 283.5225 718.7544 c
f
291.5391 707.438 m
286.0391 710.938 280.9648 699.3188 279.9648 695.3188 C
279.1387 691.1899 275.8418 679.0293 278.4082 666.0898 C
279.9648 679.0293 283.6631 687.562 286.5391 690.438 c
289.0391 692.938 298.5391 703.438 291.5391 707.438 C
f
540.373 279.0898 m
536.6904 269.4219 544.6152 265.2832 555.2422 268.1875 C
555.2422 285.5605 L
548.0215 284.7285 541.9736 283.4902 540.373 279.0898 c
f
146.5161 293.0078 m
120.7056 308.002 91.1865 301.9141 79.207 280.2598 c
75.8691 274.084 74.4023 267.6523 74.7021 261.752 C
113.4897 261.752 L
113.2334 263.2891 112.8247 264.9023 112.2383 266.5898 c
103.7568 290.9902 127.0742 295.0469 146.5161 293.0078 C
f
78.6016 290.2793 m
72.1768 286.8809 63.0273 286.457 55.2422 285.5605 C
55.2422 268.1875 L
56.1572 268.4375 57.0898 268.7344 58.0391 269.0898 c
67.4985 272.6328 74.9043 281.7832 78.6016 290.2793 C
f
362.2383 266.5898 m
353.7568 290.9902 377.0742 295.0469 396.5156 293.0078 C
370.7051 308.002 341.1865 301.9141 329.207 280.2598 c
325.8691 274.084 324.4023 267.6523 324.7021 261.752 C
363.4902 261.752 L
363.2334 263.2891 362.8242 264.9023 362.2383 266.5898 c
f
290.373 279.0898 m
286.373 268.5898 296.0625 264.6035 308.0391 269.0898 c
317.498 272.6328 324.9043 281.7832 328.6016 290.2793 C
316.2168 283.7285 293.6992 288.2344 290.373 279.0898 c
f
321.7168 392.2832 m
344.627 399.7803 361.4219 401.8335 374.1182 393.585 c
388.5 384.2422 381.8857 370.5684 392.0381 361.6523 c
413.707 342.6221 438.3984 373.6133 418.6758 399.3809 c
395.5156 429.6343 341.5674 410.3813 321.7168 392.2832 C
f
318.0947 433.3823 m
311.1426 447.0112 293.3203 443.3452 284.8125 416.209 c
280.625 402.8501 273.623 393.79 260.123 384.2871 C
288.1563 386.0449 328.5391 412.9082 318.0947 433.3823 c
f
320.6387 387.0391 m
331.6836 388.1094 340.0625 377.9004 345.7813 371.8398 C
351.0078 363.8535 368.5713 357.3203 373.5322 367.8672 c
382.6914 387.3398 344.7891 400.8398 320.6387 387.0391 C
f
356.916 442.8267 m
356.7871 456.2808 353.4893 471.6587 341.5547 478.75 c
323.0439 489.75 298.2188 480.1885 301.8564 461.4165 c
304.7441 446.5186 314.1113 446.8521 323.0439 443.75 c
334.0762 439.9189 336.2627 429.9375 333.0332 418.4507 c
330.3525 408.9141 317.2988 398.3008 305.2422 393.2959 C
329.5879 397.9648 356.5166 413.7163 356.916 442.8267 c
f
385.3633 447.9565 m
391.9082 466.0981 382.7676 497.3491 363.3213 486.5898 c
356.4336 482.7788 357.8145 472.8169 363.0742 457.9888 c
367.2109 446.3267 370.041 429.4448 353.418 416.0879 C
359.9434 417.0527 378.0684 426.083 385.3633 447.9565 c
f
406.1016 491.7251 m
398.582 490.8599 394.9941 482.6812 395.25 473.0054 c
395.5381 462.0801 396.3984 449.395 390.7324 444.0215 C
432.2617 457.4712 423.4219 493.2676 406.1016 491.7251 c
f
372.3789 418.3384 m
391.1914 430.9043 424.9063 412.6553 431.3496 426.4673 c
438.1465 441.0366 403.6426 460.8433 372.3789 418.3384 C
f
431.3809 409.0581 m
424.4141 381.7871 455.1465 370.625 441.5059 347.1953 C
456.2461 362.0859 467.8965 379.0957 465.0391 396.5405 C
462.3281 426.771 438.0156 424.9688 431.3809 409.0581 C
f
280.5889 379.7949 m
298.2725 379.9277 317.4482 375.4141 325.6094 355.6084 c
332.6621 338.4932 323.8291 329.7686 327.1348 318.1934 c
331.8154 301.8066 355.2383 302.8984 359.377 320.6035 c
370.2646 367.1943 310.6973 393.9912 280.5889 379.7949 C
f
418.6758 649.3809 m
395.5156 679.6343 341.5674 660.3813 321.7168 642.2832 C
344.627 649.7803 361.4219 651.8335 374.1182 643.585 c
388.5 634.2417 381.8857 620.5679 392.0381 611.6528 c
413.707 592.6221 438.3984 623.6138 418.6758 649.3809 c
f
318.0947 683.3823 m
311.1426 697.0112 293.3203 693.3452 284.8125 666.209 c
280.625 652.8501 273.623 643.79 260.123 634.2876 C
288.1563 636.0444 328.5391 662.9082 318.0947 683.3823 c
f
345.7813 621.8398 m
351.0078 613.8535 368.5713 607.3208 373.5322 617.8672 c
382.6914 637.3398 344.7891 650.8398 320.6387 637.0386 C
331.6836 638.1089 340.0625 627.8999 345.7813 621.8398 C
f
323.0439 693.75 m
334.0762 689.9189 336.2627 679.9375 333.0332 668.4507 c
330.3525 658.9141 317.2988 648.3008 305.2422 643.2959 C
329.5879 647.9648 356.5166 663.7163 356.916 692.8267 c
356.7871 706.2808 353.4893 721.6587 341.5547 728.75 c
323.0439 739.75 298.2188 730.1885 301.8564 711.4165 c
304.7441 696.5186 314.1113 696.8521 323.0439 693.75 c
f
353.418 666.0879 m
359.9434 667.0527 378.0684 676.083 385.3633 697.9565 c
391.9082 716.0981 382.7676 747.3491 363.3213 736.5898 c
356.4336 732.7788 357.8145 722.8169 363.0742 707.9888 c
367.2109 696.3267 370.041 679.4448 353.418 666.0879 C
f
406.1016 741.7251 m
398.582 740.8599 394.9941 732.6812 395.25 723.0054 c
395.5381 712.0801 396.3984 699.395 390.7324 694.0215 C
432.2617 707.4712 423.4219 743.2676 406.1016 741.7251 c
f
372.3789 668.3384 m
391.1914 680.9043 424.9063 662.6553 431.3496 676.4673 c
438.1465 691.0366 403.6426 710.8433 372.3789 668.3384 C
f
431.3809 659.0581 m
424.4141 631.7876 455.1465 620.6245 441.5059 597.1958 C
456.2461 612.0854 467.8965 629.0952 465.0391 646.5405 C
462.3281 676.771 438.0156 674.9688 431.3809 659.0581 C
f
280.5889 629.7954 m
298.2725 629.9272 317.4482 625.4141 325.6094 605.6084 c
332.6621 588.4932 323.8291 579.7686 327.1348 568.1934 c
331.8154 551.8066 355.2383 552.8994 359.377 570.6035 c
370.2646 617.1943 310.6973 643.9912 280.5889 629.7954 C
f
534.8125 416.209 m
530.625 402.8501 523.623 393.79 510.123 384.2871 C
524.8008 385.207 542.8613 393.0117 555.2422 403.1772 C
555.2422 440.9663 L
547.9375 439.9063 539.7852 432.0669 534.8125 416.209 c
f
551.8564 461.4165 m
552.5967 457.5957 553.7656 454.7817 555.2422 452.6499 C
555.2422 475.4146 L
552.208 471.7607 550.7754 466.9956 551.8564 461.4165 c
f
530.5889 379.7949 m
538.9111 379.8574 547.5625 378.8887 555.2422 375.7842 C
555.2422 383.3018 L
546.2656 384.1895 537.623 383.1123 530.5889 379.7949 C
f
534.8125 666.209 m
530.625 652.8501 523.623 643.79 510.123 634.2876 C
524.8008 635.2075 542.8613 643.0122 555.2422 653.1772 C
555.2422 690.9663 L
547.9375 689.9063 539.7852 682.0669 534.8125 666.209 c
f
551.8564 711.4165 m
552.5967 707.5957 553.7656 704.7817 555.2422 702.6499 C
555.2422 725.4146 L
552.208 721.7607 550.7754 716.9956 551.8564 711.4165 c
f
530.5889 629.7954 m
538.9111 629.8574 547.5625 628.8892 555.2422 625.7837 C
555.2422 633.3018 L
546.2656 634.1899 537.623 633.1118 530.5889 629.7954 C
f
71.7173 392.2832 m
94.6265 399.7803 111.4224 401.8335 124.1182 393.585 c
138.4995 384.2422 131.8857 370.5684 142.0381 361.6523 c
163.7065 342.6221 188.3989 373.6133 168.6753 399.3809 c
145.5156 429.6343 91.5674 410.3813 71.7173 392.2832 C
f
68.0947 433.3823 m
65.2051 439.0464 60.4375 441.7202 55.2422 440.9663 C
55.2422 403.1772 L
66.5068 412.4258 73.0703 423.6284 68.0947 433.3823 c
f
70.6387 387.0391 m
81.6841 388.1094 90.063 377.9004 95.7808 371.8398 C
101.0083 363.8535 118.5713 357.3203 123.5322 367.8672 c
132.6919 387.3398 94.7891 400.8398 70.6387 387.0391 C
f
55.2422 393.2959 m
55.2422 393.2959 L
55.2422 393.2959 L
55.2422 393.2959 l
f
106.916 442.8267 m
106.7871 456.2808 103.4893 471.6587 91.5552 478.75 c
78.5454 486.481 62.417 484.0552 55.2422 475.4146 C
55.2422 452.6494 L
59.5225 446.4683 66.4023 446.0562 73.0439 443.75 c
84.0757 439.9189 86.2627 429.9375 83.0332 418.4507 c
80.3525 408.9141 67.2988 398.3008 55.2422 393.2959 C
55.2422 393.2959 L
79.5879 397.9648 106.5166 413.7163 106.916 442.8267 c
f
135.3633 447.9565 m
141.9087 466.0981 132.7671 497.3491 113.3213 486.5898 c
106.4336 482.7788 107.8149 472.8169 113.0747 457.9888 c
117.2109 446.3267 120.0405 429.4448 103.4185 416.0879 C
109.9429 417.0527 128.0679 426.083 135.3633 447.9565 c
f
156.1011 491.7251 m
148.5825 490.8599 144.9937 482.6812 145.2495 473.0054 c
145.5381 462.0801 146.3979 449.395 140.7329 444.0215 C
182.2617 457.4712 173.4214 493.2676 156.1011 491.7251 c
f
122.3789 418.3384 m
141.1919 430.9043 174.9067 412.6553 181.3491 426.4673 c
188.147 441.0366 153.6431 460.8433 122.3789 418.3384 C
f
181.3809 409.0581 m
174.4141 381.7871 205.1465 370.625 191.5063 347.1953 C
206.2461 362.0859 217.8965 379.0957 215.0391 396.5405 C
212.3281 426.771 188.0156 424.9688 181.3809 409.0581 C
f
75.6094 355.6084 m
82.6621 338.4932 73.8291 329.7686 77.1348 318.1934 c
81.8154 301.8066 105.2388 302.8984 109.3765 320.6035 c
117.7207 356.3086 84.686 380.3887 55.2422 383.3018 C
55.2422 375.7832 L
63.8809 372.291 71.2891 366.0938 75.6094 355.6084 c
f
124.1182 643.585 m
138.4995 634.2417 131.8857 620.5679 142.0381 611.6528 c
163.7065 592.6221 188.3989 623.6138 168.6753 649.3809 c
145.5156 679.6343 91.5674 660.3813 71.7173 642.2832 C
94.6265 649.7803 111.4224 651.8335 124.1182 643.585 c
f
68.0947 683.3823 m
65.2051 689.0464 60.4375 691.7202 55.2422 690.9663 C
55.2422 653.1772 L
66.5068 662.4263 73.0703 673.6284 68.0947 683.3823 c
f
123.5322 617.8672 m
132.6919 637.3398 94.7891 650.8398 70.6387 637.0386 C
81.6841 638.1089 90.063 627.8999 95.7808 621.8398 C
101.0083 613.8535 118.5713 607.3208 123.5322 617.8672 c
f
55.2422 643.2959 m
55.2422 643.2959 L
55.2422 643.2959 L
55.2422 643.2959 l
f
106.916 692.8267 m
106.7871 706.2808 103.4893 721.6587 91.5552 728.75 c
78.5454 736.481 62.417 734.0557 55.2422 725.4146 C
55.2422 702.6494 L
59.5225 696.4683 66.4023 696.0562 73.0439 693.75 c
84.0757 689.9189 86.2627 679.9375 83.0332 668.4507 c
80.3525 658.9141 67.2988 648.3008 55.2422 643.2959 C
55.2422 643.2959 L
79.5879 647.9648 106.5166 663.7163 106.916 692.8267 c
f
135.3633 697.9565 m
141.9087 716.0981 132.7671 747.3491 113.3213 736.5898 c
106.4336 732.7788 107.8149 722.8169 113.0747 707.9888 c
117.2109 696.3267 120.0405 679.4448 103.4185 666.0879 C
109.9429 667.0527 128.0679 676.083 135.3633 697.9565 c
f
156.1011 741.7251 m
148.5825 740.8599 144.9937 732.6812 145.2495 723.0054 c
145.5381 712.0801 146.3979 699.395 140.7329 694.0215 C
182.2617 707.4712 173.4214 743.2676 156.1011 741.7251 c
f
122.3789 668.3384 m
141.1919 680.9043 174.9067 662.6553 181.3491 676.4673 c
188.147 691.0366 153.6431 710.8433 122.3789 668.3384 C
f
181.3809 659.0581 m
174.4141 631.7876 205.1465 620.6245 191.5063 597.1958 C
206.2461 612.0854 217.8965 629.0952 215.0391 646.5405 C
212.3281 676.771 188.0156 674.9688 181.3809 659.0581 C
f
75.6094 605.6084 m
82.6621 588.4932 73.8291 579.7686 77.1348 568.1934 c
81.8154 551.8066 105.2388 552.8994 109.3765 570.6035 c
117.7207 606.3091 84.686 630.3882 55.2422 633.3018 C
55.2422 625.7837 L
63.8809 622.2905 71.2891 616.0933 75.6094 605.6084 c
f
273.9053 379.0049 m
254.4404 381.4238 243.834 374.0039 235.2686 368.7168 C
251.3926 373.7158 257.9531 369.0088 264.9395 363.917 C
270.5322 357.624 285.4551 355.3115 288.9385 365.2227 c
291.7227 373.1426 280.3594 378.2031 273.9053 379.0049 c
f
264.9395 613.917 m
270.5322 607.624 285.4551 605.3115 288.9385 615.2227 c
291.7227 623.1426 280.3594 628.2026 273.9053 629.0049 c
254.4404 631.4233 243.834 624.0034 235.2686 618.7163 C
251.3926 623.7158 257.9531 619.0088 264.9395 613.917 C
f
485.2686 368.7168 m
501.3926 373.7158 507.9531 369.0088 514.9395 363.917 C
520.5322 357.624 535.4551 355.3115 538.9385 365.2227 c
541.7227 373.1426 530.3594 378.2031 523.9053 379.0049 c
504.4404 381.4238 493.834 374.0039 485.2686 368.7168 C
f
514.9395 613.917 m
520.5322 607.624 535.4551 605.3115 538.9385 615.2227 c
541.7227 623.1426 530.3594 628.2026 523.9053 629.0049 c
504.4404 631.4233 493.834 624.0034 485.2686 618.7163 C
501.3926 623.7158 507.9531 619.0088 514.9395 613.917 C
f
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
